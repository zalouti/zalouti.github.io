<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>第二基地</title>
        <link>https://zalouti.github.io/</link>
        <description>Recent content on 第二基地</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 12 May 2022 07:02:12 +0800</lastBuildDate><atom:link href="https://zalouti.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>第十章·材料力学中的能量方法</title>
        <link>https://zalouti.github.io/p/%E7%AC%AC%E5%8D%81%E7%AB%A0%E6%9D%90%E6%96%99%E5%8A%9B%E5%AD%A6%E4%B8%AD%E7%9A%84%E8%83%BD%E9%87%8F%E6%96%B9%E6%B3%95/</link>
        <pubDate>Thu, 12 May 2022 07:02:12 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E7%AC%AC%E5%8D%81%E7%AB%A0%E6%9D%90%E6%96%99%E5%8A%9B%E5%AD%A6%E4%B8%AD%E7%9A%84%E8%83%BD%E9%87%8F%E6%96%B9%E6%B3%95/</guid>
        <description>&lt;h1 id=&#34;材料力学中的能量方法&#34;&gt;材料力学中的能量方法&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;核心思想：从牛顿、莱布尼茨的局部化梳理分析，到欧拉、拉格朗日的整体化数理分析。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;基本概念&#34;&gt;基本概念&lt;/h2&gt;
&lt;h3 id=&#34;功和余功&#34;&gt;功和余功&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;功：以位移作为积分变量&lt;/li&gt;
&lt;li&gt;余功：以力作为积分变量&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;应变能和余应变能&#34;&gt;应变能和余应变能&lt;/h3&gt;
&lt;p&gt;应变能以应变为积分变量
$$
v_{\epsilon}=\int d \epsilon-应变比能
\\
V_{\epsilon}=\int v_{\epsilon}dV-应变能
$$
余应变能以应力为积分变量
$$
\nu_{\sigma}=\int \varepsilon d \sigma-余应变比能
\\
V_{\sigma}=\int \nu_{\sigma} dV-应变能
$$
计算的前提：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;保持平截面假定&lt;/li&gt;
&lt;li&gt;满足静力学基本方程&lt;/li&gt;
&lt;li&gt;细长杆忽略了剪力影响&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于线性问题，应变能与余应变能相等：
$$
V_{\varepsilon}=V_{\sigma}=\int_l \frac{F^2_{N_x}dx}{2EA}+
\int_l \frac{M^2_{x}dx}{2GI_P}+
\int_l \frac{M^2_{y}dx}{2EI_y}+
\int_l \frac{M^2_{z}dx}{2EI_z}
$$
对于内力分量不连续时，可以采用分段计算：
$$
V_{\varepsilon}=\sum_{i} \frac{F_{\mathrm{N} i}^{2} l_{i}}{2 E A}+\sum_{i} \frac{M_{i}^{2} l_{i}}{2 E I}+\sum_{i} \frac{M_{x i}^{2} l_{i}}{2 G I_{\mathrm{P}}}
$$&lt;/p&gt;
&lt;h2 id=&#34;叠加原理的局限&#34;&gt;叠加原理的局限&lt;/h2&gt;
&lt;h3 id=&#34;轴向拉伸时&#34;&gt;轴向拉伸时&lt;/h3&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/05/22/TRJLS2GB4gdFUvf.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/05/22/TRJLS2GB4gdFUvf.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;线弹性位移可叠加&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;线弹性位移可叠加&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/05/22/uW8Mx9J4okY2Iv6.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/05/22/uW8Mx9J4okY2Iv6.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;线弹性应变能不可叠加&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;线弹性应变能不可叠加&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这是由于先施加的力在后续力施加产生的位移上也做功的原因。&lt;/p&gt;
&lt;h3 id=&#34;横向施加力时&#34;&gt;横向施加力时&lt;/h3&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/05/22/8YRaIWxU7y1CFjg.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/05/22/8YRaIWxU7y1CFjg.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;同样不能叠加的例子&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;同样不能叠加的例子&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;特例&#34;&gt;特例&lt;/h3&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/05/22/vkJzisOyB27ejNt.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/05/22/vkJzisOyB27ejNt.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;可以叠加的特例&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;可以叠加的特例&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;功互等定理&#34;&gt;功互等定理&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;在线弹性、小变形下，应变能时状态量，具有随加载顺序无关性&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/05/22/aRY4uJ9NgM3WwFO.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/05/22/aRY4uJ9NgM3WwFO.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;image-20220522113327789&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;image-20220522113327789&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;功的互等定理&lt;/strong&gt;：一个力系的力在另一个力系引起的相应的位移上所作之功等于另一个力系的力在这一个力系引起的相应的位移上所作之功。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;虚位移原理&#34;&gt;虚位移原理&lt;/h2&gt;
&lt;h3 id=&#34;变形体的虚位移原理&#34;&gt;变形体的虚位移原理&lt;/h3&gt;
&lt;p&gt;对于在平衡力系作用下的变形体，当给其与约束条件一致的虚变形时，如果依然保持平衡，则外力在虚位移上作的虚功与内力在其相应虚变形上所作虚功之和为零。&lt;/p&gt;
&lt;p&gt;公式为：
$$
W_{\mathrm{e}}+W_{\mathrm{i}}=0
$$&lt;/p&gt;
&lt;h3 id=&#34;虚位移原理的多样性&#34;&gt;虚位移原理的多样性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;可以是与真实位移有关的位移，也可以是与真实位移无关的位移。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以是真实位移的增量，这时外力的虚功全部转变为应变能的增量，此时虚位移原理变为：
$$
\delta W_{\mathrm{e}}=\delta V_{\varepsilon}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;卡式第一定理&#34;&gt;卡式第一定理&lt;/h2&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/05/22/ieCWtuwgOczjoFx.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/05/22/ieCWtuwgOczjoFx.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;卡式第一定理&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;卡式第一定理&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;应变能表示成位移的函数
$$
V_{\varepsilon}=V_{\varepsilon}\left(\Delta_{1}, \Delta_{2}, \cdots, \Delta_{n}\right)
$$
应变能对于某一个位移的一阶偏导, 等于作用在这一位 移处, 沿着这一位移方向上的力。此即卡氏第一定理, 数学表达式为
$$
F_{\mathrm{P} 1}=\frac{\partial V_{\varepsilon}}{\partial \Delta_{1}}, F_{\mathrm{P} 2}=\frac{\partial V_{\varepsilon}}{\partial \Delta_{2}}, \cdots, F_{\mathrm{P} n}=\frac{\partial V_{\varepsilon}}{\partial \Delta_{n}}
$$&lt;/p&gt;
&lt;h2 id=&#34;虚力原理&#34;&gt;虚力原理&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;弹性体&lt;/strong&gt;保持变形协调的充分和必要条件是外力虚余功 $\delta W_{\mathrm{Ce}}$ 等于内力虚余功 $\delta W_{\mathrm{Ci}}$ :
$$
\delta W_{C \mathrm{e}}=\delta W_{C \mathrm{i}}
$$&lt;/p&gt;
&lt;h2 id=&#34;卡式第二定理&#34;&gt;卡式第二定理&lt;/h2&gt;
&lt;h3 id=&#34;恩格赛第一定理&#34;&gt;恩格赛第一定理&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;不要求为线弹性&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;恩格赛第一定理
$$
\Delta_{1}=\frac{\partial V_{\mathrm{C}}}{\partial F_{\mathrm{P} 1}}, \Delta_{2}=\frac{\partial V_{\mathrm{C}}}{\partial F_{\mathrm{P} 2}}, \cdots \Delta_{i}=\frac{\partial V_{\mathrm{C}}}{\partial F_{\mathrm{P} i}}, \cdots, \Delta_{n}=\frac{\partial V_{\mathrm{C}}}{\partial F_{\mathrm{P} n}}
$$
弹性体或弹性系统的余应变能对于某一个力的偏导数, 等于与这一个力对应的位移。此即恩格赛第一定理。&lt;/p&gt;
&lt;h3 id=&#34;卡式第二定理-1&#34;&gt;卡式第二定理&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;卡氏第二定理只适用与小变形情形，而且力与位移必须满足线性关系&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于线性问题，应变能与余应变能相等：
$$
V_{\varepsilon}=V_c
$$&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/05/22/e1MKGXIalmUSgnw.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/05/22/e1MKGXIalmUSgnw.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;卡式第二定理&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;卡式第二定理&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;构件或结构的应变能对于某一个载荷的一阶偏导教，等于这一载荷的作用点处、沿着这一载荷作用方向上的位移。其数学表达式为
$$
\Delta_{1}=\frac{\partial V_{\varepsilon}}{\partial F_{\mathrm{P} 1}}, \Delta_{2}=\frac{\partial V_{\varepsilon}}{\partial F_{\mathrm{P} 2}}, \cdots, \Delta_{n}=\frac{\partial V_{\varepsilon}}{\partial F_{\mathrm{P} n}}
$$&lt;/p&gt;
&lt;h3 id=&#34;卡式第二定理在超静定问题上的应用&#34;&gt;卡式第二定理在超静定问题上的应用&lt;/h3&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/05/30/JKVl8yMeTUqtsDL.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/05/30/JKVl8yMeTUqtsDL.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;求梁的约束力&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;求梁的约束力&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;已知应变能为：
$$
V_{\varepsilon}=\int_l\frac{M^2dx}{2EI}=V_{\varepsilon}(q,F_B)
$$
由卡式第二定理和变形协调方程可知：
$$
0=w_B=\Delta_B=\frac{\partial V_{\varepsilon}}{\partial F_B}
$$
即可求出对应的约束力$F_B$&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Hints&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;那么应变能对于$q$求偏导得到的是什么？
&lt;ul&gt;
&lt;li&gt;对应的广义位移，即下沉的面积&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;一句话总结&#34;&gt;一句话总结&lt;/h2&gt;
&lt;p&gt;虚位移原理（卡式第一原理）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;满足变形协调条件的平衡方程&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;卡式第二定理&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;满足平衡条件的变形协调方程&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>Program</title>
        <link>https://zalouti.github.io/p/program/</link>
        <pubDate>Wed, 11 May 2022 23:18:05 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/program/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;Below are some relevant programs which major in scientific computing, applied math, computational engineering, etc.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;usa&#34;&gt;USA&lt;/h1&gt;
&lt;h2 id=&#34;brown-university&#34;&gt;Brown University&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://graduateprograms.brown.edu/graduate-program/data-enabled-computational-engineering-and-science-scm&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Data-Enabled Computational Engineering and Science&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;language&#34;&gt;Language&lt;/h3&gt;
&lt;h3 id=&#34;prerequisite&#34;&gt;Prerequisite&lt;/h3&gt;
&lt;h1 id=&#34;switzerland&#34;&gt;Switzerland&lt;/h1&gt;
&lt;h1 id=&#34;uk&#34;&gt;UK&lt;/h1&gt;
&lt;h1 id=&#34;rankings&#34;&gt;Rankings&lt;/h1&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.collegefactual.com/majors/mathematics-and-statistics/applied-mathematics/rankings/best-graduate-schools/masters-degrees/#discover_best_schools&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;2022 Best Applied Mathematics Master&amp;rsquo;s Degree Schools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.gousa.study/ms-in-computational-engineering-in-usa&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;computational engineering science of master degree in USA&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>第九章·压杆稳定性</title>
        <link>https://zalouti.github.io/p/%E7%AC%AC%E4%B9%9D%E7%AB%A0%E5%8E%8B%E6%9D%86%E7%A8%B3%E5%AE%9A%E6%80%A7/</link>
        <pubDate>Mon, 09 May 2022 08:04:53 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E7%AC%AC%E4%B9%9D%E7%AB%A0%E5%8E%8B%E6%9D%86%E7%A8%B3%E5%AE%9A%E6%80%A7/</guid>
        <description>&lt;h1 id=&#34;压杆的稳定性问题&#34;&gt;压杆的稳定性问题&lt;/h1&gt;
&lt;h2 id=&#34;压杆稳定的基本概念&#34;&gt;压杆稳定的基本概念&lt;/h2&gt;
&lt;h3 id=&#34;弹性平衡稳定性的静力学准则&#34;&gt;弹性平衡稳定性的静力学准则&lt;/h3&gt;
&lt;p&gt;压杆存在两种平衡构型：&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/05/09/elZc1opBLmxSPJ6.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/05/09/elZc1opBLmxSPJ6.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;压杆平衡构型&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;压杆平衡构型&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在扰动作用下，直线平衡构形转变为弯曲平衡构形，扰动除去后，能够恢复到直线平衡构形，则称原来的直线平衡构形是&lt;strong&gt;稳定的&lt;/strong&gt;。此时载荷较小：
$$
F_p&amp;lt;F_{Pcr}
$$
在扰动作用下，直线平衡构形转变为弯曲平衡构形，扰动除去后，不能恢复到直线平衡构形，则称原来的直线平衡构形是&lt;strong&gt;不稳定的&lt;/strong&gt;。此时载荷较大：
$$
F_p&amp;gt;F_{Pcr}
$$
压杆由直线平衡构型到弯曲平衡构型的转变过程，称为**“屈曲”&lt;strong&gt;。由于屈曲，压杆产生了侧向位移，称为&lt;/strong&gt;屈曲位移**。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/05/09/LIzhwZQPVnuMido.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/05/09/LIzhwZQPVnuMido.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;平衡路径及其分叉&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;平衡路径及其分叉&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;稳定的平衡构型与不稳定的平衡构型之间的分界点称为&lt;strong&gt;临界点&lt;/strong&gt;，细长压杆从临界点开始，平衡路径出现分叉，临界点对应的载荷称为临界载荷，用$F_{Pcr}$表示&lt;/p&gt;
&lt;h2 id=&#34;两端铰支压杆的临界载荷欧拉公式&#34;&gt;两端铰支压杆的临界载荷欧拉公式&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;假设压力略高于临界力，在外界扰动下压杆处于微弯状态。考察微弯状态下局部压杆的平衡（小挠度）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/05/09/6Bj49L1Wdreu7cY.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/05/09/6Bj49L1Wdreu7cY.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;微微弯曲的杆件&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;微微弯曲的杆件&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;分析力矩平衡可得：
$$
M(x)=F_{\mathrm{P}} w(x) \\
M(x)=-E I \frac{\mathrm{d}^{2} w}{\mathrm{~d} x^{2}} \\
\frac{\mathrm{d}^{2} w}{\mathrm{~d} x^{2}}+\frac{F_{\mathrm{P}}}{E I} w=0 \\
k^{2}=\frac{F_{\mathrm{P}}}{E I}
$$
解微分方程，加上定解条件：
$$
w(0)=0
\\
w(l)=0
$$
去除平凡解，可得到：
$$
F_{\mathrm{Pcr}}=\frac{\pi^{2} n^{2} E I}{l^{2}}\\
w(x)=A \sin \frac{n \pi x}{l}
$$
A为未定常数，称为屈曲模态幅值。这表明屈曲位移是不确定的量。这与开始推导公式时假设压杆处于任意微弯状态是一致的。&lt;/p&gt;
&lt;p&gt;更高阶的n，构型并不稳定，会在受微扰下回归$n=1$，或者可以增加约束，提高临界载荷&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/05/09/TL2BSA4eEdZxDQI.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/05/09/TL2BSA4eEdZxDQI.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;增加约束，提高临界载荷&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;增加约束，提高临界载荷&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;其他刚性支承压杆的临界载荷&#34;&gt;其他刚性支承压杆的临界载荷&lt;/h3&gt;
&lt;p&gt;$$
F_{\mathrm{Por}}=\frac{\pi^{2} E I}{(\mu l)^{2}}
$$&lt;/p&gt;
&lt;p&gt;$\mu l$ 为不同压杆屈曲后挠曲线上正弦半波的长度, 称为&lt;strong&gt;有效长度&lt;/strong&gt;； $\mu$ 为反映不同支承影响的系数, 称为&lt;strong&gt;长度系数&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;临界应力与临界总图&#34;&gt;临界应力与临界总图&lt;/h2&gt;
&lt;h3 id=&#34;临界应力与长细比的概念&#34;&gt;临界应力与长细比的概念&lt;/h3&gt;
&lt;p&gt;欧拉公式只有在弹性范围内才是适用的。这就要求在临界载荷作用下，压杆在直线平衡构形时，其横截面上的正应力小于或等于材料的比例极限，其中$\sigma_{cr}$称为临界应力：
$$
\sigma_{c r}=\frac{F_{\mathrm{Pcr}}}{A} \leq \sigma_{\mathrm{P}}
$$
引入长细比$\lambda$：
$$
\lambda=\frac{\mu l}{i}\quad i=\sqrt{\frac{I}{A}}
$$
用长细比表达细长杆件临界应力公式：
$$
\sigma_{\mathrm{cr}}=\frac{F_{\mathrm{Pcr}}}{A}=\frac{\frac{\pi^{2} E I}{(\mu l)^{2}}}{A}=\frac{\pi^{2} E}{\lambda^{2}}
$$&lt;/p&gt;
&lt;h3 id=&#34;三类不同压杆的不同失效形式&#34;&gt;三类不同压杆的不同失效形式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;细长杆：长细比$λ$大于或等于某个极限值$λ_p$时，压杆将发生弹性屈曲。这时，压杆在直线平衡构形下横截面上的正应力不超过材料的比例极限，这类压杆称为细长杆&lt;/li&gt;
&lt;li&gt;长中杆：长细比$λ$小于$λ_p$，但大于或等于另一个极限值λs时，压杆也会发生屈曲。这时，压杆在直线平衡构形下横截面上的正应力已经超过材料的比例极限，截面上某些部分已进入塑性状态。这种屈曲称为非弹性屈曲。这类压杆称为中长杆。&lt;/li&gt;
&lt;li&gt;粗短杆：长细比$λ$小于极限值$λ_s$时，压杆不会发生屈曲，但将会发生屈服。这类压杆称为粗短杆。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;三类压杆的临界应力公式&#34;&gt;三类压杆的临界应力公式&lt;/h3&gt;
&lt;p&gt;对于细长杆, 临界应力公式：
$$
\sigma_{\mathrm{cr}}=\frac{\pi^{2} E}{\lambda^{2}}
$$
对于粗短杆, 因为不发生屈曲, 而只发生屈服 (㓞性材 料），故其临界应力即为材料的屈服应力
$$
\sigma_{\mathrm{cr}}=\sigma_{\mathrm{s}}
$$
对于中长杆, 由于发生了塑性变形, 理论计算比较复杂, 工程中大多采用直线经验公式计算其临界应力, 最常用是直线公式:
$$
\sigma_{\mathrm{cr}}=a-b \lambda
$$
其中a和b为与材料有关的常数，单位为MPa。&lt;/p&gt;
&lt;p&gt;根据上述关系，可以绘制出临界应力总图：&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/05/09/koq9NaGviDApLxR.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/05/09/koq9NaGviDApLxR.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;临界应力总图&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;临界应力总图&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;临界应力总图将强度设计与稳定性设计统一在一张图纸中,其中：
$$
\lambda_{\mathrm{P}}=\sqrt{\frac{\pi^{2} E}{\sigma_{\mathrm{P}}}}
\\
\lambda_{\mathrm{s}}=\frac{a-\sigma_{\mathrm{s}}}{b}
$$&lt;/p&gt;
&lt;h2 id=&#34;压杆稳定性设计的安全因数法&#34;&gt;压杆稳定性设计的安全因数法&lt;/h2&gt;
&lt;p&gt;采用安全因数法时, 稳定性设计准则一般可表示为
$$
{n}&lt;em&gt;{\mathrm{w}} \geq[{n}]&lt;/em&gt;{\mathrm{st}}
$$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$[n]_{st}$为规定安全因数&lt;/li&gt;
&lt;li&gt;$\sigma_w=\frac{F_w}{A}$为工作应力&lt;/li&gt;
&lt;li&gt;$\sigma_{cr}=\frac{F_{cr}}{A}$为临界应力&lt;/li&gt;
&lt;li&gt;$n_{\mathrm{w}}=\frac{\sigma_{\mathrm{cr}}}{\sigma_{\mathrm{w}}}$为工作安全因数&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;结论与讨论&#34;&gt;结论与讨论&lt;/h2&gt;
&lt;p&gt;对于考虑强度、刚度、稳定性、超静定的综合问题，优先考虑&lt;strong&gt;超静定问题&lt;/strong&gt;，即给出变形协调方程。&lt;/p&gt;
&lt;h3 id=&#34;影响压杆承载能力的因素&#34;&gt;影响压杆承载能力的因素&lt;/h3&gt;
&lt;p&gt;压杆丧失稳定，由直线平衡构形转变为弯曲平衡构形，这一过程不是某个截面或某几个截面的行为，而是压杆的一种&lt;strong&gt;整体行为&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;一般情形下，控制构件&lt;strong&gt;强度&lt;/strong&gt;的因素主要是个别危险截面上的内力、危险面的几何形状和尺寸。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>第八章·应力状态与强度理论及其工程应用（下）</title>
        <link>https://zalouti.github.io/p/%E7%AC%AC%E5%85%AB%E7%AB%A0%E5%BA%94%E5%8A%9B%E7%8A%B6%E6%80%81%E4%B8%8E%E5%BC%BA%E5%BA%A6%E7%90%86%E8%AE%BA%E5%8F%8A%E5%85%B6%E5%B7%A5%E7%A8%8B%E5%BA%94%E7%94%A8%E4%B8%8B/</link>
        <pubDate>Mon, 18 Apr 2022 08:16:35 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E7%AC%AC%E5%85%AB%E7%AB%A0%E5%BA%94%E5%8A%9B%E7%8A%B6%E6%80%81%E4%B8%8E%E5%BC%BA%E5%BA%A6%E7%90%86%E8%AE%BA%E5%8F%8A%E5%85%B6%E5%B7%A5%E7%A8%8B%E5%BA%94%E7%94%A8%E4%B8%8B/</guid>
        <description>&lt;h1 id=&#34;应力状态与强度理论及其工程应用下&#34;&gt;应力状态与强度理论及其工程应用（下）&lt;/h1&gt;
&lt;h2 id=&#34;强度理论概述&#34;&gt;强度理论概述&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;建立一般应力状态下强度失效准则的思路
&lt;ol&gt;
&lt;li&gt;已知简单应力状态下的失效条件&lt;/li&gt;
&lt;li&gt;实际工程中承受复杂载荷&lt;/li&gt;
&lt;li&gt;但是材料失效的原因是不变的，因此存在由简单情况导出复杂情况下失效的条件&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;关于脆性断裂的强度理论&#34;&gt;关于脆性断裂的强度理论&lt;/h2&gt;
&lt;h3 id=&#34;第一强度理论最大拉应力&#34;&gt;第一强度理论（最大拉应力）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;材料受到破坏的原因是由于材料微元内最大拉应力达到了某一个共同的极限值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/04/18/UM7nayfPv6cNe1g.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/04/18/UM7nayfPv6cNe1g.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;第一强度理论&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;第一强度理论&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;三向应力状态下最大应力为$\sigma_1$，对应单向荷载，可知失效判据与强度条件分别为：
$$
\sigma_{1}=\sigma_{\mathrm{b}} \\
\sigma_{1}=\frac{\sigma_{\mathrm{b}}}{n_{b}}=[\sigma]
$$&lt;/p&gt;
&lt;h3 id=&#34;第二强度理论最大拉应变&#34;&gt;第二强度理论（最大拉应变）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;材料受到破坏的原因是由于材料微元内最大拉应变达到了某一个共同的极限值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/04/18/nmUhz8J2ew5BjST.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/04/18/nmUhz8J2ew5BjST.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;第二强度理论&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;第二强度理论&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;三向应力状态下最大应变为$\sigma_1$对应的应变$\varepsilon_1$，对应单向荷载，可知失效判据与强度条件分别为：&lt;/p&gt;
&lt;p&gt;失效判据
$$
\sigma_{1}-\nu\left(\sigma_{2}+\sigma_{3}\right)=\sigma_{\mathrm{b}}
$$
设计准则
$$
\sigma_{1}-\nu\left(\sigma_{2}+\sigma_{3}\right) \leq \frac{\sigma_{\mathrm{b}}}{n_{b}}=[\sigma]
$$&lt;/p&gt;
&lt;h2 id=&#34;关于屈服的强度理论&#34;&gt;关于屈服的强度理论&lt;/h2&gt;
&lt;h3 id=&#34;第三强度理论最大切应力准则&#34;&gt;第三强度理论（最大切应力准则）&lt;/h3&gt;
&lt;p&gt;对于&lt;strong&gt;韧性材料（如：铸铁）&lt;/strong&gt;，拉伸时在$45\degree$方向出现滑移线，扭转时沿着横截面断裂，都是由于对应的&lt;strong&gt;截面上切应力最大&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;推广至一般情况为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;无论材料处于什么应力状态，只要发生屈服，都是由于微元内的最大切应力达到了某一个共同的极限值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/04/18/A8Z5rQRwJTPYdql.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/04/18/A8Z5rQRwJTPYdql.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;第三强度理论&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;第三强度理论&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;三向应力状态下，最大切应力为$\tau_{max}=\frac{\sigma_1-\sigma_3}{2}$&lt;/p&gt;
&lt;p&gt;失效判据 
$$
\sigma_{1}-\sigma_{3}=\sigma_{s}
$$
设计准则
$$
\sigma_{1}-\sigma_{3} \leq \frac{\sigma_{\mathrm{s}}}{n_{s}}=[\sigma]
$$&lt;/p&gt;
&lt;h3 id=&#34;第四强度理论最大畸变能准则&#34;&gt;第四强度理论（最大畸变能准则）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;无论材料处于什么应力状态，只要发生屈服，都是由于微元的形状改变能密度达到了一个极限值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/04/18/qewuZ4zs2DyVvxA.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/04/18/qewuZ4zs2DyVvxA.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;第四强度理论&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;第四强度理论&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;失效判据 
$$
\sqrt{\frac{1}{2}\left[\left(\sigma_{1}-\sigma_{2}\right)^{2}+\left(\sigma_{2}-\sigma_{3}\right)^{2}+\left(\sigma_{3}-\sigma_{1}\right)^{2}\right]}=\sigma_{s}
$$
设计准则
$$
\sqrt{\frac{1}{2}\left[\left(\sigma_{1}-\sigma_{2}\right)^{2}+\left(\sigma_{2}-\sigma_{3}\right)^{2}+\left(\sigma_{3}-\sigma_{1}\right)^{2}\right]} \leq \frac{\sigma_{s}}{n_{s}}=[\sigma]
$$
&lt;em&gt;Hints&lt;/em&gt;(关于两个屈服准则的评述):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;假说不同的失效原因，导致了不同的屈服准则&lt;/li&gt;
&lt;li&gt;哪一个更保守？&lt;strong&gt;最大切应力更加保守&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;哪一个更加精确？&lt;strong&gt;最大畸变能更加精确&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;注意$\sigma_s$是材料属性，不随外力变化&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;圆轴承受弯曲与扭转共同作用时的强度计算&#34;&gt;圆轴承受弯曲与扭转共同作用时的强度计算&lt;/h2&gt;
&lt;p&gt;对于同时承受弯曲与扭转的圆轴，此时危险面上同时受到弯矩与扭矩（忽略剪力产生的横向弯曲）&lt;/p&gt;
&lt;p&gt;在危险截面上取一微元，可得到最大的正应力与剪应力分别为：
$$
\sigma=\frac{M}{W} \quad \tau=\frac{M_{x}}{W_{\mathrm{P}}}
$$&lt;/p&gt;
&lt;p&gt;其中&lt;/p&gt;
&lt;p&gt;$$
W=\frac{\pi d^{3}}{32}\quad W_{\mathrm{P}}=\frac{\pi d^{3}}{16}
$$&lt;/p&gt;
&lt;p&gt;此状态下，微元的受力为：&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/04/18/pPwaSMBTvq6URsi.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/04/18/pPwaSMBTvq6URsi.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;微元受力&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;微元受力&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;传动轴一般选用韧性材料，因此采用第三、第四设计准则：&lt;/p&gt;
&lt;p&gt;对于最大剪应力准则：
$$
\sigma_{1}-\sigma_{3}=\sqrt{\sigma^{2}+4 \tau^{2}} \leq[\sigma]
$$
对于最大畸变能准则：
$$
\sqrt{\frac{1}{2}\left[\left(\sigma_{1}-\sigma_{2}\right)^{2}+\left(\sigma_{2}-\sigma_{3}\right)^{2}+\left(\sigma_{3}-\sigma_{1}\right)^{2}\right]}=\sqrt{\sigma^{2}+3 \tau^{2}} \leq[\sigma]
$$
将 $\sigma$ 和 $\tau$ 的表达式代入上式, 并考虑到 $W_{\mathrm{P}}=2 W$, 便得到
$$
\frac{\sqrt{M^{2}+M_{x}^{2}}}{W} \leq[\sigma] \quad \frac{\sqrt{M^{2}+0.75 M_{x}^{2}}}{W} \leq[\sigma]
$$&lt;/p&gt;
&lt;h3 id=&#34;计算简图&#34;&gt;计算简图&lt;/h3&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/04/18/5WxGezohwVKi9da.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/04/18/5WxGezohwVKi9da.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;计算简图&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;计算简图&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;对于借助于齿轮的传动轴，常常讲受力简化值轴线形心，只画出对应的轴线受力，便于受力分析。&lt;/p&gt;
&lt;h3 id=&#34;扭转与弯曲&#34;&gt;扭转与弯曲&lt;/h3&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/04/18/P1VfGH8M2WQ6Nrm.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/04/18/P1VfGH8M2WQ6Nrm.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;危险点及其应力状态&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;危险点及其应力状态&lt;/figcaption&gt;
	
&lt;/figure&gt;
$$
\sigma=\frac{M}{W}, \tau=\frac{M_x}{W_p}, \quad M=\sqrt{M_{y}^{2}+M_{z}^{2}}, \quad W_{p}=2W
\\
\sigma_{r 3}=\sqrt{\sigma^{2}+4 \tau^{2}}=\frac{M_{r 3}}{W} \leq[\sigma] , \quad M_{r 3}=\sqrt{M^{2}+M_{x}^{2}}
\\
\sigma_{r 4}=\sqrt{\sigma^{2}+3 \tau^{2}}=\frac{M_{r 4}}{W} \leq[\sigma], \quad M _{r 4}=\sqrt{M^{2}+0.75  M _{x}^{2}}
$$&lt;/p&gt;
&lt;h2 id=&#34;同时承受弯矩扭矩剪力和轴力作用的圆轴&#34;&gt;同时承受弯矩、扭矩、剪力和轴力作用的圆轴&lt;/h2&gt;
&lt;p&gt;危险点的应力状态仍然为$\sigma$、$\tau$同时作用的清醒，所不同的是：
$$
\sigma=-\frac{M}{W}-\frac{F_{Nx}}{A}\quad \tau=\frac{M_x}{W_P}
$$&lt;/p&gt;
&lt;h2 id=&#34;圆柱形薄壁容器的应力分析与强度设计&#34;&gt;圆柱形薄壁容器的应力分析与强度设计&lt;/h2&gt;
&lt;p&gt;承受内压的薄壁容器，主应力大小为：
$$
\sigma_{1}=\sigma_{t}=\frac{p D}{2 \delta}, \quad \sigma_{2}=\sigma_{m}=\frac{p D}{4 \delta}, \quad \sigma_{3}=0
$$
考虑到薄壁容器由韧性材料制成，可以采用最大剪应力或畸变能密度准则进行强度设计，采用第三强度理论则有：
$$
\sigma_{1}-\sigma_{3}=\frac{p D}{2 \delta}-0 \leq[\sigma]
$$&lt;/p&gt;
&lt;h3 id=&#34;计算直径的改变量&#34;&gt;计算直径的改变量&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;从周长考虑，而不是从直径直接考虑&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;设周长为$l$、直径为$D$，则有
$$
l=\pi D\to \Delta l=\pi \Delta D
\\
\varepsilon_t=\frac{\Delta l}{l}=\frac{\Delta D}{D}=\frac{1}{E}(\sigma_t-\nu\sigma_m)
$$&lt;/p&gt;
&lt;h2 id=&#34;结论与讨论&#34;&gt;结论与讨论&lt;/h2&gt;
&lt;h3 id=&#34;适用范围&#34;&gt;适用范围&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;大多数韧性材料在一般应力状态下发生塑性屈服&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;例外：韧性材料只受各向等拉伸时，只受正应力，此时应力圆为一个&lt;strong&gt;点源&lt;/strong&gt;，微元体的任何面上受力均为正应力，没有剪应力。&lt;/p&gt;
&lt;p&gt;这种特殊状态类似于流体静力学。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;大多数脆性材料在一本应力状态下发生脆性断裂&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在只受压应力时，不会被拉断，很有可能被剪切&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;开放性问题：&lt;/p&gt;
&lt;p&gt;圆柱形韧性薄壁容器水平轴线上面出现了水平裂纹，求水平裂纹的内部情况？&lt;/p&gt;
&lt;p&gt;（受剪断）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Gsoc</title>
        <link>https://zalouti.github.io/p/gsoc/</link>
        <pubDate>Tue, 12 Apr 2022 21:21:13 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/gsoc/</guid>
        <description>&lt;h1 id=&#34;gsoc&#34;&gt;Gsoc&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Gsoc全称为Google summer of code&lt;/p&gt;
&lt;p&gt;记录一些自己感兴趣的项目与方向&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;julia&#34;&gt;Julia&lt;/h2&gt;
&lt;h3 id=&#34;dynamical-systems-complex-systems--nonlinear-dynamics--summer-of-codehttpsjulialangorgjsocgsocjuliadynamicsdynamical_systems_complex_systems_nonlinear_dynamics_summer_of_code&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://julialang.org/jsoc/gsoc/juliadynamics/#dynamical_systems_complex_systems_nonlinear_dynamics_summer_of_code&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Dynamical systems, complex systems &amp;amp; nonlinear dynamics – Summer of Code&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&#34;动态系统jlhttpsjulialangorgjsocgsocjuliadynamicsdynamicalsystemsjl&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://julialang.org/jsoc/gsoc/juliadynamics/#dynamicalsystemsjl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;动态系统.jl&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;**难度：**容易到中等，取决于选择实现的算法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;时长&lt;/strong&gt;：175 小时。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://juliadynamics.github.io/DynamicalSystems.jl/latest/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;DynamicalSystems.jl&lt;/a&gt;是一个&lt;a class=&#34;link&#34; href=&#34;https://dsweb.siam.org/The-Magazine/Article/winners-of-the-dsweb-2018-software-contest&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;屡获殊荣的&lt;/a&gt;Julia 软件库，用于动态系统、非线性动力学、确定性混沌和非线性时间序列分析。它有一系列令人印象深刻的功能，但永远都不够。在这个项目中，贡献者将能够用新算法丰富 DynamicalSystems.jl，并丰富他们在非线性动力学和复杂系统计算机辅助探索方面的知识。&lt;/p&gt;
&lt;p&gt;可能的项目总结在&lt;a class=&#34;link&#34; href=&#34;https://github.com/issues?q=is%3Aopen&amp;#43;is%3Aissue&amp;#43;repo%3AJuliaDynamics%2FChaosTools.jl&amp;#43;repo%3AJuliaDynamics%2FDynamicalSystemsBase.jl&amp;#43;repo%3AJuliaDynamics%2FDelayEmbeddings.jl&amp;#43;repo%3AJuliaDynamics%2FRecurrenceAnalysis.jl&amp;#43;repo%3AJuliaDynamics%2FDynamicalSystems.jl&amp;#43;label%3A%22wanted&amp;#43;feature%22&amp;#43;&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;图书馆的通缉特征中&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推荐技能&lt;/strong&gt;：熟悉非线性动力学和/或微分方程以及 Julia 语言。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：DynamicalSystems.jl 的有据可查、经过充分测试的新算法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：&lt;a class=&#34;link&#34; href=&#34;https://github.com/Datseris&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;乔治·达瑟里斯&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;machine-learning-projects---summer-of-codehttpsjulialangorgjsocgsocmachine-learningmachine_learning_projects_-_summer_of_code&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://julialang.org/jsoc/gsoc/machine-learning/#machine_learning_projects_-_summer_of_code&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Machine Learning Projects - Summer of Code&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&#34;cuda-hackinghttpsjulialangorgjsocgsocmachine-learningcuda_hacking&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://julialang.org/jsoc/gsoc/machine-learning/#cuda_hacking&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CUDA Hacking&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Time: 175h&lt;/p&gt;
&lt;p&gt;Are you a performance nut? This project is aimed at expanding our coverage of high performance kernels and libraries widely used across machine learning workflows.&lt;/p&gt;
&lt;h5 id=&#34;expected-outcomeshttpsjulialangorgjsocgsocmachine-learningexpected_outcomes&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://julialang.org/jsoc/gsoc/machine-learning/#expected_outcomes&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Expected Outcomes&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;Help us implement cutting-edge CUDA kernels in Julia for operations important across deep learning, scientific computing and more. We also need help developing our wrappers for machine learning, sparse matrices and more, as well as CI and infrastructure. Contact us to develop a project plan.&lt;/p&gt;
&lt;p&gt;Mentors: &lt;a class=&#34;link&#34; href=&#34;https://github.com/maleadt&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Tim Besard&lt;/a&gt;, &lt;a class=&#34;link&#34; href=&#34;https://github.com/DhairyaLGandhi&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Dhairya Gandhi&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;sciml-数值微分方程项目---google-summer-of-codehttpsscimlaigsocgsoc_diffeqsciml_numerical_differential_equations_projects_google_summer_of_code&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_diffeq/#sciml_numerical_differential_equations_projects_google_summer_of_code&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SciML 数值微分方程项目 - Google Summer of Code&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id=&#34;原生-julia-odesdedaedde-和-spde-求解器httpsscimlaigsocgsoc_diffeqnative_julia_ode_sde_dae_dde_and_spde_solvers&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_diffeq/#native_julia_ode_sde_dae_dde_and_spde_solvers&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;原生 Julia ODE、SDE、DAE、DDE 和 (S)PDE 求解器&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;DifferentialEquations.jl 生态系统拥有一套广泛的最先进的求解微分方程的方法，这些方法由&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SciML 科学机器学习软件组织&lt;/a&gt;托管。通过在同一调度系统下混合本地方法和包装方法，&lt;a class=&#34;link&#34; href=&#34;https://arxiv.org/abs/1807.06430&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;DifferentialEquations.jl 既可以作为部署和研究最现代有效方法的系统&lt;/a&gt;. 虽然大多数基本方法已经开发和优化，但许多较新的方法需要高性能实现和对其效率要求的实际测试。在这个项目中，学生将与该学科的当前研究人员配对，以掌握一些最新技术并将有效的实现构建到 *DiffEq 库（OrdinaryDiffEq.jl、StochasticDiffEq.jl、DelayDiffEq.jl）中。可能实现的方法系列是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全局误差估计 ODE 求解器&lt;/li&gt;
&lt;li&gt;隐式-显式 (IMEX) 方法&lt;/li&gt;
&lt;li&gt;几何（指数）积分器&lt;/li&gt;
&lt;li&gt;低内存 Runge-Kutta 方法&lt;/li&gt;
&lt;li&gt;专门用于二阶 ODE（卫星模拟）的多步方法&lt;/li&gt;
&lt;li&gt;并行（多线程）外推（显式和隐式）&lt;/li&gt;
&lt;li&gt;并行隐式积分因子方法（PDE 和 SPDE）&lt;/li&gt;
&lt;li&gt;实时并行 ODE 方法&lt;/li&gt;
&lt;li&gt;Rosenbrock-W 方法&lt;/li&gt;
&lt;li&gt;近似矩阵分解&lt;/li&gt;
&lt;li&gt;Runge-Kutta-Chebyshev 方法（高稳定性 RK 方法）&lt;/li&gt;
&lt;li&gt;完全隐式龙格-库塔 (FIRK) 方法&lt;/li&gt;
&lt;li&gt;安德森加速&lt;/li&gt;
&lt;li&gt;边界值问题 (BVP) 求解器，例如 MIRK 和搭配方法&lt;/li&gt;
&lt;li&gt;微分代数方程 (DAE) 的 BDF 方法&lt;/li&gt;
&lt;li&gt;刚性随机微分方程的方法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中许多方法是高效偏微分方程 (PDE) 求解器的基础，因此对于计算流体动力学、数学生物学和量子力学等许多领域都很重要。&lt;/p&gt;
&lt;p&gt;该项目对对数值分析领域感兴趣的软件工程师和有兴趣在该领域进行研究生研究的学生都有好处。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推荐技能&lt;/strong&gt;：数值分析、数值线性代数的背景知识，以及编写快速代码的能力（或渴望学习）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：生产质量求解器方法的贡献。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：&lt;a class=&#34;link&#34; href=&#34;https://github.com/ChrisRackauckas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Chris Rackauckas&lt;/a&gt;、 Yingbo &lt;a class=&#34;link&#34; href=&#34;https://github.com/YingboMa&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ma&lt;/a&gt;、&lt;a class=&#34;link&#34; href=&#34;https://github.com/kanav99&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Kanav Gupta&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://github.com/utkarsh530&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Utkarsh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预计项目规模&lt;/strong&gt;：175 小时或 350 小时，具体取决于所选的子任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;难度&lt;/strong&gt;：根据所选的子任务，从易到难。&lt;/p&gt;
&lt;h2 id=&#34;用于求解微分方程的物理信息神经网络-pinn-的改进httpsscimlaigsocgsoc_diffeqimprovements_to_physics-informed_neural_networks_pinn_for_solving_differential_equations&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_diffeq/#improvements_to_physics-informed_neural_networks_pinn_for_solving_differential_equations&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;用于求解微分方程的物理信息神经网络 (PINN) 的改进&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;神经网络可以作为一种有效求解困难偏微分方程的方法。&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/NeuralPDE.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;作为NeuralPDE.jl&lt;/a&gt;包的一部分，正在探索最近论文中基于物理的机器学习的有效实现。&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/NeuralPDE.jl/issues&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;问题跟踪器&lt;/a&gt;包含指向论文的链接，这些论文将是有趣的基于神经网络的新方法，用于实现经典技术并对其进行基准测试。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推荐技能&lt;/strong&gt;：数值分析和机器学习方面的背景知识。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：新的基于神经网络的求解器方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：&lt;a class=&#34;link&#34; href=&#34;https://github.com/ChrisRackauckas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Chris Rackauckas&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://github.com/KirillZubov&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Kirill Zubov&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预计项目规模&lt;/strong&gt;：175 小时或 350 小时，具体取决于所选的子任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;难度&lt;/strong&gt;：根据所选的子任务，从易到难。&lt;/p&gt;
&lt;h2 id=&#34;微分方程求解器的性能增强httpsscimlaigsocgsoc_diffeqperformance_enhancements_for_differential_equation_solvers&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_diffeq/#performance_enhancements_for_differential_equation_solvers&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;微分方程求解器的性能增强&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;参与开发广泛使用的高效微分方程求解器不是很酷吗？DifferentialEquations.jl 具有广泛的现有方法和&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/DiffEqBenchmarks.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;广泛的基准套件&lt;/a&gt;，用于调整性能方法。它的很多方法已经是同类中最快的了，但是还有很多性能提升工作可以做。在这个项目中，您可以了解各种方法的详细信息，并深入研究算法策略和实现的优化，以提高基准。可能会提高整个微分方程生态系统性能的项目包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可选的自适应步长技术和步长优化&lt;/li&gt;
&lt;li&gt;指针交换技巧&lt;/li&gt;
&lt;li&gt;准牛顿全球化与优化&lt;/li&gt;
&lt;li&gt;缓存大小减少&lt;/li&gt;
&lt;li&gt;增强的方法内多线程、分布式并行性和 GPU 使用&lt;/li&gt;
&lt;li&gt;改进的自动化方法选择&lt;/li&gt;
&lt;li&gt;大规模 (PDE) 离散化的自适应预处理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;推荐技能&lt;/strong&gt;：数值分析、数值线性代数的背景知识，以及编写快速代码的能力（或渴望学习）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：改进的基准与社区共享。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：&lt;a class=&#34;link&#34; href=&#34;https://github.com/ChrisRackauckas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Chris Rackauckas&lt;/a&gt;和Yingbo &lt;a class=&#34;link&#34; href=&#34;https://github.com/YingboMa&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ma&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预计项目规模&lt;/strong&gt;：175 小时或 350 小时，具体取决于所选的子任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;难度&lt;/strong&gt;：根据所选的子任务，从易到难。&lt;/p&gt;
&lt;h2 id=&#34;偏微分方程的离散化httpsscimlaigsocgsoc_diffeqdiscretizations_of_partial_differential_equations&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_diffeq/#discretizations_of_partial_differential_equations&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;偏微分方程的离散化&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;有两种方法可以使用偏微分方程 (PDE) 库：一种可以构建“工具包”，使用户能够离散化任何 PDE，但需要了解数值 PDE 方法，或者可以为特定 PDE 构建“完全停止”的 PDE 求解器. 解决偏微分方程的方法有很多种，这里有一些关于潜在项目的想法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自动 PDE 离散化工具。我们希望用户以数学形式描述 PDE，并自动执行其余的求解过程。有关详细信息，请参阅&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/DifferentialEquations.jl/issues/469&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;此问题&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;增强用于离散 PDE 的现有工具。可以增强有限差分 (FDM) 库&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/MethodOfLines.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MethodOfLines.jl以允许非均匀网格或算子组合。&lt;/a&gt;有限元法 (FEM) 库&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/FEniCS.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;FEniCS.jl&lt;/a&gt;可以包装更多的 FEniCS 库。&lt;/li&gt;
&lt;li&gt;普通流体动力学方程（例如扩散-对流-对流方程）或双曲 PDE（例如 Hamilton-Jacobi-Bellman 方程）的句号求解器将对许多用户有用。&lt;/li&gt;
&lt;li&gt;使用随机微分方程 (SDE) 求解器高效（且高度并行）逼近某些 PDE。&lt;/li&gt;
&lt;li&gt;开发 ODE 求解器以更有效地求解特定类型的 PDE 离散化。请参阅“常微分方程的原生 Julia 求解器”项目。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;推荐技能&lt;/strong&gt;：求解微分方程的数值方法的背景知识。一些偏微分方程的基本知识，但主要是学习意愿和对微积分和线性代数的深刻理解。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：一些常见 PDE 的生产质量 PDE 求解器包。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：&lt;a class=&#34;link&#34; href=&#34;https://github.com/ChrisRackauckas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;克里斯·拉考卡斯&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预计项目规模&lt;/strong&gt;：175 小时或 350 小时，具体取决于所选的子任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;难度&lt;/strong&gt;：中等到困难，具体取决于所选的子任务。&lt;/p&gt;
&lt;h2 id=&#34;全局敏感性分析工具httpsscimlaigsocgsoc_diffeqtools_for_global_sensitivity_analysis&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_diffeq/#tools_for_global_sensitivity_analysis&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;全局敏感性分析工具&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;全局敏感性分析是评估参数对微分方程模型的影响的流行工具。&lt;a class=&#34;link&#34; href=&#34;https://discovery.ucl.ac.uk/id/eprint/19896/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;在这篇论文中可以找到&lt;/a&gt;一个很好的介绍。全局敏感性分析工具可以比局部敏感性分析工具更有效，并且可以更好地了解参数如何在更一般的意义上影响模型。该项目的目标是在&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/GlobalSensitivity.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GlobalSensitivity.jl&lt;/a&gt;中实现更多的全局灵敏度分析方法，例如 eFAST 方法，该方法可与通用接口上的任何微分方程求解器一起使用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推荐技能&lt;/strong&gt;：了解如何使用DifferentialEquations.jl 求解方程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：执行全局敏感性分析的有效函数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：&lt;a class=&#34;link&#34; href=&#34;https://github.com/ChrisRackauckas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Chris Rackauckas&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://github.com/Vaibhavdixit02&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Vaibhav Dixit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预计项目规模&lt;/strong&gt;：175 小时或 350 小时，具体取决于所选的子任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;难度&lt;/strong&gt;：容易到中等，具体取决于所选的子任务。&lt;/p&gt;
&lt;h2 id=&#34;跳跃过程模拟算法httpsscimlaigsocgsoc_diffeqjump_process_simulation_algorithms&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_diffeq/#jump_process_simulation_algorithms&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;跳跃过程模拟算法&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;跳跃过程是一种广泛使用的方法，用于对生物、化学和流行病学系统进行建模，可以解释蛋白质/粒子/试剂的随机相互作用和空间传输。&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/DiffEqJump.jl/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;DiffEqJump.jl&lt;/a&gt;提供了一个优化求解器库，用于精确模拟跳跃过程，包括最近添加的求解器，允许模拟空间分布的跳跃过程（粒子/代理在图形或一般网格上移动）。扩展和增强当前工具的各种可能项目包括&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;添加额外的随机模拟算法，例如恒定复杂度下一个反应方法或部分倾向方法（显式或通过包装 C++ &lt;a class=&#34;link&#34; href=&#34;https://github.com/breezerider/pSSAlib&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;pSSALib&lt;/a&gt;）。&lt;/li&gt;
&lt;li&gt;扩展当前的图形和空间算法以支持不同空间位置的粒子/代理之间的交互，并开发工具以通过 PDE 离散化技术自动计算转换率。&lt;/li&gt;
&lt;li&gt;使用 τ-leap 算法扩展 StochasticDiffEq.jl 以实现跳跃过程的近似但计算效率更高的模拟。&lt;/li&gt;
&lt;li&gt;使用混合仿真功能扩展 DiffEqJump 和 StochasticDiffEq，允许模型混合 ODE、SDE 和跳转过程，并且可以根据需要在每个数学表示之间动态划分模型组件以保持物理精度。&lt;/li&gt;
&lt;li&gt;扩展 DiffEqJump 的模拟算法集合，以更好地支持时间相关的速率函数和延迟。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;推荐技能&lt;/strong&gt;：了解 Gillespie 方法或基本跳跃过程模拟算法的工作原理，以及使用 DiffEqJump.jl 模拟跳跃过程的经验。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：完成对跳跃过程模拟工具的一项或多项前述改进。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：&lt;a class=&#34;link&#34; href=&#34;https://github.com/isaacsas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Samuel Isaacson&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://github.com/ChrisRackauckas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Chris Rackauckas&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预计项目规模&lt;/strong&gt;：175 小时或 350 小时，具体取决于所选的子任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;难度&lt;/strong&gt;：中等到困难，具体取决于所选的子任务。&lt;/p&gt;
&lt;h1 id=&#34;sciml-科学机器学习项目--google-summer-of-codehttpsscimlaigsocgsoc_scimlsciml_scientific_machine_learning_projects_google_summer_of_code&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_sciml/#sciml_scientific_machine_learning_projects_google_summer_of_code&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SciML 科学机器学习项目 – Google Summer of Code&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id=&#34;物理信息神经网络-pinn-和使用深度学习求解微分方程httpsscimlaigsocgsoc_scimlphysics-informed_neural_networks_pinns_and_solving_differential_equations_with_deep_learning&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_sciml/#physics-informed_neural_networks_pinns_and_solving_differential_equations_with_deep_learning&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;物理信息神经网络 (PINN) 和使用深度学习求解微分方程&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;神经网络可以作为一种有效求解困难偏微分方程的方法。最近，这种策略被称为&lt;a class=&#34;link&#34; href=&#34;https://www.sciencedirect.com/science/article/pii/S0021999118307125&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;基于物理的神经网络&lt;/a&gt;，并且由于其相对于经典深度学习的效率优势而重新出现。&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/NeuralNetDiffEq.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;作为NeuralNetDiffEq.jl&lt;/a&gt;包的一部分，正在探索最近论文中的有效实现。&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/NeuralNetDiffEq.jl/issues&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;问题跟踪器&lt;/a&gt;包含指向论文的链接，这些论文将是有趣的基于神经网络的新方法，用于实现经典技术并对其进行基准测试。该领域的项目工作包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/NeuralNetDiffEq.jl/issues/71&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;改进了 PINN 的训练策略&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;实施新的神经架构，施加物理约束，如&lt;a class=&#34;link&#34; href=&#34;https://arxiv.org/pdf/2002.00021.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;无散度标准&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;演示通过 PINN 训练解决的大规模问题。&lt;/li&gt;
&lt;li&gt;提高 PINN 训练例程的速度和并行化。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该项目对对科学机器学习领域感兴趣的软件工程师和对阅读该领域研究生研究感兴趣的学生都有好处。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推荐技能&lt;/strong&gt;：数值分析和机器学习方面的背景知识。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：新的基于神经网络的求解器方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：&lt;a class=&#34;link&#34; href=&#34;https://github.com/ChrisRackauckas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Chris Rackauckas&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://github.com/KirillZubov&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Kirill Zubov&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预计项目规模&lt;/strong&gt;：175 小时或 350 小时，具体取决于所选的子任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;难度&lt;/strong&gt;：根据所选的子任务，从易到难。&lt;/p&gt;
&lt;h2 id=&#34;对神经和通用微分方程的改进httpsscimlaigsocgsoc_scimlimprovements_to_neural_and_universal_differential_equations&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_sciml/#improvements_to_neural_and_universal_differential_equations&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;对神经和通用微分方程的改进&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://arxiv.org/abs/1806.07366&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;神经常微分方程&lt;/a&gt;已被证明是一种使用机器学习来学习微分方程模型的方法。该方法的进一步改进，如&lt;a class=&#34;link&#34; href=&#34;https://arxiv.org/abs/2001.04385&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;通用微分方程&lt;/a&gt;已将物理和生物学知识纳入系统，以使其成为一种数据和计算有效的学习方法。然而，还有许多计算方面有待探索。&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/DiffEqFlux.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;该项目的目的是增强DiffEqFlux.jl&lt;/a&gt;的通用微分方程逼近能力，添加以下功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;改进了 DAE 和 SDE 的伴随&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/DiffEqFlux.jl/issues/173&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;非神经网络通用逼近器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/DiffEqFlux.jl/issues/118&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;对小批量&lt;/a&gt;的各种&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/DiffEqFlux.jl/issues/133&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;改进&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;支持&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/DiffEqFlux.jl/issues/48&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;二阶 ODE（即辛积分器）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/DiffEqFlux.jl/issues/46&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;连续标准化流量&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/DiffEqFlux.jl/issues/47&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;FFJORD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有关完整详细信息，请参阅&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/DiffEqFlux.jl/issues&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;DiffEqFlux.jl 问题跟踪器&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;该项目对对科学机器学习领域感兴趣的软件工程师和对阅读该领域研究生研究感兴趣的学生都有好处。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推荐技能&lt;/strong&gt;：数值分析和机器学习方面的背景知识。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：神经和通用微分方程的新方法和改进方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：&lt;a class=&#34;link&#34; href=&#34;https://github.com/ChrisRackauckas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;克里斯·拉考卡斯&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预计项目规模&lt;/strong&gt;：175 小时或 350 小时，具体取决于所选的子任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;难度&lt;/strong&gt;：中等到困难，具体取决于所选的子任务。&lt;/p&gt;
&lt;h2 id=&#34;使用代理模型通过机器学习加速优化surrogatesjlhttpsscimlaigsocgsoc_scimlaccelerating_optimization_via_machine_learning_with_surrogate_models_surrogatesjl&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_sciml/#accelerating_optimization_via_machine_learning_with_surrogate_models_surrogatesjl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;使用代理模型通过机器学习加速优化：Surrogates.jl&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;在许多情况下，当试图优化一个函数时，&lt;code&gt;f(p)&lt;/code&gt;每次计算&lt;code&gt;f&lt;/code&gt;都是非常昂贵的。例如，评估&lt;code&gt;f&lt;/code&gt;可能需要求解 PDE 或复杂线性代数的其他应用。&lt;code&gt;f&lt;/code&gt;因此，人们可以开发一个替代模型，而不是总是直接评估，该模型&lt;code&gt;g&lt;/code&gt;近似地通过对从评估中&lt;code&gt;f&lt;/code&gt;收集的先前数据进行训练。&lt;code&gt;f&lt;/code&gt;这种使用经过训练的代理代替真实函数的技术称为代理优化，它混合了来自机器学习的技术以加速优化。&lt;/p&gt;
&lt;p&gt;先进的技术&lt;a class=&#34;link&#34; href=&#34;https://www.cambridge.org/core/journals/acta-numerica/article/kernel-techniques-from-machine-learning-to-meshless-methods/00686923110F799A1537C4F02BBAAE8E&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;利用径向基函数&lt;/a&gt;和高斯过程来插入新参数以估计&lt;code&gt;f&lt;/code&gt;尚未采样的区域。&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_sciml/http%3A%2F%2Fwww.ressources-actuarielles.net%2FEXT%2FISFA%2F1226.nsf%2F9c8e3fd4d8874d60c1257052003eced6%2Fe7dc33e4da12c5a9c12576d8002e442b%2F%24FILE%2FJones01.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;自适应训练技术&lt;/a&gt;探索如何挑选新领域进行评估&lt;code&gt;f&lt;/code&gt;，以更好地磨练全局最优值。&lt;/p&gt;
&lt;p&gt;该项目的目的是通过以下方式进一步改进 Surrogates.jl：添加新的代理模型、添加新的优化技术、展示与 SciML 生态系统的兼容性以及修复一些当前代理模型的不良行为。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推荐技能&lt;/strong&gt;：标准机器学习、统计或优化技术的背景知识。强大的数值分析知识是有帮助的，但不是必需的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：使用新的代理模型和新的优化技术改进 Surrogates.jl。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_sciml/https://github.com/ludoro&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;卢多维科·贝西&lt;/a&gt;、&lt;a class=&#34;link&#34; href=&#34;https://github.com/ChrisRackauckas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;克里斯·拉考卡斯&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预计项目规模&lt;/strong&gt;：175 小时或 350 小时，具体取决于所选的子任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;难度&lt;/strong&gt;：中等到困难，具体取决于所选的子任务。&lt;/p&gt;
&lt;h2 id=&#34;fenicsjl-与-dolfin-adjoint--zygotejl-的集成用于有限元科学机器学习httpsscimlaigsocgsoc_scimlintegration_of_fenicsjl_with_dolfin-adjoint_zygotejl_for_finite_element_scientific_machine_learning&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_sciml/#integration_of_fenicsjl_with_dolfin-adjoint_zygotejl_for_finite_element_scientific_machine_learning&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;FEniCS.jl 与 dolfin-adjoint + Zygote.jl 的集成，用于有限元科学机器学习&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;科学机器学习需要将科学计算库与机器学习相结合。&lt;a class=&#34;link&#34; href=&#34;https://www.stochasticlifestyle.com/the-essential-tools-of-scientific-machine-learning-scientific-ml/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这篇博客文章重点介绍了 Julia 的工具与 Python 等替代工具相比在该领域是如何相当先进的&lt;/a&gt;，但尚未完全解决的一个领域是自动微分与偏微分方程的集成。&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/FEniCS.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;FEniCS.jl&lt;/a&gt;是&lt;a class=&#34;link&#34; href=&#34;https://fenicsproject.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;FEniCS&lt;/a&gt;项目的包装器，用于偏微分方程的有限元解。我们希望通过使用&lt;a class=&#34;link&#34; href=&#34;http://www.dolfin-adjoint.org/en/release/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;dolfin-adjoint&lt;/a&gt;来增强 Julia 包装器以允许与 Julia 的自动微分库（如&lt;a class=&#34;link&#34; href=&#34;https://github.com/FluxML/Zygote.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Zygote.jl ）集成&lt;/a&gt;. 这将需要为 Julia 用户设置此库以自动安装并编写使用此伴随构建器库的伴随通行证。这将导致 PDE 和神经网络之间的第一次完全集成。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推荐技能&lt;/strong&gt;：微分方程和 Python 的基本背景。具有先前的 Julia 知识是首选，但不是严格要求。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：Zygote.jl 在 FEniCS.jl 函数上的高效和高质量的伴随实现。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：&lt;a class=&#34;link&#34; href=&#34;https://github.com/ChrisRackauckas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;克里斯·拉考卡斯&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预计项目规模&lt;/strong&gt;：350 小时。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;难度&lt;/strong&gt;：中等到困难，具体取决于所选的子任务。&lt;/p&gt;
&lt;h1 id=&#34;sciml-数值方法项目---google-summer-of-codehttpsscimlaigsocgsoc_numericssciml_numerical_methods_projects_google_summer_of_code&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_numerics/#sciml_numerical_methods_projects_google_summer_of_code&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SciML 数值方法项目 - Google Summer of Code&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id=&#34;linearsolvejl-分布式算法httpsscimlaigsocgsoc_numericslinearsolvejl_distributed_algorithms&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_numerics/#linearsolvejl_distributed_algorithms&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LinearSolve.jl 分布式算法&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/LinearSolve.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LinearSolve.jl&lt;/a&gt;是求解线性系统的高级接口，&lt;code&gt;Ax=b&lt;/code&gt;它允许像 ODE 求解器和非线性求解器这样的算法在使用稀疏直接方法、Krylov 方法等之间轻松切换。但是，&lt;code&gt;A&lt;/code&gt;跨 HPC 集群的分布式矩阵自动化线性系统解决方案将使许多大型应用程序变得容易。该项目的全局性将与&lt;a class=&#34;link&#34; href=&#34;https://github.com/JuliaParallel/Elemental.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Elemental.jl&lt;/a&gt;、&lt;a class=&#34;link&#34; href=&#34;https://github.com/fverdugo/PartitionedArrays.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PartitionedArrays.jl&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://github.com/JuliaParallel/PETSc.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PETSc.jl&lt;/a&gt;等库集成以简化此操作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推荐技能&lt;/strong&gt;：数值线性代数和并行计算的背景知识。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果：包装在&lt;/strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/LinearSolve.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LinearSolve.jl 中&lt;/a&gt;的新并行算法&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：&lt;a class=&#34;link&#34; href=&#34;https://github.com/ChrisRackauckas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;克里斯·拉考卡斯&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预计项目规模&lt;/strong&gt;：175 小时或 350 小时，具体取决于所选的子任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;难度&lt;/strong&gt;：容易到中等，具体取决于所选的子任务。&lt;/p&gt;
&lt;h2 id=&#34;nonlinearsolvejl-全球化准牛顿和效率httpsscimlaigsocgsoc_numericsnonlinearsolvejl_globalization_quasi-newton_and_efficiency&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_numerics/#nonlinearsolvejl_globalization_quasi-newton_and_efficiency&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;NonlinearSolve.jl 全球化、准牛顿和效率&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;求解的方法&lt;code&gt;f(x)=0&lt;/code&gt;很多，应用也很多，从偏微分方程求解器到优化器，在内循环中使用非线性求解器。&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/NonlinearSolve.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;非线性求解.jl&lt;/a&gt;是 Julia 编程语言的核心非线性求解器库，它目前主要作为旧代码（一些用 Fortran 编写）的包装器存在，但这有很多缺点。那些封装的库不支持 GPU 加速，它们没有用于小方程的静态数组的快速路径，它们不支持更高精度的算术等。这个项目的目标是将原生 Julia 非线性求解器扩展到牛顿之外- Raphson 并演示了使用此扩展功能集的功能。功能可以包括全球化方法、准牛顿（Broyden 等）、非线性预处理、线搜索等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推荐技能&lt;/strong&gt;：数值分析的背景知识。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：SciMLTutorials 中的新教程和&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/SciMLTutorials.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SciMLBenchmarks&lt;/a&gt;中的基准&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/SciMLBenchmarks.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;测试&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：&lt;a class=&#34;link&#34; href=&#34;https://github.com/ChrisRackauckas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Chris Rackauckas&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://github.com/utkarsh530&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Utkarsh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预计项目规模&lt;/strong&gt;：175 小时或 350 小时，具体取决于所选的子任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;难度&lt;/strong&gt;：容易到中等，具体取决于所选的子任务。&lt;/p&gt;
&lt;h2 id=&#34;基准和教程写作httpsscimlaigsocgsoc_numericsbenchmarks_and_tutorial_writing&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_numerics/#benchmarks_and_tutorial_writing&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;基准和教程写作&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;许多大学课堂使用 SciML 生态系统进行教学，因此世界各地的课堂都将得到改善。涵盖更多领域的教程将允许教授生物建模课程的教授不必手动重写基于物理的教程以匹配他们的课程，并且将 README 转换为文档将有助于这些教授在他们的讲义中链接到这些工具的参考部分。&lt;/p&gt;
&lt;p&gt;此外，这些基准是广泛引用的微分方程跨语言基准，它提供了 Python、R、Julia、MATLAB 以及许多 C++ 和 Fortran 包之间的标准。围绕基准改进技术写作可以使这组文档更广泛地访问，扩大主题范围将帮助所有编程语言的个人更好地评估他们应该为他们的问题选择的方法。&lt;/p&gt;
&lt;p&gt;请注意，这将包括使用基准的 SciML 出版物的作者身份。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推荐技能&lt;/strong&gt;：数值分析和建模方面的背景知识。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：SciMLTutorials 中的新教程和&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/SciMLTutorials.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SciMLBenchmarks&lt;/a&gt;中的基准&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/SciMLBenchmarks.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;测试&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：&lt;a class=&#34;link&#34; href=&#34;https://github.com/ChrisRackauckas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;克里斯·拉考卡斯&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预计项目规模&lt;/strong&gt;：175 小时或 350 小时，具体取决于所选的子任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;难度&lt;/strong&gt;：容易。&lt;/p&gt;
&lt;h1 id=&#34;sciml-符号-数值计算项目--google-summer-of-codehttpsscimlaigsocgsoc_symbolicsciml_symbolic-numeric_computing_projects_google_summer_of_code&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_symbolic/#sciml_symbolic-numeric_computing_projects_google_summer_of_code&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SciML 符号-数值计算项目 – Google Summer of Code&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id=&#34;参数可识别性分析httpsscimlaigsocgsoc_symbolicparameter_identifiability_analysis&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_symbolic/#parameter_identifiability_analysis&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;参数可识别性分析&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;参数可识别性分析是描述动态系统的参数是否可以从数据中识别或是否冗余的分析。可识别性分析有两种形式：结构性和实用性。结构可识别性分析将 ODE 解的变化直接与其他参数联系起来，表明无法区分参数 A 较高和参数 B 较低，反之亦然，仅给出有关解的数据，因为两个互动。这可以作为&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/ModelingToolkit.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ModelingToolkit.jl的一部分直接在方程的符号形式上完成&lt;/a&gt;. 同时，实际可识别性分析着眼于参数是否在实际意义上是不可识别的，例如，如果两个参数在数值上无法区分（给定可能有噪声的数据）。在这种情况下，可以使用 DiffEqSensitivity.jl 中构建的数值技术（例如&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/DiffEqSensitivity.jl/issues/109&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;非线性似然分析器&lt;/a&gt;或&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/DiffEqSensitivity.jl/issues/108&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;信息敏感性测量&lt;/a&gt;）来展示参数是否具有足够独特的影响来确定。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推荐技能&lt;/strong&gt;：微分方程的基本背景和使用数值 ODE 求解器库的能力。不需要微分方程求解器的数值分析背景。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：参数可识别性方法的高效和高质量实现。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：&lt;a class=&#34;link&#34; href=&#34;https://github.com/ChrisRackauckas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;克里斯·拉考卡斯&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预计项目规模&lt;/strong&gt;：350 小时。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;难度&lt;/strong&gt;：难。&lt;/p&gt;
&lt;h2 id=&#34;模型订单减少httpsscimlaigsocgsoc_symbolicmodel_order_reduction&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_symbolic/#model_order_reduction&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;模型订单减少&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;模型降阶是一种自动找到与大模型近似但计算成本低得多的小模型的技术。我们计划使用 ModelingToolkit.jl 构建的基础设施来&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/ModelingToolkit.jl/issues/58&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;实现一系列方法&lt;/a&gt;，并找出加速微分方程求解的最佳方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推荐技能&lt;/strong&gt;：微分方程的基本背景和使用数值 ODE 求解器库的能力。不需要微分方程求解器的数值分析背景。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：模型降阶方法的高效和高质量实施。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：&lt;a class=&#34;link&#34; href=&#34;https://github.com/ChrisRackauckas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;克里斯·拉考卡斯&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预计项目规模&lt;/strong&gt;：350 小时。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;难度&lt;/strong&gt;：中等到困难，具体取决于所选的子任务。&lt;/p&gt;
&lt;h2 id=&#34;微分方程系统的自动符号操作httpsscimlaigsocgsoc_symbolicautomated_symbolic_manipulations_of_differential_equation_systems&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_symbolic/#automated_symbolic_manipulations_of_differential_equation_systems&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;微分方程系统的自动符号操作&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;数值求解微分方程可能很困难，因此在将模型交给求解器之前简化模型会很有帮助。唉，这需要时间&amp;hellip;&amp;hellip;所以让我们自动化吧！&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/ModelingToolkit.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ModelingToolkit.jl&lt;/a&gt;是一个用于自动化模型转换过程的项目。图书馆的各个部分仍然开放，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持 DAE、DDE 和 SDE&lt;/li&gt;
&lt;li&gt;用于 DAE 索引缩减的 Pantelides 算法&lt;/li&gt;
&lt;li&gt;兰佩蒂变换&lt;/li&gt;
&lt;li&gt;自动构建伴随解决方案&lt;/li&gt;
&lt;li&gt;非线性求解器的撕裂&lt;/li&gt;
&lt;li&gt;求解分布式延迟方程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;推荐技能&lt;/strong&gt;：微分方程的基本背景和使用数值 ODE 求解器库的能力。不需要微分方程求解器的数值分析背景。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：模型转换方法的高效和高质量实施。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：&lt;a class=&#34;link&#34; href=&#34;https://github.com/ChrisRackauckas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Chris Rackauckas&lt;/a&gt;和Yingbo &lt;a class=&#34;link&#34; href=&#34;https://github.com/YingboMa&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ma&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预计项目规模&lt;/strong&gt;：175 小时或 350 小时，具体取决于所选的子任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;难度&lt;/strong&gt;：中等到困难，具体取决于所选的子任务。&lt;/p&gt;
&lt;h2 id=&#34;符号化学和计算反应速率系数httpsscimlaigsocgsoc_symbolicsymbolic_chemistry_and_calculating_reaction_rate_coefficients&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_symbolic/#symbolic_chemistry_and_calculating_reaction_rate_coefficients&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;符号化学和计算反应速率系数&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;催化剂是模拟化学反应的好工具，但通常反应速率系数通常是可疑的。有一些成熟的方法可以计算这些系数应该被赋予反应的活化能。我们希望自动化部分建模，允许用户提供原子键图并免费确定系数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表示化学物质、化合物、离子和同位素的数据结构&lt;/li&gt;
&lt;li&gt;阿累尼乌斯方程计算反应速率系数k(T)&lt;/li&gt;
&lt;li&gt;使用上述数据结构自动平衡反应&lt;/li&gt;
&lt;li&gt;验证反应系统中每个反应的能量守恒&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;推荐技能&lt;/strong&gt;：深入了解化学和 Julia 开源编程，尤其是&lt;a class=&#34;link&#34; href=&#34;https://github.com/JuliaSymbolics/Symbolics.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Symbolics.jl&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/ModelingToolkit.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ModelingToolkit.jl&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：定义用于提供 Symbolics.jl 对象的接口，该对象包含使用 Arrhenius 方程计算活化能和反应速率系数的相关元数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：&lt;a class=&#34;link&#34; href=&#34;https://github.com/ChrisRackauckas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Chris Rackauckas&lt;/a&gt;、&lt;a class=&#34;link&#34; href=&#34;https://github.com/anandijain&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Anand Jain&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://github.com/isaacsas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Samuel Isaacson&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预计项目规模&lt;/strong&gt;：175 小时或 350 小时，具体取决于所选的子任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;难度&lt;/strong&gt;：容易到中等，具体取决于所选的子任务。&lt;/p&gt;
&lt;h2 id=&#34;改进了-modelingtoolkitjl-和-galacticoptimjl-之间的接口httpsscimlaigsocgsoc_symbolicimproved_interfacing_between_modelingtoolkitjl_and_galacticoptimjl&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_symbolic/#improved_interfacing_between_modelingtoolkitjl_and_galacticoptimjl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;改进了 ModelingToolkit.jl 和 GalacticOptim.jl 之间的接口&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;GalacticOptim.jl 包装了多个本地和全局优化包以提供通用接口。GalacticOptim.jl 添加了一些高级功能，例如与自动微分集成，以使其在大多数情况下的使用相当简单，同时允许在单个统一界面中使用所有选项。目前，ModelingToolkit.jl 作为 AD 后端选项之一提供，也可用于直接象征性地定义优化问题。目前，这种支持是有限的，还没有涵盖约束之类的东西，但是通过利用 ModelingToolkit 可能的符号简化可以获得巨大的价值。除了 GalacticOptim 中可用的当前 MOI 包装器外，该项目还将涵盖使用从 MTK 生成的符号表达式集成到 MathOptInterface 中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;推荐技能&lt;/strong&gt;：标准机器学习、统计或优化技术的背景知识。熟悉相关包、ModelingToolkit、GalacticOptim 和 MathOptInterface 将有助于入门。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：具有完整的符号优化问题接口。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;: &lt;a class=&#34;link&#34; href=&#34;https://github.com/Vaibhavdixit02&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Vaibhav Dixit&lt;/a&gt; , &lt;a class=&#34;link&#34; href=&#34;https://github.com/ChrisRackauckas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Chris Rackauckas&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预计项目规模&lt;/strong&gt;：175 小时或 350 小时，具体取决于所选的子任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;难度&lt;/strong&gt;：容易到中等，具体取决于所选的子任务。&lt;/p&gt;
&lt;h2 id=&#34;化学反应网络的符号分析与转换httpsscimlaigsocgsoc_symbolicsymbolic_analysis_and_transformations_of_chemical_reaction_networks&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://sciml.ai/gsoc/gsoc_symbolic/#symbolic_analysis_and_transformations_of_chemical_reaction_networks&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;化学反应网络的符号分析与转换&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Catalyst.jl 提供了创建化学反应网络的符号模型、从中生成符号微分方程和随机过程模型的能力，并提供了一些有限的分析符号化学反应网络的能力。可以通过多种方式扩展 Catalyst.jl 的核心功能，包括添加&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于检测和分类质量作用系统（即多项式 ODE 系统）的稳态及其平衡的工具。&lt;/li&gt;
&lt;li&gt;使用化学反应网络理论从反应网络图表示推断可能的动态和平衡行为的工具。&lt;/li&gt;
&lt;li&gt;通过消除保守物种来减小反应网络大小的方法。&lt;/li&gt;
&lt;li&gt;支持消除不同 Catalyst 模型组件之间的别名物种，以实现基于 Catalyst 的模型的更模块化组合。&lt;/li&gt;
&lt;li&gt;新的基于 ModelingToolkit 的系统来表示 τ 跳跃和/或抽象主方程表示，以及从 Catalyst 反应网络模型生成此类系统的转换层。&lt;/li&gt;
&lt;li&gt;新的基于 ModelingToolkit 的表示，用于跨建模尺度（ODE、SDE、跳跃过程）混合反应的混合系统，以及从 Catalyst 反应网络模型生成此类系统的转换层。&lt;/li&gt;
&lt;li&gt;Catalyst 反应允许随机变量或一般参数对反应化学计量进行编码的能力，更新了 ModelingToolkit 和 Symbolics 以支持生成相应的 ODE、SDE 和跳跃过程模型。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;推荐技能&lt;/strong&gt;：深入了解化学系统的 ODE 模型和 Julia 开源编程，尤其是&lt;a class=&#34;link&#34; href=&#34;https://github.com/JuliaSymbolics/Symbolics.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Symbolics.jl&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://github.com/SciML/ModelingToolkit.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ModelingToolkit.jl&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预期结果&lt;/strong&gt;：使用上述一项或多项功能扩展 Catalyst，并使用相应的 ModelingToolkit 更新，使用户能够构建、分析和模拟包含新组件的 Catalyst 衍生模型。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;导师&lt;/strong&gt;：&lt;a class=&#34;link&#34; href=&#34;https://github.com/isaacsas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Samuel Isaacson&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://github.com/ChrisRackauckas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Chris Rackauckas&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;预计项目规模&lt;/strong&gt;：175 小时或 350 小时，具体取决于所选的子任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;难度&lt;/strong&gt;：根据所选的子任务，从易到难。&lt;/p&gt;
&lt;h1 id=&#34;感兴趣的学生的重要信息-&#34;&gt;⚡感兴趣的学生的重要信息 ⚡&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;阅读&lt;a class=&#34;link&#34; href=&#34;https://summerofcode.withgoogle.com/get-started/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GSoC2022 的入门页面&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://numfocus.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;请记住，Gridap 以NumFOCUS&lt;/a&gt;作为伞形组织参与 GSoC2022 。&lt;/li&gt;
&lt;li&gt;仔细阅读这个想法页面&lt;/li&gt;
&lt;li&gt;根据这个想法页面、您的专业知识和您的兴趣，思考如何为 Gridap 项目做出贡献&lt;/li&gt;
&lt;li&gt;在通过我们的&lt;a class=&#34;link&#34; href=&#34;https://gitter.im/Gridap-jl/community&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gitter 聊天&lt;/a&gt;申请之前联系我们，为您的提案找到合适的主题&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/gridap/GSoC/issues/6&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;就此问题&lt;/a&gt;的申请流程提出任何问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;gridapjl&#34;&gt;Gridap.jl&lt;/h1&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/gridap/Gridap.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gridap.jl&lt;/a&gt;是用 Julia 编程语言实现的新一代开源有限元 (FE) 库。Gridap.jl 旨在采用比现有的用 C/C++ 或 Fortran 编写的 FE 应用程序更现代的编程风格。该库目前能够在单纯形和 n 立方的结构化和非结构化网格上求解标量和矢量场、单场和多场问题、合格和不合格 FE 离散化的线性和非线性偏微分方程 (PDE)。Gridap 是可扩展的和模块化的。可以实现新的有限元空间、新的参考元素、使用外部网格生成器、线性求解器、后处理工具等。例如，参见可用的 Gridap 插件列表。&lt;/p&gt;
&lt;h2 id=&#34;导师&#34;&gt;导师&lt;/h2&gt;
&lt;p&gt;按字母顺序&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/santiagobadia&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;圣地亚哥巴迪亚&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/oriolcg&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Oriol Colomés&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/amartinhuertas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;阿尔贝托·F·马丁&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/ericneiva&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;埃里克·内瓦&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/fverdugo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;弗朗西斯科·维杜戈&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;项目构想&#34;&gt;项目构想&lt;/h2&gt;
&lt;h3 id=&#34;向-gridapjl-添加对带有悬挂节点的自适应网格细化的支持&#34;&gt;向 Gridap.jl 添加对带有悬挂节点的自适应网格细化的支持。&lt;/h3&gt;
&lt;p&gt;自适应网格细化 (AMR) 是一种数值工具，用于在计算域的不同部分需要不同网格分辨率的问题中有效地利用计算资源。基于八叉树（或四叉树）的网格生成器，例如&lt;a class=&#34;link&#34; href=&#34;https://www.p4est.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;p4est&lt;/a&gt;是生成 3D（或 2D）自适应计算网格的最有效方法之一。生成的网格包含所谓的悬挂或不规则节点，即位于较粗相邻单元的边缘或表面的节点。在这种情况下，生成符合单元格的全局节点编号（或自由度）不足以生成连续有限元 (FE) 插值。由于这些原因，FE 代码需要引入特殊技术来在悬挂节点处施加连续插值。例如，这可以通过对插值空间施加补充线性约束来完成。该项目的目标是在 Gridap.jl 包中实现一种机制来处理具有悬挂节点的网格。为此，我们计划添加新的数据结构来跟踪挂起的节点，并从中建立相关的线性约束。一旦定义了约束，就可以使用库中已经存在的函数轻松地将它们施加到插值空间，例如&lt;code&gt;FESpaceWithLinearConstraints&lt;/code&gt;类型。此外，我们已经在扩展包&lt;a class=&#34;link&#34; href=&#34;https://github.com/gridap/GridapP4est.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GridapP4est&lt;/a&gt;中为 p4est 提供了包装器。因此，在 Gridap.jl 中实现对悬挂节点的支持在 Google 的夏季代码项目中应该是可行的。学生的主要任务是熟悉 Gridap.jl 的几何相关数据结构，根据项目目标扩展它们，通过 PR 将生成的代码发布到 Gridap.jl 项目的主分支，并通过示例展示新功能的应用（例如，在我们的&lt;a class=&#34;link&#34; href=&#34;https://gridap.github.io/Tutorials/dev/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;教程&lt;/a&gt;页面中的新教程中。）&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;优先事项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;强度&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;项目类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;目标&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;导师&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;高的&lt;/td&gt;
&lt;td&gt;缓和&lt;/td&gt;
&lt;td&gt;长（~350 小时）或中（~175 小时）取决于学生的专业知识&lt;/td&gt;
&lt;td&gt;在 Gridap.jl 中实现悬挂节点支持。针对 Gridap.jl 的主分支开发、记录和打开 PR。&lt;/td&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/fverdugo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Francesc Verdugo&lt;/a&gt;、&lt;a class=&#34;link&#34; href=&#34;https://github.com/amartinhuertas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Alberto F. Martin&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://github.com/ericneiva&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Eric Neiva&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;使用-gridapmakiejl-在-julia-中进行有限元模拟的高级可视化&#34;&gt;使用 GridapMakie.jl 在 Julia 中进行有限元模拟的高级可视化。&lt;/h3&gt;
&lt;p&gt;数值结果的可视化是有限元 (FE) 计算的重要组成部分。它是检查计算解决方案以进行调试或生成可用于发布的质量图像和动画的重要工具。在 Gridap.jl 中可视化 FE 模拟产生的数据的常规方法是将 vtu 文件写入磁盘并使用&lt;a class=&#34;link&#34; href=&#34;https://www.paraview.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Paraview&lt;/a&gt;可视化它们。这允许人们利用 Paraview 出色且功能丰富的可视化功能，但在直接从 Julia 代码中直观地检查数据或使用 Julia 开源包生态系统的包对其进行操作时，它会带来挑战。出于这个原因，在上一版 Google Summer of Code 中，我们开发了&lt;a class=&#34;link&#34; href=&#34;https://github.com/gridap/GridapMakie.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GridapMakie.jl的第一个版本&lt;/a&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/JuliaPlots/Makie.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;，一个使用Makie.jl&lt;/a&gt;可视化 Gridap.jl 数据结构的包。第一个版本支持在三角形和四面体元素的计算网格上可视化标量场，并提供反应式&lt;em&gt;绘图配方&lt;/em&gt;允许人们轻松生成交互式绘图和动画。此功能已经占 FE 计算中可视化需求的重要份额，但仍然缺少几个重要功能。在这个新项目中，我们计划使用新的可视化工具丰富 GridapMakie.jl，例如支持四边形和六面体元素、矢量值字段的可视化、计算网格的裁剪和切片等。我们还希望改善用户体验，在 Jupyter 或&lt;a class=&#34;link&#34; href=&#34;https://github.com/fonsp/Pluto.jl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Pluto.jl&lt;/a&gt;笔记本和 VSCode 侧面板中生成交互式绘图时。这项工作将产生具有新功能的 GridapMakie.jl 的第二个版本。GSoC 学生的主要任务是进一步开发 GridapMakie.jl，记录它，最后在官方发布&lt;a class=&#34;link&#34; href=&#34;https://github.com/JuliaRegistries/General&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Julia 包注册表&lt;/a&gt;。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;优先事项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;强度&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;项目类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;目标&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;导师&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;中等的&lt;/td&gt;
&lt;td&gt;缓和&lt;/td&gt;
&lt;td&gt;长（~350 小时）或中（~175 小时）&lt;/td&gt;
&lt;td&gt;在 GridapMakie.jl 中实施高级可视化技术。开发、记录和发布新版本的 GridapMakie.jl 包。&lt;/td&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/fverdugo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;弗朗西斯科·维杜戈&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;一般多面体的离散化技术&#34;&gt;一般多面体的离散化技术&lt;/h3&gt;
&lt;p&gt;使用有限元和有限体积方法的 PDE 数值逼近依赖于感兴趣域的网格的定义。这些网格通常由&lt;em&gt;单元&lt;/em&gt;格组成，它们是三角形/四面体或四边形/六面体。网格生成步骤是 PDE 离散化工作流程中的瓶颈之一，因为它很难自动化和并行化。为了缓解这种情况，一些数值离散方案（不连续 Galerkin，可混合方法）在网格生成中提供了灵活性，因为它们可以为任何单元拓扑定义。&lt;code&gt;Gridap&lt;/code&gt;在主包中提供不连续 Galerkin 方法，在主包中提供可混合方法&lt;code&gt;GridapHybrid&lt;/code&gt;. 然而，这些实现还不能利用一般的多面体。在这个项目中，我们想要提供这个额外的功能。首先，我们将利用多面体的一般表示作为&lt;em&gt;旋转系统&lt;/em&gt;，即图的子类型。我们将定义一个具体&lt;code&gt;Polytope&lt;/code&gt;的图形表示，其中每个顶点的邻接是&lt;em&gt;循环顺序&lt;/em&gt;，并根据这种描述定义它的 API。接下来，我们将实施一个&lt;code&gt;Quadrature&lt;/code&gt;适用于一般多面体的新规则（例如，参见&lt;a class=&#34;link&#34; href=&#34;http://dilbert.engr.ucdavis.edu/~suku/quadrature/hni-curvedsolid.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;此处&lt;/a&gt;）。最后，将使用一些多面体网格来检查不连续 Galerkin 和混合求解器的实现。如果项目类型很&lt;em&gt;长&lt;/em&gt;，我们还将探索在多面体网格上工作的其他方案的实现，例如，虚拟单元方法或混合高阶方法。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;优先事项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;强度&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;项目类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;目标&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;导师&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;中等的&lt;/td&gt;
&lt;td&gt;缓和&lt;/td&gt;
&lt;td&gt;长（~350 小时）或中（~175 小时）取决于学生的专业知识&lt;/td&gt;
&lt;td&gt;在 中实现一般多面体和正交&lt;code&gt;Gridap.jl&lt;/code&gt;。&lt;code&gt;Gridap.jl&lt;/code&gt;在和中将它们与 DG 和杂交方法相结合&lt;code&gt;GridapHybrid.jl&lt;/code&gt;。&lt;/td&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/santiagobadia&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;圣地亚哥·巴迪亚&lt;/a&gt;、&lt;a class=&#34;link&#34; href=&#34;https://github.com/amartinhuertas&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;阿尔贝托·F·马丁&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://github.com/ericneiva&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;埃里克·内瓦&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;基于伴随的-pde-约束优化&#34;&gt;基于伴随的 PDE 约束优化&lt;/h3&gt;
&lt;p&gt;在许多工程和科学应用中，需要找到变量受某些 PDE 约束的优化问题的解决方案。这就是逆问题的情况，其中人们有兴趣找到最佳参数集，以便解决方案与观察结果相匹配，或者设计优化问题，其中人们想要找到最大化或最小化感兴趣数量的最佳参数。大多数有效的优化求解器依赖于优化函数对参数的导数，这可以从前向问题的伴随中获得。处理瞬态 PDE 和时间相关参数时出现的主要挑战之一。在这种情况下，前向问题在时间上向前整合并存储在内存中，以便向后解决的伴随问题使用。在这个项目中，我们建议创建一个通用框架来计算伴随，并在优化问题中使用它们，使用&lt;code&gt;Gridap.jl&lt;/code&gt;并&lt;code&gt;GridapODEs.jl&lt;/code&gt;作为前向问题的解决者。目标是利用&lt;em&gt;Julia&lt;/em&gt;的自动微分功能来自动化优化过程。从事该项目的学生将首先使用稳定前向问题的离散伴随物来定义优化问题的通用 API。接下来，我们将在瞬态问题中为伴随的前向/后向时间推进方案工作。最后，我们将实施检查点方案以限制计算伴随时间相关问题的内存消耗。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;优先事项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;强度&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;项目类型&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;目标&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;导师&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;中等的&lt;/td&gt;
&lt;td&gt;缓和&lt;/td&gt;
&lt;td&gt;长（~350 小时）或中（~175 小时）取决于学生的专业知识&lt;/td&gt;
&lt;td&gt;创建一个通用框架来计算伴随项，并将它们用于优化问题，使用&lt;code&gt;Gridap.jl&lt;/code&gt;和&lt;code&gt;GridapODEs.jl&lt;/code&gt;作为前向问题的求解器。&lt;/td&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/oriolcg&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Oriol Colomés&lt;/a&gt;、&lt;a class=&#34;link&#34; href=&#34;https://github.com/santiagobadia&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Santiago Badia&lt;/a&gt;和&lt;a class=&#34;link&#34; href=&#34;https://github.com/fverdugo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Francesc Verdugo&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;fenics-项目&#34;&gt;FEniCS 项目&lt;/h1&gt;
&lt;h3 id=&#34;关于我们&#34;&gt;关于我们&lt;/h3&gt;
&lt;p&gt;FEniCSx 是一个流行的开源 (LGPLv3) 计算平台，用于求解偏微分方程 (PDE)。FEniCSx 使用户能够快速将科学模型转换为高效的有限元代码。借助 FEniCSx 的高级 Python 和 C++ 接口，很容易上手，但 FEniCSx 还为更有经验的程序员提供了强大的功能。FEniCSx 可在从笔记本电脑到高性能集群的多种平台上运行。&lt;/p&gt;
&lt;h3 id=&#34;过程&#34;&gt;过程&lt;/h3&gt;
&lt;p&gt;在所有情况下，我们都建议未来的学生加入我们的&lt;a class=&#34;link&#34; href=&#34;https://fenicsproject-slack-invite.herokuapp.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Slack 频道&lt;/a&gt;#gsoc2022 并与我们一起撰写他们的项目提案。以下只是想法；如果您有自己的想法，我们非常乐意与您讨论！&lt;/p&gt;
&lt;p&gt;我们会要求潜在的申请者安装 &lt;a class=&#34;link&#34; href=&#34;https://github.com/fenics&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;FEniCSx&lt;/a&gt;并试用演示。DOLFINx&lt;a class=&#34;link&#34; href=&#34;https://jorgensd.github.io/dolfinx-tutorial/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;教程&lt;/a&gt;有使用 FEniCSx 求解偏微分方程的最新描述。&lt;/p&gt;
&lt;h3 id=&#34;扩大资格&#34;&gt;扩大资格&lt;/h3&gt;
&lt;p&gt;GSoC 2022 现在向更广泛的申请者开放，而不仅仅是像往年那样在高等教育机构的课程中注册的申请者。&lt;a class=&#34;link&#34; href=&#34;https://developers.google.com/open-source/gsoc/faq&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;请在此处&lt;/a&gt;阅读 GSoC 常见问题解答，了解所有新的资格要求。&lt;/p&gt;
&lt;h3 id=&#34;fenicsx-与-fenics&#34;&gt;FEniCSx 与 FEniCS&lt;/h3&gt;
&lt;p&gt;FEniCS 项目最近经历了几乎完全的重新开发。因此，所有项目都将添加到新的 FEniCSx 组件（DOLFINx、FFCx、Basix）而不是旧组件（DOLFIN、FFC 和 FIAT）。所有开发都在我们的&lt;a class=&#34;link&#34; href=&#34;https://github.com/fenics&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub 页面上&lt;/a&gt;进行。在查找相关示例时，您应该看&lt;code&gt;import dolfinx&lt;/code&gt;不到&lt;code&gt;import dolfin&lt;/code&gt;或&lt;code&gt;from dolfin import *&lt;/code&gt;在顶部。&lt;/p&gt;
&lt;h3 id=&#34;需要先验知识&#34;&gt;需要先验知识&lt;/h3&gt;
&lt;p&gt;所有项目都需要现代 C++ 和 Python 知识。您将主要使用 FEniCS 项目的有限元求解器 DOLFINx。一些有限元方法的知识以及更普遍的数值计算知识将是一个很大的优势。&lt;/p&gt;
&lt;h2 id=&#34;扩展-dolfinx-演示-1&#34;&gt;扩展 DOLFINx 演示 (1)&lt;/h2&gt;
&lt;h3 id=&#34;抽象的&#34;&gt;抽象的&lt;/h3&gt;
&lt;p&gt;DOLFINx Python 和 C++ 演示是我们的用户了解和学习 FEniCS 项目的主要方式。经过最近一段时间的密集工作以平滑 DOLFINx API 的设计，我们现在准备完善和扩展我们现有的（有限的！）演示集。该项目非常适合具有有限元和数值方法知识并热衷于为最终用户编写非常清晰和精确的示例的参与者。&lt;/p&gt;
&lt;h3 id=&#34;描述&#34;&gt;描述&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;困难&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;优先事项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;涉及&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;导师&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;中等（175 小时）&lt;/td&gt;
&lt;td&gt;高的&lt;/td&gt;
&lt;td&gt;Python 和/或 C++&lt;/td&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;mailto:jack.hale@uni.lu&#34; &gt;迈克尔·哈贝拉、杰克·S·黑尔&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;技术细节&#34;&gt;技术细节&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.fenicsproject.org/dolfinx/main/python/demos.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;您可以在此处查看&lt;/a&gt;主分支上演示的当前状态 。&lt;/p&gt;
&lt;p&gt;一个可能的计划可能是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看现有的 DOLFIN 和 DOLFINx 演示，并熟悉用于将 Python 文件转换为例如笔记本或 Sphinx 文档的管道。&lt;/li&gt;
&lt;li&gt;确定这些演示所揭示的概念方面的差距。尽量减少演示之间的概念重叠。例如，我们不需要在一个专注于向用户展示如何解决非线性问题的演示中解释网格生成的基础知识。&lt;/li&gt;
&lt;li&gt;定义一组新的演示和/或现有 DOLFINx 演示的端口。&lt;/li&gt;
&lt;li&gt;建议 API 更改或新的高级函数，其中现有的低级函数会产生大量样板代码或潜在错误。参见例如&lt;code&gt;fem.LinearProblem&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;额外知识&#34;&gt;额外知识&lt;/h3&gt;
&lt;p&gt;因为这项任务将涉及编写一些英语文本来记录演示候选人应该相当精通书面英语。&lt;/p&gt;
&lt;h2 id=&#34;扩展-dolfinx-演示-2&#34;&gt;扩展 DOLFINx 演示 (2)&lt;/h2&gt;
&lt;h3 id=&#34;抽象的-1&#34;&gt;抽象的&lt;/h3&gt;
&lt;p&gt;我们设想两个学生在这个主题上合作工作的可能性，请参阅扩展 DOLFINx 演示 (1)。&lt;/p&gt;
&lt;h3 id=&#34;描述-1&#34;&gt;描述&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;困难&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;优先事项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;涉及&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;导师&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;中等（175 小时）&lt;/td&gt;
&lt;td&gt;高的&lt;/td&gt;
&lt;td&gt;蟒蛇，C++&lt;/td&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;mailto:jack.hal@uni.lu&#34; &gt;杰克 S. 黑尔，加思 N. 威尔斯&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;混合单元拓扑支持&#34;&gt;混合单元拓扑支持&lt;/h2&gt;
&lt;h3 id=&#34;抽象的-2&#34;&gt;抽象的&lt;/h3&gt;
&lt;p&gt;有限元方法需要将域离散化为称为网格的小单元（或单元）。目前，FEniCSx 仅支持由单一类型的单元组成的网格（例如三角形、四面体、四边形或六面体）。然而，在许多应用中，使用由多种类型的单元组成的网格很重要。例如，为了在流体力学问题中有效地对复杂几何形状周围的边界层进行网格划分，最好使用主要是六面体单元和一些替代类型（例如金字塔）的单元，以便处理网格问题。在这个项目中，您将扩展 FEniCSx 以完全支持具有多种类型单元的网格。&lt;/p&gt;
&lt;h3 id=&#34;描述-2&#34;&gt;描述&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;困难&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;优先事项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;涉及&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;导师&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;硬（350小时）&lt;/td&gt;
&lt;td&gt;中等的&lt;/td&gt;
&lt;td&gt;蟒蛇，C++&lt;/td&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;mailto:chris@bpi.cam.ac.uk&#34; &gt;克里斯·理查森，伊戈尔·巴拉塔&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;技术细节-1&#34;&gt;技术细节&lt;/h3&gt;
&lt;p&gt;该项目可能有一个重要的概念设计组件，需要与核心开发人员密切合作进行。具有计算几何或拓扑知识的候选人也非常适合该项目。&lt;/p&gt;
&lt;p&gt;一个可能的计划可能是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;精确识别 DOLFINx 的所有部分，其中当前假定统一的单元拓扑，例如&lt;code&gt;fem::ElementDofLayout&lt;/code&gt;和&lt;code&gt;fem::DofMap&lt;/code&gt;功能 &lt;code&gt;assemble_*&lt;/code&gt;。请注意，某些细胞类型具有多个面拓扑，例如金字塔（一个方形面和三个三角形面）。&lt;/li&gt;
&lt;li&gt;在未经测试的细胞类型上验证现有的有限元内核。&lt;/li&gt;
&lt;li&gt;确定合适的非侵入式设计以在混合拓扑网格上进行组装。这也许可以通过将每个单元类型生成的内核分派到组装器中来处理，该组装器作用于一组统一拓扑的单元。&lt;/li&gt;
&lt;li&gt;指定发出多个小的增量拉取请求而不是一个大请求的工作计划。&lt;/li&gt;
&lt;li&gt;实施新设计并指定和编写适当的单元测试。&lt;/li&gt;
&lt;li&gt;生成具有混合单元拓扑的网格。&lt;/li&gt;
&lt;li&gt;对混合拓扑网格上的泊松问题等执行标准收敛测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;检查点支持&#34;&gt;检查点支持&lt;/h2&gt;
&lt;h3 id=&#34;抽象的-3&#34;&gt;抽象的&lt;/h3&gt;
&lt;p&gt;求解瞬态偏微分方程 (PDE) 的一种普遍方法是在时间上采用有限差分格式，在空间中采用有限元格式。这种方法会产生一系列问题，必须按顺序解决。对于许多 PDE，自适应时间步长对于获得稳定的解决方案至关重要。然而，对于复杂的问题，稳定性标准可能不是先验的，必须通过反复试验来估计。对于大型问题，这种探索可能会变得非常耗时，因为模拟必须从每次模拟的初始时间步开始。拥有一个检查点算法来在任何时间步将有限元问题的解存储到磁盘上，这样就可以从最后一个稳定的解重新开始模拟。目前，FEniCSx 不支持函数的检查点。在这个项目中，您将扩展 FEniCSx 以支持使用检查点&lt;a class=&#34;link&#34; href=&#34;https://adios2.readthedocs.io/en/latest/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ADIOS2&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;描述-3&#34;&gt;描述&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;困难&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;优先事项&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;涉及&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;导师&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;硬（350小时）&lt;/td&gt;
&lt;td&gt;中等的&lt;/td&gt;
&lt;td&gt;蟒蛇，C++&lt;/td&gt;
&lt;td&gt;&lt;a class=&#34;link&#34; href=&#34;mailto:jsd55@eng.cam.ac.uk&#34; &gt;约根·多肯，克里斯·理查森&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;技术细节-2&#34;&gt;技术细节&lt;/h3&gt;
&lt;p&gt;FEniCSx 目前支持使用 ADIOS2 写入输出，实现可以在&lt;a class=&#34;link&#34; href=&#34;https://github.com/FEniCS/dolfinx/blob/main/cpp/dolfinx/io/ADIOS2Writers.cpp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这里&lt;/a&gt;找到。候选人应扩展此接口，理想情况下，候选人应熟悉 C++ 和有限元方法的基础知识。&lt;/p&gt;
&lt;p&gt;一个可能的计划可能是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;扩展 FEniCSx 中的 ADIOS2 功能，以便能够串行读取网格（从使用单个 MPI 进程生成的文件）。&lt;/li&gt;
&lt;li&gt;熟悉 ADIOS2 如何存储使用 MPI 并行写入的数据，以及如何在串行程序中读取此类数据。&lt;/li&gt;
&lt;li&gt;当使用多个进程执行时，使用 ADIOS2 读取使用单个 MPI 进程写入的探索数据。&lt;/li&gt;
&lt;li&gt;通过探索前面的两个概念，将网格的读取扩展到并行。&lt;/li&gt;
&lt;li&gt;将 FEniCSx 中的 ADIOS2-IO 扩展到检查点功能。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>仪表盘</title>
        <link>https://zalouti.github.io/p/%E4%BB%AA%E8%A1%A8%E7%9B%98/</link>
        <pubDate>Wed, 06 Apr 2022 21:49:32 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E4%BB%AA%E8%A1%A8%E7%9B%98/</guid>
        <description>&lt;h1 id=&#34;仪表盘&#34;&gt;仪表盘&lt;/h1&gt;
&lt;p&gt;当拥有可靠的参照点时——例如机舱中的仪器——养成检查这些参照点的习惯，这样我们就能准确地判定哪里要下力气改进，意识到自己在何时迷失了方向，以及如何迷途知返。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>失败、躺平与我们的时代</title>
        <link>https://zalouti.github.io/p/%E5%A4%B1%E8%B4%A5%E8%BA%BA%E5%B9%B3%E4%B8%8E%E6%88%91%E4%BB%AC%E7%9A%84%E6%97%B6%E4%BB%A3/</link>
        <pubDate>Tue, 05 Apr 2022 08:43:58 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E5%A4%B1%E8%B4%A5%E8%BA%BA%E5%B9%B3%E4%B8%8E%E6%88%91%E4%BB%AC%E7%9A%84%E6%97%B6%E4%BB%A3/</guid>
        <description>&lt;h1 id=&#34;失败意志力与我们的时代-上&#34;&gt;失败、意志力与我们的时代 （上）&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;觉得自己活的很失败，什么能力也没有，却又没有足够的意志力去改变，该怎么办？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为什么今天才回答提问箱中的问题？这是他人的疑惑，同样也是在叩问自己的内心，只有当我足够明白自己的内心的呓语后，才能化作文字。&lt;/p&gt;
&lt;p&gt;这是一篇回答，但同样是新的问题。不希望带来什么人生上的启迪，只是提供一些廉价的观点与看法罢了。&lt;/p&gt;
&lt;h2 id=&#34;认识你自己&#34;&gt;“认识你自己”&lt;/h2&gt;
&lt;p&gt;“觉得自己活得很失败”，那么何为失败呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;学业平平，社交失败？&lt;/li&gt;
&lt;li&gt;体育渣渣，科研小白？&lt;/li&gt;
&lt;li&gt;小镇做题家？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在传统的应试教育培养下，我们大多数人仍然秉持着一种以各种指标来量化一个人的成就，连脱单这种事情都要授予“人生赢家”的称号。&lt;/p&gt;
&lt;p&gt;但是如果这种事情被华大的同学说出去，又会招来一片讥讽：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;“清华的同学都觉得自己很失败，那其他学校的同学怎么办？”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;“连清华的同学都自称普通，那我们怎么办？”&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可见，当我们认为自己十分失败时，总会有一些群体认为这种“失败者的自嘲”大概率是一种无病呻吟，或基于传统考试选拔的分数，或基于未来前景的预测。总之，在传统的“学而优则仕”的视角之下，C9与985，985与211，211与一本，一本与二本，我们永远无法相互理解。&lt;/p&gt;
&lt;p&gt;因此，在我们讨论&lt;strong&gt;失败&lt;/strong&gt;这个话题时，借用《科学作为天职》的分析方法，需要兼顾内在特性与外在特点两种视角：&lt;/p&gt;
&lt;p&gt;一方面，我们是社会中的人，断然不能脱离社会经济文化种种条件为我们施加的各种约束，不加思考脱离社会条件的完全躺平摆烂，无非是面对现实问题的一种的否定式的防御机制。&lt;/p&gt;
&lt;p&gt;另一方面，失败不止“论迹”，同样是一种“论心”的状态。自我评价与自我觉察是我们内心衡量自己失败与否的标尺，因为除非我们自己认为自己很失败，那么没有人能够让我们认为自己很失败。&lt;/p&gt;
&lt;h3 id=&#34;失败的外生性&#34;&gt;失败的外生性&lt;/h3&gt;
&lt;p&gt;我们经常在一些安慰读者“平凡可贵”，或者一些好心规劝大家不要那么悲观的文章中看到这样一句话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;失败了又怎样？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大多数文章对于怎样基本上属于一笔带过的笔法，接下来我们详细地讨论一下“怎样”到底是什么？&lt;/p&gt;
&lt;p&gt;经常刷知乎的话，可能会听说过曹学、失败学、扬学等心灵学科，他们产生的背景也正如霍叔所言@霍华德：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;无论是躺学、微学、纳学、扬学、曹学还是勃学，都是如今年轻人机会稀少，奋斗哲学失效的情况下，面对焦虑提出的不同主张。当代青年可能奋斗多年也无法突围，如何自处是每个青年都必须面对的问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;相比于我们的父辈，他们青年时代正是改革开放如火如荼的年代，充满了阶层上升的空间与个人奋斗的机会，以至于有句名言叫做“站在风口上，猪都能飞起来。”我们不能全盘否认他们今日的生活，是经由无数的汗水与泪水所换来的，那个时代也并非绝对的一帆风顺——90年代末期的经济动荡与08年的金融海啸并不会选择性攻击。&lt;/p&gt;
&lt;p&gt;但需要正视的是，时代变了。一方面，对于学生群体而言，上世纪末期的知识要素是可以迅速转化为资产要素，但是面对大学先后经历本科生扩招与研究生扩招，学历贬值的速度不断加快，利用知识实现阶层跃升的成本越来越昂贵。&lt;/p&gt;
&lt;p&gt;另一方面，我国国情又与一些国家不同，我们实现了全面小康，基本上不存在由于贫困而饿死人的现状，基本解决了温饱问题，这确实是人类历史上与贫困做斗争的伟大壮举。&lt;/p&gt;
&lt;p&gt;这与失败有什么关系呢？有，而且很大。这种经济条件使得我们在社会中可以维持人的生物生命体征而存活。我国仍有“6亿人每月收入1000元”，你有什么理由和资格抱怨自己吃不好？这让所有慨叹失败的人，失去了道德上的正确性，因为这种行为会受到来自知识、生产资料积累比自己不足的群体的鄙视与嘲讽，变成了小布尔乔亚的无病呻吟。你细想，这是不是和前文提到学历层层鄙视有着异曲同工的感觉。&lt;/p&gt;
&lt;p&gt;所以，当我们慨叹失败的时候，难道真的是担心自己受冻受饥吗？并不是，潜意识是在担心没有上升空间，没有阶层流动罢了。&lt;/p&gt;
&lt;p&gt;再加之，面对当下的就业压力，就算选择了所谓的高薪职业，这也只是暂时的缓兵之计。在红利期，大家会一起996称兄道弟，拼命灌水论文收割红利，并产生一种错觉：时代的浪潮只是个人奋斗宏大叙事陪衬的浪花。然而进入增量时代，知识与个体渺小的财富积累并不能作为阶层的入场券这一事实将暴露无遗，个人体力精力的衰老流逝将于人口红利的余波赛跑，“只有当潮水退去，才知道谁在裸泳。”说的就是这种现象。基于中国传统文化的保守性来讲，大部分个体会想方设法地建造自己的护城河，当这一举措屡屡受挫后，各种丧文化便接踵而来：emo、躺平、摆烂。&lt;/p&gt;
&lt;p&gt;我们都是社会中的人，我们都无法逃脱不断被评价的体系：我们日常敬重的师长会被论文与指标评价，学生会被学历评价，当学历辨识度不够时，自然会派生出科研、体育、文艺种种评价指标。或者更确切地说，知识、体育、文艺种种，被强制赋予了评价的性质。&lt;/p&gt;
&lt;p&gt;如此多的评价指标，除了基于10+x亿庞大人口的基数能够全部通关的个体，对于大多数人来讲，总有一项是你不擅长的，如果我们单纯基于外部的视角，外界的筛选就会在这项指标上面标记出&lt;strong&gt;失败&lt;/strong&gt;，我并没有指责这套制度的不合理性，只是在描述一种客观的现象。&lt;/p&gt;
&lt;p&gt;这便是失败的外生性。&lt;/p&gt;
&lt;h3 id=&#34;失败的内生性&#34;&gt;失败的内生性&lt;/h3&gt;
&lt;p&gt;谈完失败的外生性，那么我们开始谈论失败的内生性。正如本节的标题“认识你自己”一样，失败的存在依附于个体，“皮之不存，毛将焉附？”，为了讨论清楚失败，我们需要先粗浅的讨论一下这个问题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我到底是谁？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在《存在主义心理治疗》之中曾有这样一个有趣的活动，大意是，请参与者在一系列卡片上写下关于自己的特质，之后，想象自己将要走向生命的终结，一张一张地舍弃特质，直至剩下最后一张卡片。&lt;/p&gt;
&lt;p&gt;这种实验的目的并不是想要得出意林式的结论，这个引子只是开端，它只是帮助我们提出一系列问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我的能力可以代表我自己吗？&lt;/li&gt;
&lt;li&gt;我强健的体质可以代表我自己吗？&lt;/li&gt;
&lt;li&gt;对我最重要的事情是什么？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在信息过载的今天，未来的不确定性进一步增加，面对不确定度，人类本能会迫使我们寻求解释，构建解决方法，此时面对潮水般的信息流，又有哪些想法与欲望真的是我们自己的欲望与想法呢？从这个角度来看，我们比我们的父辈更加存在某种意义上的信息茧房。&lt;/p&gt;
&lt;p&gt;再举一个例子，“一人一策”的实际参与人数仅仅在个位数，为何并没有达到某些社会之上的专家所预测的人数？这个问题，是否又与刚刚所言有着异曲同工之妙？&lt;/p&gt;
&lt;p&gt;因此，失败的内生性是被外生性所绑架的，表现为：&lt;/p&gt;
&lt;p&gt;我们都在追求着自我的定义权，但是哪些想法真的是我们自身的想法？抑或是随着周围事物变迁的潮水翻涌，却误认为这是个人奋斗姿态的抑扬？这是动机迷茫的失败。&lt;/p&gt;
&lt;p&gt;当我们获得了自由的选择权之后，却又害怕这新鲜的自由，抑或是交给“我们都有最好的安排”，抑或是“小孩子才做选择，大人全都要”，避免取舍权衡的纠结，这便是选择过程上的失败。&lt;/p&gt;
&lt;p&gt;但是失败的内生性不止于此，它会反作用于外界。如果要承认自己的失败，除了意味着没有达到外界种种的评价指标，潜台词还意味对于个体而言更可怕的事实：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果个体接受自己对人生处境的责任并作出改变的决定，就暗示着个体要独自为过去无法改变的悲惨生活负责，也暗示着很久以前本来能够改变。——《存在主义心理治疗》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;如果我们接受的失败的判定，那么潜意识就认为我们可以接受外在的评价体系&lt;/li&gt;
&lt;li&gt;如果我们否认这种失败的判定，那么我们则需要构建新的评价指标，这端赖于个体对于自我的较为清晰的认知，又有几人能做到呢？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后，让我们回到一开始那个关于失败的提问：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;觉得自己活的很失败，什么能力也没有，却又没有足够的意志力去改变，该怎么办？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;是因为能力没有达到预设的想法，加之认为能力代表了一个人的评价体系的一切，于是认为自己很失败吗？&lt;/p&gt;
&lt;p&gt;我不知道，答案在你不在我。&lt;/p&gt;
&lt;h2 id=&#34;华枝春满天心月圆&#34;&gt;“华枝春满，天心月圆”&lt;/h2&gt;
&lt;p&gt;每当谈及一些个体改变的问题时，经常会出现的问题是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;意志力不够怎么办？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个问题很具有时代的色彩，这种问题在很多年之前很少会被问起，就算问起之后，回答也不尽相同。但是总归，这是一个不容易回答的问题，简单从道与术两个方面结合着谈谈。&lt;/p&gt;
&lt;p&gt;很多时候并不是从内心没有意识到要改变，如果连改变的必要性都没有意识到的话，想必也不会提出这个问题。相反，就我自己而言，很多时候我们是把精力消耗在和众多的意识搏斗的无尽内耗之中，当我们精疲力竭时，自然无力改变。&lt;/p&gt;
&lt;p&gt;拿我自己的例子来说，许多人对于我有一种刻板影响，认为我一定是天天晨跑，绝对有着强大的意志力，所以才会经常有人问我类似的问题（😓&lt;/p&gt;
&lt;p&gt;但其实并不是这样的，下面就讲讲我的晨跑的历史，&lt;strong&gt;唯有真实，方能为意志力祛魅。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2020年9月8号，开学的第二天。由于假期在准备出书等等一系列事情，加之20届的强基人的暑假基本只有一个月，所以我高中三年的作息基本上还维持得不错，担心自己早早醒来之后无事可做，于是前一天晚上在树洞打听到了晨跑队的存在，8号起床之后就开始了人生中的第一个五公里了。&lt;/p&gt;
&lt;p&gt;大一上或多或少保持着高中那股冲劲，所以虽然在高中体育一般属于吊车尾的状态，但是好歹坚持了10天晨跑之后顺利地进入大群，正式成为晨跑队的一员。&lt;/p&gt;
&lt;p&gt;晨跑将近两年，对于晨跑的人数的周期性变化自然了如指掌：从9月份开始到国庆，人数逐渐达到顶峰，之后随着气温的降低，人数逐渐到达最低点，在开春之后人数随着气温一同上涨，回到九月，loop。&lt;/p&gt;
&lt;p&gt;因此，对于坚持晨跑来讲，最困难的，便是从11月份到1月份这三个月。每天早晨起床的时候，总会在脑海里和自己无数次地搏斗：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;昨晚12:30才睡觉，早晨还要上数分，咕了吧&lt;/li&gt;
&lt;li&gt;最近晨跑好困的，需要休息了&lt;/li&gt;
&lt;li&gt;昨天跑步脚腕疼，多睡一会儿&lt;/li&gt;
&lt;li&gt;外面好冷好黑……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大一上保留着高中的冲劲，再加之东方能一起晨跑，所以两个人的出勤率还算非常高的，在12月份甚至能够达到九十多公里的里程，大一上的跑步我并没有想到很多意志力相关的事情，相反，和大学同学一起跑过破晓的荷塘与主楼，之后一起去学数分高代，和当年与高中同学一起晚饭前在操场奔跑，之后一起学高考的感觉一样的充实与美好，带着258.81 km的总里程结束了大一上的生活。&lt;/p&gt;
&lt;p&gt;大一下，由于王在中长跑二队的训练需要充分的休息，所以晨跑的零字班只剩下我一个人（现在也是，悲）。但是由于春花烂漫与夏日清晨的召唤，虽然也有过挣扎，但是被被子封印的次数并不是很多，大一下结束的末尾甚至跑出了人生中第一个半马，在没有多少阻力的情况下，自然不需要考虑意志力的问题。&lt;/p&gt;
&lt;p&gt;问题出现在大二上，由于对于时间的把控并不完善，加之认为大一渡劫成功之后就可以彻底躺平的错误心态，导致我经常深夜在B站看吃播。大二上的寒冬并不是那么好过，学业压力——理论力学三次小测两次不及格，生活压力——一些变故让我开始深夜拿着心理治疗的书籍一个人emo，此时，晨跑的次数降到最低，一个月大概只能跑个五六次。&lt;/p&gt;
&lt;p&gt;此时我开始考虑意志力的问题，并在一开始认为自己确实是意志力不够。于是内心便不自主地蹦出一些词汇——放纵、堕落，等等。我记得无数个穿衣服穿到一半的早晨，我带着昨晚看吃播看到3点的倦意草草睡去；无数个祈祷明天重度污染的早晨（晨跑队在AQI&amp;gt;150的时候就会暂停晨跑）；无数个关掉闹钟喝口水继续上床睡觉的早晨。当我去上早八草草骑车赶往六教时，才发现自己已经好久没有见到过破晓的荷塘与主楼，同样没有见到结霜的紫操与西操，错过了清华路的秋叶与秋意，但此时面对学业、生活、体育三方面的恶性循环，我除了在内心一次又一次的苛责自己之外，没有什么行动，于是，我带着152.16 km草草结束了大二上，学业排名下降、体质下滑、生活糟心。&lt;/p&gt;
&lt;p&gt;时间来到这个学期，仍然是我一个零字班在晨跑，然而这个学期跑步的次数已经超过了同期水平。在经历了上个学期的低谷之后，这个学期的晨跑会有纠结吗？有，比如当我敲下这一行字的这一天(4/05)便在早晨经历了这样一场斗争。&lt;/p&gt;
&lt;p&gt;然而为什么最终还是去跑步了？&lt;/p&gt;
&lt;p&gt;因为我允许我产生再睡一会儿的念头，但是这并不影响我早晨必须要去晨跑的原则。我理解身体中一部分的我对于温暖的床的渴望，但同时我也知道每天的晨跑对我的重要性无可替代——生活本身就如此的xxx，如果再失去每天晨光下的花红柳绿、晨风吹拂、星月残影，以及最重要的——一起前行的力量感，怎么能够忍受这种生活！&lt;/p&gt;
&lt;p&gt;草草讲完我的故事，或许能够实现对于意志力的祛魅？&lt;/p&gt;
&lt;p&gt;大多数情况下我是一个没有多少意志力的人，我更多的做法，反而是让自己更少的用到意志力：和好友一同奔跑，和大家一起奔跑，永远向往着晨光中独属于自己的时光，它们会帮助我更好的坚持晨跑，这是较为技术性的总结。&lt;/p&gt;
&lt;p&gt;但是更重要的，是与自己的和解。身体需要休息，可以理解；人类的本质中存在惰性，这太正常了，学会接受自我，但是谨记自己的原则与真正想要的事情，这是更为“道”的总结。&lt;/p&gt;
&lt;p&gt;关于开头提到的问题，暂时就说这么多。若说错了，还请指教。不过，写作当然就是为了自引。引用我在《沟通表达基础与进阶》课程中的新年总结，来结束这篇充满呓语的文章吧：&lt;/p&gt;
&lt;p&gt;之前看到过某位朋友的tape提问箱，问题是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上大学究竟带给了我什么?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我的回答是： 战胜过去的恐惧，以及遇到新的恐惧。&lt;/p&gt;
&lt;p&gt;大二上我学到的最重要的东西，或许就是，在面对恐惧时，不是自律的自我和恐惧一同携手将自己打倒。相反，自律的我、放纵的我、强大的我、弱小的我，都是我不可或缺的一部分。学会让不同的自我相互融合，或许就是想和大家分享的一些道理。&lt;/p&gt;
&lt;p&gt;最后，用禅宗的一句话来作为这一部分的结语吧： 华枝春满，天心月圆。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>第八章·应力状态与强度理论及其工程应用（上）</title>
        <link>https://zalouti.github.io/p/%E7%AC%AC%E5%85%AB%E7%AB%A0%E5%BA%94%E5%8A%9B%E7%8A%B6%E6%80%81%E4%B8%8E%E5%BC%BA%E5%BA%A6%E7%90%86%E8%AE%BA%E5%8F%8A%E5%85%B6%E5%B7%A5%E7%A8%8B%E5%BA%94%E7%94%A8%E4%B8%8A/</link>
        <pubDate>Sat, 02 Apr 2022 10:01:25 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E7%AC%AC%E5%85%AB%E7%AB%A0%E5%BA%94%E5%8A%9B%E7%8A%B6%E6%80%81%E4%B8%8E%E5%BC%BA%E5%BA%A6%E7%90%86%E8%AE%BA%E5%8F%8A%E5%85%B6%E5%B7%A5%E7%A8%8B%E5%BA%94%E7%94%A8%E4%B8%8A/</guid>
        <description>&lt;h1 id=&#34;应力状态与强度理论及其工程应用上&#34;&gt;应力状态与强度理论及其工程应用（上）&lt;/h1&gt;
&lt;h2 id=&#34;应力状态的基本概念&#34;&gt;应力状态的基本概念&lt;/h2&gt;
&lt;p&gt;应力的点的概念：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;同一个截面上，不同点的应力不同&lt;/li&gt;
&lt;li&gt;同一点处，过同一点不同方向的面上的应力各不相同&lt;/li&gt;
&lt;li&gt;不仅横截面上存在应力，斜截面上也存在应力&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;应力状态&lt;/strong&gt;：&lt;strong&gt;过一点、在不同方向面上应力的集合&lt;/strong&gt;，称之为这一点的应力状态&lt;/p&gt;
&lt;p&gt;&lt;em&gt;为什么要研究应力状态？&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不仅横截面上存在应力，斜截面上也存在应力，所以二者均需研究，故引出了应力状态。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们描述应力状态使用有限的几个面确定应力状态去描述&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;三维采用正方体的6个面&lt;/li&gt;
&lt;li&gt;二维（平面）采用4个面&lt;/li&gt;
&lt;li&gt;一维（单向）采用两个面，此时仅有正应力$\sigma_{x}$&lt;/li&gt;
&lt;li&gt;纯剪切状态，二维情形，此时只有切应力$\tau$&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;平面应力状态任意方向面上的应力&#34;&gt;平面应力状态任意方向面上的应力&lt;/h2&gt;
&lt;h3 id=&#34;方向角与应力分量的正负号约定&#34;&gt;方向角与应力分量的正负号约定&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;正应力：拉伸为正，压缩为负&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;剪应力：使得微元局部顺时针转动为正，反之为负（与投影平衡的正负进行区分）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方向角：即为x坐标轴与平面法向&lt;em&gt;n&lt;/em&gt;的夹角，由逆时针转动为正，顺时针为负&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;微元的局部平衡&#34;&gt;微元的局部平衡&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;平衡对象：用$\theta$斜截面截取的微元局部&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参加平衡的量：应力乘以面积得到&lt;strong&gt;力&lt;/strong&gt;，才能参加平衡&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;由于未知数为$\sigma_{x’} \quad\tau_{x&amp;rsquo;y&#39;}$，故取平衡方程为y’-x’方向，可得：
$$
\begin{gathered}
\sigma_{x^{\prime}}=\frac{\sigma_{x}+\sigma_{y}}{2}+\frac{\sigma_{x}-\sigma_{y}}{2} \cos 2 \theta-\tau_{x y} \sin 2 \theta \\
\tau_{x^{\prime} y^{\prime}}=\frac{\sigma_{x}-\sigma_{y}}{2} \sin 2 \theta+\tau_{x y} \cos 2 \theta
\end{gathered}
$$
类比转轴定理：
$$
\begin{aligned}
&amp;amp;I_{y 1}=\frac{I_{y}+I_{z}}{2}+\frac{I_{y}-I_{z}}{2} \cos 2 \alpha+I_{y z} \sin 2 \alpha \\
&amp;amp;I_{z 1}=\frac{I_{y}+I_{z}}{2}-\frac{I_{y}-I_{z}}{2} \cos 2 \alpha-I_{y z} \sin 2 \alpha \\
&amp;amp;I_{y 1 z 1}=-\frac{I_{y}-I_{z}}{2} \sin 2 \alpha+I_{y z} \cos 2 \alpha
\end{aligned}
$$
同样，公式中的$\theta$可以看作变量，可以进行变量的代换与换元&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;应力状态中的主应力与最大剪应力&#34;&gt;应力状态中的主应力与最大剪应力&lt;/h2&gt;
&lt;h3 id=&#34;主平面主应力主方向&#34;&gt;主平面、主应力、主方向&lt;/h3&gt;
&lt;p&gt;当剪应力$\tau_{x’y’}=0$时，设对应的夹角为$\theta_p$:
$$
tan 2\theta_p =-\frac{2\tau_{xy}}{\sigma_x-\sigma_y}
$$
此时对应的平面称为主平面，主平面上的正应力称为主应力，主方向即为主平面的法线方向，使用夹角$\theta_p$表示&lt;/p&gt;
&lt;p&gt;我们对于斜截面的正应力$\sigma_{x’}$求导可得，当$\sigma_{x’}$取得极值时，角度恰为主方向对应的夹角$\theta_p$，说明&lt;strong&gt;主平面上正应力取得极值&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Hints:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;由剪应力互等定理可知，当主平面上剪应力为0时，另一与其垂直的平面上的剪应力同样为0，即说明$\theta_p$与$\theta_p+\frac{\pi}{2}$均为主方向，正应力在其上一个为极大值，另一个为极小值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主应力的极值&lt;/p&gt;
&lt;p&gt;将$\theta_p$代入$\sigma_{x’}$中，可得：
$$
\begin{aligned}
\sigma^{\prime}=\frac{\sigma_{x}+\sigma_{y}}{2}+\frac{1}{2} \sqrt{\left(\sigma_{x}-\sigma_{y}\right)^{2}+4 \tau_{x y}^{2}} \\
\sigma^{\prime \prime}=\frac{\sigma_{x}+\sigma_{y}}{2}-\frac{1}{2} \sqrt{\left(\sigma_{x}-\sigma_{y}\right)^{2}+4 \tau_{x y}^{2}}
\end{aligned}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;平面应力状态的三个主应力&lt;/p&gt;
&lt;p&gt;注意主平面的定义为&lt;strong&gt;剪应力为0的平面&lt;/strong&gt;，因此斜微元体本身的三角形平面也是一个主平面，且有$\sigma^{&#39;&#39;&#39;}=0$&lt;/p&gt;
&lt;p&gt;按照数值大小排序三个主应力为
$$
\sigma_1 &amp;gt;\sigma_2&amp;gt;\sigma_3
$$&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;研究主平面上的应力较为简单，且可以有效的代表此点的情况。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;面内最大剪应力&#34;&gt;面内最大剪应力&lt;/h3&gt;
&lt;p&gt;对于剪应力$\tau_{x&amp;rsquo;y&#39;}$求导，可得到另一个特征角$\theta_s$：
$$
\tan 2 \theta_{s}=\frac{\sigma_{x}-\sigma_{y}}{2 \tau_{x y}}
$$
同样$\theta_s$与$\theta_s+\frac{\pi}{2}$均为对应的解，对应两个垂直的平面&lt;/p&gt;
&lt;p&gt;将$\theta_s$代入，可得到切应力的极值为：
$$
\tau^{\prime}=\pm \frac{1}{2} \sqrt{\left(\sigma_{x}-\sigma_{y}\right)^{2}+4 \tau_{x y}^{2}}
$$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;但是此时的斜截面为垂直平面，此时确定的最大剪应力是否为对应的整个微元体中的最大剪应力呢？&lt;/p&gt;
&lt;p&gt;见后文&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;主平面与最大剪应力作用面之关系&#34;&gt;主平面与最大剪应力作用面之关系&lt;/h3&gt;
&lt;p&gt;$$
tan 2\theta_p =-\frac{2\tau_{xy}}{\sigma_x-\sigma_y} 
\quad
\tan 2 \theta_{s}=\frac{\sigma_{x}-\sigma_{y}}{2 \tau_{x y}}
$$&lt;/p&gt;
&lt;p&gt;可发现&lt;/p&gt;
&lt;p&gt;$$
tan 2\theta_p \dotproduct tan2\theta_s=-1\to2\theta_p-2\theta_s=\frac{\pi}{2}
$$&lt;/p&gt;
&lt;h3 id=&#34;过一点所有方向面中的最大剪应力&#34;&gt;过一点所有方向面中的最大剪应力&lt;/h3&gt;
&lt;p&gt;此时我们取一个微元体，使得其表面恰好为三对主平面，且此时主应力分别为$\sigma_1$、$\sigma_2$、$\sigma_3$（之前规定的）&lt;/p&gt;
&lt;p&gt;切割方法：分别平行于$\sigma_1$、$\sigma_2$、$\sigma_3$去切割，分析可得面内最大切应力为：
$$
\tau=\frac{\sigma_1-\sigma_2}{2}
\quad
\tau=\frac{\sigma_2-\sigma_3}{2}
\quad
\tau=\frac{\sigma_1-\sigma_3}{2}
$$
由弹性力学的理论可以证明，对于一个微元体，任意的切割均不会使其剪应力超过上述三者的最大值，故过一点所有方向面中的最大剪应力为：
$$
\tau=\frac{\sigma_1-\sigma_3}{2}
$$&lt;/p&gt;
&lt;h2 id=&#34;应力圆及其应用&#34;&gt;应力圆及其应用&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;应力圆是辅助思考分析的工具，而非计算工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由莫尔圆可知
$$
tan2\theta_p=\frac{\tau_{xy}}{\sigma_x-\frac{\sigma_x-\sigma_y}{2}}
$$
莫尔圆的半径$R$为:
$$
R=\frac{1}{2}\sqrt{(\sigma_x-\sigma_y)^2+4\tau_{xy}^2}
$$
因此主应力的大小为
$$
\sigma&#39;=\frac{\sigma_x+\sigma_y}{2} \pm R
$$
最大切应力即为$R$:
$$
R=\frac{1}{2}\sqrt{(\sigma_x-\sigma_y)^2+4\tau_{xy}^2}
$$
且有几何关系：
$$
2\theta_s+2\theta_p=\frac{\pi}{2}
$$&lt;/p&gt;
&lt;h3 id=&#34;三向应力状态的应力圆&#34;&gt;三向应力状态的应力圆&lt;/h3&gt;
&lt;p&gt;分别沿着$\sigma_1$、$\sigma_2$、$\sigma_3$作出应力圆，并画在&lt;strong&gt;同一坐标系&lt;/strong&gt;之中&lt;/p&gt;
&lt;p&gt;微元任一方向面上的应力对应着&lt;strong&gt;三个应力圆之间某一点的坐标&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;平面应力状态存在&lt;strong&gt;应力为0的面&lt;/strong&gt;，其中一个主应力&lt;strong&gt;位于原点&lt;/strong&gt;，同样可以做出三个应力圆&lt;/p&gt;
&lt;h2 id=&#34;承受内压薄壁容器的应力状态&#34;&gt;承受内压薄壁容器的应力状态&lt;/h2&gt;
&lt;p&gt;在中间对称轴上面取一个小微元，设周向应力为$\sigma_t$，轴向应力为$\sigma_m$，由于此时咋子对称轴附近取微元，因此没有剪应力，此时上面两种应力恰为主应力&lt;/p&gt;
&lt;p&gt;将&lt;strong&gt;薄壁容器与容器内的气体&lt;/strong&gt;一同作为受力对象分析，此时界面上的压力将为分布于平面上的均布压力，合力为：
$$
p(\frac{\pi D^2}{4})
$$
由水平方向$\sum F_x=0$可知：
$$
\sigma_m(\pi D)\delta=p(\frac{\pi D^2}{4}) \to \sigma_m=\frac{pD}{4\delta}
$$
在取一个长为$l$的环状容器，取一半及其中气体分析：&lt;/p&gt;
&lt;p&gt;气体产生的合力为:
$$
pDl
$$
由竖直方向$\sum F_y=0$可知：
$$
\sigma_t2\delta l=pDl \to \sigma_t=\frac{pD}{2\delta}
$$
综上，则有：
$$
\sigma_t=\frac{pD}{2\delta} \quad \sigma_m=\frac{pD}{4\delta}
$$
上述分析中，忽略了气体内压对于应力分析的影响，是由于数量级的原因。&lt;/p&gt;
&lt;h2 id=&#34;广义胡克定律&#34;&gt;广义胡克定律&lt;/h2&gt;
&lt;p&gt;要求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;线弹性阶段&lt;/li&gt;
&lt;li&gt;线性微小变形&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于平面应力状态，广义胡克定律为：
$$
\varepsilon_{x}=\frac{1}{E}\left(\sigma_{x}-v \sigma_{y}\right) \\
\varepsilon_{y}=\frac{1}{E}\left(\sigma_{y}-v \sigma_{x}\right) \\
\varepsilon_{z}=\frac{\nu}{E}\left(\sigma_{y}+ \sigma_{x}\right) 
\\
\gamma_{x y}=\frac{\tau_{x y}}{G}
$$
对于三维的应力状态可得：
$$
\varepsilon_{x}=\frac{1}{E}\left[\sigma_{x}-v\left(\sigma_{y}+\sigma_{z}\right)\right] \\
\varepsilon_{y}=\frac{1}{E}\left[\sigma_{y}-v\left(\sigma_{z}+\sigma_{x}\right)\right] \\
\varepsilon_{z}=\frac{1}{E}\left[\sigma_{z}-v\left(\sigma_{x}+\sigma_{y}\right)\right] \\
\gamma_{x y}=\frac{\tau_{x y}}{G} \\
\gamma_{x z}=\frac{\tau_{x z}}{G} \\
\gamma_{y z}=\frac{\tau_{y z}}{G}
$$
其中应变指标满足下指标轮换，这反映了&lt;strong&gt;材料的各向同性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在主应力下，则有：
$$
\begin{aligned}
&amp;amp;\varepsilon_{1}=\frac{1}{E}\left[\sigma_{1}-v\left(\sigma_{2}+\sigma_{3}\right)\right] \
&amp;amp;\varepsilon_{2}=\frac{1}{E}\left[\sigma_{2}-v\left(\sigma_{3}+\sigma_{1}\right)\right] \
&amp;amp;\varepsilon_{3}=\frac{1}{E}\left[\sigma_{3}-v\left(\sigma_{1}+\sigma_{2}\right)\right]
\end{aligned}
$$&lt;/p&gt;
&lt;h3 id=&#34;各项同性材料各弹性常数之间的关系&#34;&gt;各项同性材料各弹性常数之间的关系&lt;/h3&gt;
&lt;p&gt;满足：
$$
G=\frac{E}{2(1+v)}
$$
对于大多数各项同性材料，泊松比一般在0~0.5之间取值，切变模量的取值范围为：
$$
\frac{E}{3}&amp;lt;G&amp;lt;\frac{E}{2}
$$&lt;/p&gt;
&lt;h2 id=&#34;应变能与应变能密度&#34;&gt;应变能与应变能密度&lt;/h2&gt;
&lt;h3 id=&#34;总应变能密度&#34;&gt;总应变能密度&lt;/h3&gt;
&lt;p&gt;取正好处在主应力状态的微单元体，可以得到每个主应力对应的应变为：
$$
\sigma_{1} \mathrm{~d} y \mathrm{~d} z \rightarrow \varepsilon_{1} \mathrm{~d} x \\
\sigma_{2} \mathrm{~d} x \mathrm{~d} z \rightarrow \varepsilon_{2} \mathrm{~d} y \\
\sigma_{3} \mathrm{~d} y \mathrm{~d} x \rightarrow \varepsilon_{3} \mathrm{~d} z
$$
由于为线弹性，故应变能为：
$$
\mathrm{d} W \\
=\frac{1}{2}\left(\sigma_{1} \mathrm{~d} y \mathrm{~d} z\right)\left(\varepsilon_{1} \mathrm{~d} x\right) +\frac{1}{2}\left(\sigma_{2} \mathrm{~d} x \mathrm{~d} z\right)\left(\varepsilon_{2} \mathrm{~d} y\right) +\frac{1}{2}\left(\sigma_{3} \mathrm{~d} x \mathrm{~d} y\right)\left(\varepsilon_{3} \mathrm{~d} z\right) \\
=\frac{1}{2}\left(\sigma_{1} \varepsilon_{1}+\sigma_{2} \varepsilon_{2}+\sigma_{3} \varepsilon_{3}\right)(\mathrm{d} x \mathrm{~d} y \mathrm{~d} z) \\
=\mathrm{d} V_{\varepsilon}
$$
应变能密度$v$:
$$
\begin{aligned}
v=&amp;amp; \frac{\mathrm{d} V_{\varepsilon}}{\mathrm{d} V}=\frac{\frac{1}{2}\left(\sigma_{1} \varepsilon_{1}+\sigma_{2} \varepsilon_{2}+\sigma_{3} \varepsilon_{3}\right)(\mathrm{d} x \mathrm{~d} y \mathrm{~d} z)}{(\mathrm{d} x \mathrm{~d} y \mathrm{~d} z)} \\
&amp;amp;=\frac{1}{2}\left(\sigma_{1} \varepsilon_{1}+\sigma_{2} \varepsilon_{2}+\sigma_{3} \varepsilon_{3}\right)\\
&amp;amp;=\frac{1}{2 E}\left[\sigma_{1}^{2}+\sigma_{2}^{2}+\sigma_{3}^{2}-2 v\left(\sigma_{1} \sigma_{2}+\sigma_{2} \sigma_{3}+\sigma_{3} \sigma_{1}\right)\right]
\end{aligned}
$$&lt;/p&gt;
&lt;h3 id=&#34;体积改变能密度与畸变能密度&#34;&gt;体积改变能密度与畸变能密度&lt;/h3&gt;
&lt;p&gt;将一般的应力状态进行和分解&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/04/11/FpXySaQoJrIw7fH.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/04/11/FpXySaQoJrIw7fH.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;应变状态的和分解&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;应变状态的和分解&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这两个应力状态满足&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一个不改变形状、只改变体积&lt;/li&gt;
&lt;li&gt;第二个不改变体积，只改变形状&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;设体积改变能密度为$v_{\mathrm{v}}$，则有：
$$
v_{\mathrm{v}}=\frac{1-2 v}{6 E}\left(\sigma_{1}+\sigma_{2}+\sigma_{3}\right)^{2}
$$
设畸变能密度为$v_{\mathrm{d}}$，则有：
$$
v_{\mathrm{d}}=\frac{1+v}{6 E}\left[\left(\sigma_{1}-\sigma_{2}\right)^{2}+\left(\sigma_{2}-\sigma_{3}\right)^{2}+\left(\sigma_{3}-\sigma_{1}\right)^{2}\right]
$$
应变能密度之间满足：
$$
v=v_V+v_d
$$
这种分解的特殊之处在于，应变能一个非线性的表达式，竟然可以使用&lt;strong&gt;线性的叠加！&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>第七章·梁的变形分析与刚度问题</title>
        <link>https://zalouti.github.io/p/%E7%AC%AC%E4%B8%83%E7%AB%A0%E6%A2%81%E7%9A%84%E5%8F%98%E5%BD%A2%E5%88%86%E6%9E%90%E4%B8%8E%E5%88%9A%E5%BA%A6%E9%97%AE%E9%A2%98/</link>
        <pubDate>Mon, 28 Mar 2022 09:47:23 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E7%AC%AC%E4%B8%83%E7%AB%A0%E6%A2%81%E7%9A%84%E5%8F%98%E5%BD%A2%E5%88%86%E6%9E%90%E4%B8%8E%E5%88%9A%E5%BA%A6%E9%97%AE%E9%A2%98/</guid>
        <description>&lt;h1 id=&#34;梁的变形分析与刚度问题&#34;&gt;梁的变形分析与刚度问题&lt;/h1&gt;
&lt;h2 id=&#34;梁的变形与梁的位移&#34;&gt;梁的变形与梁的位移&lt;/h2&gt;
&lt;h3 id=&#34;梁的曲率与位移&#34;&gt;梁的曲率与位移&lt;/h3&gt;
&lt;p&gt;挠度曲线：平面弯曲下，梁的轴线弯曲成平面曲线，这条曲线叫做挠度曲线。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/04/25/eHJTujrkEBt8IUA.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/04/25/eHJTujrkEBt8IUA.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;挠度曲线&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;挠度曲线&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;$w(x)$:某一点受弯曲之后下降的高度&lt;/p&gt;
&lt;p&gt;$\rho(x)$：x处的曲率半径&lt;/p&gt;
&lt;p&gt;$\theta(x)$:曲率半径与垂直法向的夹角&lt;/p&gt;
&lt;p&gt;根据弯曲可知，梁的纯弯曲满足：
$$
\frac{1}{\rho}=\frac{M}{EI}
$$&lt;/p&gt;
&lt;h3 id=&#34;梁截面的三种位移&#34;&gt;梁截面的三种位移&lt;/h3&gt;
&lt;p&gt;此处位移为广义坐标对应的广义位移。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;挠度：横截面形心处的铅垂位移，用&lt;em&gt;w&lt;/em&gt;表示&lt;/li&gt;
&lt;li&gt;转角：变形后的横截面，相对于变形前的中性轴所转过的夹角$\theta$&lt;/li&gt;
&lt;li&gt;水平位移（小变形下忽略）：横截面形心沿着水平方向的位移&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;挠度与转角的相互关系&#34;&gt;挠度与转角的相互关系&lt;/h3&gt;
&lt;p&gt;规定挠度&lt;strong&gt;向下为正&lt;/strong&gt;，建立w-x坐标系则有：
$$
\frac{dw}{dx}=tan \theta \approx \theta
$$
则称$w=w(x)$为挠度方程。&lt;/p&gt;
&lt;h2 id=&#34;梁的小挠度微分方程及其积分&#34;&gt;梁的小挠度微分方程及其积分&lt;/h2&gt;
&lt;h3 id=&#34;微分方程的建立&#34;&gt;微分方程的建立&lt;/h3&gt;
&lt;p&gt;已知数学中的曲率公式为：
$$
\frac{1}{\rho}=\frac{|\frac{d^2 w}{dx^2}|}{[1+(\frac{d w}{dx})^2]^{3/2}}
$$&lt;/p&gt;
&lt;p&gt;在小挠度情况下$\frac{dw}{dx}$为小量，略去分母上的二阶小量可得：
$$
\frac{d^2w}{dx^2}= \pm\frac{M}{EI}=\pm \frac{1}{\rho}
$$
正负号与&lt;strong&gt;&lt;em&gt;w&lt;/em&gt;坐标取向&lt;/strong&gt;有关，在力矩$M$碗口朝上的情况下，当坐标w正方向朝下时，上式取负号，正方向朝上时，上式取正号。&lt;/p&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/04/25/hQw5I6yiWlzFpNa.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/04/25/hQw5I6yiWlzFpNa.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;正负号约定&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;正负号约定&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;两侧积分可得
$$
\frac{d w}{d x}=\theta=-\int \frac{M(x)}{E I} \mathrm{~d} x+C 
\\
w=\int_{l}(-\int_{l} \frac{M(x)}{E I} \mathrm{~d} x) \mathrm{d} x+C x+D
$$&lt;/p&gt;
&lt;h3 id=&#34;积分常数的确定&#34;&gt;积分常数的确定&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在固定轴支座处，约束条件为挠度w=0&lt;/li&gt;
&lt;li&gt;在墙面的固定端，约束条件为：挠度w与夹角$\theta$均为0&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;连续条件&lt;/strong&gt;：在集中力、集中力偶、分布载荷间断处，两侧的挠度与转角对应相等，$w_1=w_2 \quad \theta_1=\theta_2$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Hints&lt;/em&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在建立梁的弯矩方程时，统一由&lt;strong&gt;截面左侧部分&lt;/strong&gt;建立方程，这样可以方便确定待定常数&lt;/li&gt;
&lt;li&gt;不要展开力系简化中的力臂项&lt;/li&gt;
&lt;li&gt;挠度方程需要分段去写，分为n段，会有2n个待定常数&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;叠加法确定梁的挠度和转角&#34;&gt;叠加法确定梁的挠度和转角&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;先决条件：在线弹性、小变形问题下，梁的弯曲问题，是线性问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;设有$n$载荷, 第$i$个载荷单独作用时, 产生$M_{i}$
$$
\left.\begin{array}{c}
M=\sum_{i=1}^{n} M_{i} \
\frac{\mathrm{d}^{2} w_{i}}{\mathrm{~d} x^{2}}=-\frac{M_{i}}{E I} \Rightarrow w_{i}
\end{array}\right} \Rightarrow w=\sum_{i=1}^{n} w_{i}
$$&lt;/p&gt;
&lt;h3 id=&#34;逐段钢化法&#34;&gt;逐段钢化法&lt;/h3&gt;
&lt;p&gt;将杆件逐段钢化，将挠度与角度代数叠加，即可得到最终的挠度与转角。&lt;/p&gt;
&lt;p&gt;原理在于：逐段钢化法中，产生$\theta$转角的微段都纳入计算，与之前并无区别。这种算法实际上是对于&lt;strong&gt;自身转角&lt;/strong&gt;与&lt;strong&gt;传导转角&lt;/strong&gt;的一种叠加。&lt;/p&gt;
&lt;h3 id=&#34;斜弯曲时的位移&#34;&gt;斜弯曲时的位移&lt;/h3&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/04/25/Jstf45wdDzXKkFR.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/04/25/Jstf45wdDzXKkFR.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;斜弯曲&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;斜弯曲&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;设夹角满足
$$
\tan \theta=\frac{F_{\mathrm{P} z}}{F_{\mathrm{P} y}} \quad \tan \alpha=\frac{w_{z}}{w_{y}}
$$
由挠度的定义可知：
$$
\tan \alpha=\frac{w_{z}}{w_{y}}=\frac{\frac{F_{\mathrm{P} z} l^{3}}{3 E I_{y}}}{\frac{F_{\mathrm{P} y}}{3 E I_{z}^{3}}}=\frac{F_{\mathrm{P} z}}{F_{\mathrm{P} y}} \cdot \frac{I_{z}}{I_{y}}=\tan \theta \frac{I_{z}}{I_{y}}
$$
​&lt;/p&gt;
&lt;p&gt;因此
$$
\tan \theta \neq \tan \alpha\left(I_{z} \neq I_{y}\right)
$$&lt;/p&gt;
&lt;h2 id=&#34;奇异函数的应用&#34;&gt;奇异函数的应用&lt;/h2&gt;
&lt;h3 id=&#34;奇异函数的定义&#34;&gt;奇异函数的定义&lt;/h3&gt;
&lt;p&gt;$$&lt;/p&gt;
&lt;p&gt;$$&lt;/p&gt;
&lt;h2 id=&#34;梁的刚度问题&#34;&gt;梁的刚度问题&lt;/h2&gt;
&lt;h3 id=&#34;梁的刚度条件&#34;&gt;梁的刚度条件&lt;/h3&gt;
&lt;p&gt;$$
\begin{gathered}
w_{\max } \leq[w] \\
\theta_{\max } \leq[\theta]
\end{gathered}
$$&lt;/p&gt;
&lt;h2 id=&#34;简单静不定梁&#34;&gt;简单静不定梁&lt;/h2&gt;
&lt;h3 id=&#34;多余约束与静不定次数&#34;&gt;多余约束与静不定次数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;静定问题与静定结构：未知力的个数等于独立的平衡方程的个数&lt;/li&gt;
&lt;li&gt;静不定问题与静不定结构：未知力的个数多于独立的平衡方程的个数&lt;/li&gt;
&lt;li&gt;静不定次数：未知力的个数与独立的平衡方程的差&lt;/li&gt;
&lt;li&gt;多余约束：保持结构静定多余的约束&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;平衡方程+变形协调+本构方程/物性关系&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;应用小变形概念可以推知道某些物理量&#34;&gt;应用小变形概念可以推知道某些物理量&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;小变形忽略轴向位移，水平约束力为0&lt;/li&gt;
&lt;li&gt;静定的基本系统
&lt;ul&gt;
&lt;li&gt;用约束力代替约束反力，通过叠加法确定挠度与转角&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;利用对称性也可以求得某些未知量&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;讨论与结论&#34;&gt;讨论与结论&lt;/h2&gt;
&lt;h3 id=&#34;变形和位移的相互关系&#34;&gt;变形和位移的相互关系&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;位移是变形累加的结果。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;有位移不一定有变形，有变形不一定有位移。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;关于梁的连续光滑曲线&#34;&gt;关于梁的连续光滑曲线&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;由弯矩$M$的方向确定轴线的凸凹性&lt;/li&gt;
&lt;li&gt;由约束性质及连续光滑性确定挠度曲线的大致形状以及位置&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>很无名少年</title>
        <link>https://zalouti.github.io/p/%E5%BE%88%E6%97%A0%E5%90%8D%E5%B0%91%E5%B9%B4/</link>
        <pubDate>Fri, 25 Mar 2022 23:22:46 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E5%BE%88%E6%97%A0%E5%90%8D%E5%B0%91%E5%B9%B4/</guid>
        <description></description>
        </item>
        <item>
        <title>Course</title>
        <link>https://zalouti.github.io/p/course/</link>
        <pubDate>Thu, 24 Mar 2022 22:51:31 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/course/</guid>
        <description>&lt;h1 id=&#34;课程资源&#34;&gt;课程资源&lt;/h1&gt;
&lt;p&gt;Stanford Summer Session-不限专业选修Standard暑期课程&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Working</title>
        <link>https://zalouti.github.io/p/working/</link>
        <pubDate>Thu, 24 Mar 2022 14:41:29 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/working/</guid>
        <description>&lt;h1 id=&#34;工作机会梳理&#34;&gt;工作机会梳理&lt;/h1&gt;
&lt;h2 id=&#34;欧洲&#34;&gt;欧洲&lt;/h2&gt;
&lt;p&gt;Meta伦敦以及欧洲八国remote ，亚马逊柏林，谷歌苏黎世，微软剑桥和苏黎世，苹果慕尼黑柏林苏黎世，高通阿姆斯特丹，都有ML AI相关的岗位。3年经验申请瑞士工签也没有问题，其他国家更是有工作就会有工签。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Searching</title>
        <link>https://zalouti.github.io/p/searching/</link>
        <pubDate>Thu, 24 Mar 2022 14:21:15 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/searching/</guid>
        <description>&lt;h1 id=&#34;学习与搜索&#34;&gt;学习与搜索&lt;/h1&gt;
</description>
        </item>
        <item>
        <title>零零阁记</title>
        <link>https://zalouti.github.io/p/%E9%9B%B6%E9%9B%B6%E9%98%81%E8%AE%B0/</link>
        <pubDate>Thu, 24 Mar 2022 13:54:20 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E9%9B%B6%E9%9B%B6%E9%98%81%E8%AE%B0/</guid>
        <description></description>
        </item>
        <item>
        <title>犹记党国亡，但求初心葆</title>
        <link>https://zalouti.github.io/p/%E7%8A%B9%E8%AE%B0%E5%85%9A%E5%9B%BD%E4%BA%A1%E4%BD%86%E6%B1%82%E5%88%9D%E5%BF%83%E8%91%86/</link>
        <pubDate>Thu, 24 Mar 2022 13:52:07 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E7%8A%B9%E8%AE%B0%E5%85%9A%E5%9B%BD%E4%BA%A1%E4%BD%86%E6%B1%82%E5%88%9D%E5%BF%83%E8%91%86/</guid>
        <description></description>
        </item>
        <item>
        <title>文献管理与信息分析1</title>
        <link>https://zalouti.github.io/p/%E6%96%87%E7%8C%AE%E7%AE%A1%E7%90%86%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%88%86%E6%9E%901/</link>
        <pubDate>Thu, 24 Mar 2022 13:39:21 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E6%96%87%E7%8C%AE%E7%AE%A1%E7%90%86%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%88%86%E6%9E%901/</guid>
        <description></description>
        </item>
        <item>
        <title>Orbit</title>
        <link>https://zalouti.github.io/p/orbit/</link>
        <pubDate>Mon, 21 Mar 2022 12:33:00 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/orbit/</guid>
        <description>&lt;h1 id=&#34;测试&#34;&gt;测试&lt;/h1&gt;

&lt;orbit-reviewarea&gt;
    
​	&lt;orbit-prompt
        question =&#34;Andy的实验性？&#34;
        answer=&#34;Orbit&#34;
    &gt;&lt;/orbit-prompt&gt;

    &lt;/orbit-reviewarea&gt;
&lt;p&gt;​		
这样就成功了！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>第六章·梁的应力分析与强度计算</title>
        <link>https://zalouti.github.io/p/%E7%AC%AC%E5%85%AD%E7%AB%A0%E6%A2%81%E7%9A%84%E5%BA%94%E5%8A%9B%E5%88%86%E6%9E%90%E4%B8%8E%E5%BC%BA%E5%BA%A6%E8%AE%A1%E7%AE%97/</link>
        <pubDate>Sun, 20 Mar 2022 20:05:48 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E7%AC%AC%E5%85%AD%E7%AB%A0%E6%A2%81%E7%9A%84%E5%BA%94%E5%8A%9B%E5%88%86%E6%9E%90%E4%B8%8E%E5%BC%BA%E5%BA%A6%E8%AE%A1%E7%AE%97/</guid>
        <description>&lt;h1 id=&#34;梁的应力分析与强度计算&#34;&gt;梁的应力分析与强度计算&lt;/h1&gt;
&lt;h2 id=&#34;与应力分析相关的截面图形几何性质&#34;&gt;与应力分析相关的截面图形几何性质&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么要研究截面图形的几何性质？&lt;/p&gt;
&lt;p&gt;力学性质与几何性质息息相关，受力与变形都受到几何量的影响。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Lagrange力学是一种$n$维曲面上的$Riemann$几何&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;希望能有机会搞清楚这些事情orz&lt;/p&gt;
&lt;h3 id=&#34;静矩形心及其相互关系&#34;&gt;静矩、形心及其相互关系&lt;/h3&gt;
&lt;p&gt;定义截面法向为$x$，其静矩为：
$$
S_y=\int_A z dA\\
S_z=\int_A y dA
$$
静矩可以近似理解为：单位面积对于某一坐标轴的重力的矩，实际上就是&lt;strong&gt;某种静面积/静力的矩&lt;/strong&gt;（设单位面积上的力为一个单位）。&lt;/p&gt;
&lt;p&gt;设形心坐标为$(y_c,z_c)$，则有
$$
S_y=Az_c=\int_A z dA
\\
S_z=Ay_c=\int_A y dA
$$
概括即为：**分力之矩之和等于合力之矩。**本质上是$Lagrange$中值定理。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Hints:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;静矩与形心可以相互确定。&lt;/li&gt;
&lt;li&gt;静矩与坐标相关，形心则有图形本身确定，与坐标无关。&lt;/li&gt;
&lt;li&gt;特殊地，如果图形对于轴的静矩为0，则说明此轴通过形心，反之，若坐标轴通过形心，则说明图形对于这一轴的静矩为0.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于组合图形，静矩的确定方式可以类比质心：
$$
S_y=\sum_{i=1}^nA_iy_{Ci}=Ay_C
\\
S_z=\sum_{i=1}^nA_iz_{Ci}=Az_C
$$&lt;/p&gt;
&lt;h3 id=&#34;惯性矩极惯性矩惯性积惯性半径&#34;&gt;惯性矩、极惯性矩、惯性积、惯性半径&lt;/h3&gt;
&lt;p&gt;惯性矩被称为二阶矩，静矩被称为一阶矩。
$$
I_y=\int_A z^2 dA
\\
I_z=\int_A y^2 dA
$$
此时产生了惯性半径$i_y$、$i_z$的定义为（在将来稳定性分析时会用得到）：
$$
i_y=\sqrt\frac{I_y}{A}
\\
i_z=\sqrt\frac{I_z}{A}
$$&lt;/p&gt;
&lt;p&gt;定义对于$y、z$轴的惯性积$I_{xy}$为：
$$
I_{xy}=\int_A xy dA
$$
定义图形对于$O$点的极惯性矩$I_P$为：
$$
I_P=\int_Ar^2dA
$$
且极惯性矩与轴惯性矩有关系：
$$
I_P=I_y+I_z
$$
&lt;em&gt;Hints：&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;极惯性矩与轴惯性矩的关系反映出：绕坐标原点$O$的所有正交系$I_P$相同&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;正负号情况：
$$
I_y \geq0 \quad I_z\geq 0 \quad I_{yz}未知 \quad I_P\geq0
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常用的惯性矩：&lt;/p&gt;
&lt;p&gt;设圆截面的直径为$d$，则有
$$
I_y=I_z=\frac{\pi d^4}{64} \quad I_P=\frac{\pi d^4}{32}
$$
设矩形截面为$h\times b$（分别对应$y、z$轴），则有
$$
I_y=\frac{b^3h}{12} \quad I_z=\frac{bh^3}{12}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;惯性矩与惯性积的移轴定理&#34;&gt;惯性矩与惯性积的移轴定理&lt;/h3&gt;
&lt;p&gt;其本质是坐标的&lt;strong&gt;平移变换&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Fermat的深刻思想：&lt;/p&gt;
&lt;p&gt;圆锥曲线在不同坐标系下表示的方程不同，如何用一个不变量来检验二者表示的是同一条曲线？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是非常遗憾的一件事。（笑&lt;/p&gt;
&lt;p&gt;因此，简化方程为标准形式，保留下来的仅为最基本的不变量。&lt;/p&gt;
&lt;p&gt;设老坐标系$y-z$（注意z为横轴）的原点$O$在新坐标系$y_1-z_1$下坐标为$(a,b)$，已知$I_y、I_z、I_{yz}$，求$I_{y1}、I_{z1}、I_{y_1z_1}$&lt;/p&gt;
&lt;p&gt;已知坐标变换关系为：
$$
y_1=y+a \quad z_1=z+b
$$
因此根据惯性矩、惯性积的定义可得：
$$
I_{y_1}=\int_A (z+b)^2 dA
\\
I_{z_1}=\int_A (y+a)^2 dA
\\
I_{y_1z_1}=\int_A(z+b)(y+a)dA
$$
即有：
$$
\begin{aligned}
&amp;amp;I_{y 1}=I_{y}+2 b S_{y}+b^{2} A \\
&amp;amp;I_{z 1}=I_{z}+2 a S_{z}+a^{2} A \\
&amp;amp;I_{y 1 z 1}=I_{y z}+a S_{y}+b S_{z}+a b A
\end{aligned}
$$
当老坐标正好通过图形的形心时，静矩$S$为0，则有：
$$
\begin{aligned}
&amp;amp;I_{y 1}=I_{y}+b^{2} A \\
&amp;amp;I_{z 1}=I_{z}+a^{2} A \\
&amp;amp;I_{y 1 z 1}=I_{y z}+a b A
\end{aligned}
$$
&lt;em&gt;Hints&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由于积分的形式可知，从形心开始平移，轴惯性矩总是增加——&lt;strong&gt;形心轴惯性矩最小&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;平移前后惯性积可能增加可能减少&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;惯性矩与惯性积的转轴的概念&#34;&gt;惯性矩与惯性积的转轴的概念&lt;/h3&gt;
&lt;p&gt;本质上是坐标的&lt;strong&gt;旋转变换。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;设老坐标$y-z$逆时针旋转$\alpha$角得到新坐标系$y_1-z_1$：&lt;/p&gt;
&lt;p&gt;可知坐标变换关系为：
$$
\left(\begin{array}{l}
z_{1} \\
y_{1}
\end{array}\right)=\left(\begin{array}{cc}
\cos \alpha &amp;amp; \sin \alpha \\
-\sin \alpha &amp;amp; \cos \alpha
\end{array}\right)\left(\begin{array}{l}
z \\
y
\end{array}\right)
$$&lt;/p&gt;
&lt;p&gt;由定义可知，新坐标系下惯性矩、惯性积则为：
$$
\begin{aligned}
&amp;amp;I_{y 1}=\frac{I_{y}+I_{z}}{2}+\frac{I_{y}-I_{z}}{2} \cos 2 \alpha+I_{y z} \sin 2 \alpha \\
&amp;amp;I_{z 1}=\frac{I_{y}+I_{z}}{2}-\frac{I_{y}-I_{z}}{2} \cos 2 \alpha-I_{y z} \sin 2 \alpha \\
&amp;amp;I_{y 1 z 1}=-\frac{I_{y}-I_{z}}{2} \sin 2 \alpha+I_{y z} \cos 2 \alpha
\end{aligned}
$$
&lt;em&gt;Hints&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;根据上述公式显然有$I_{y_1}+I_{z_1}=I_y+I_z=I_P$&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;主轴与形心主轴主惯性矩与形心主惯性矩&#34;&gt;主轴与形心主轴、主惯性矩与形心主惯性矩&lt;/h3&gt;
&lt;p&gt;显然存在某个$\alpha_0$，使得：
$$
I_{y 0 z 0}=-\frac{I_{y}-I_{z}}{2} \sin 2 \alpha_{0}+I_{y z} \cos 2 \alpha_{0}=0
$$
则称此时这&lt;strong&gt;一对坐标轴&lt;/strong&gt;为主轴。&lt;/p&gt;
&lt;p&gt;且显然有：
$$
\tan 2 \alpha_{0}=\frac{2 I_{y z}}{I_{y}-I_{z}}
$$
此时的轴惯性矩为：
$$
\begin{aligned}
&amp;amp;I_{y 0}=I_{\max }=\frac{I_{y}+I_{z}}{2} \pm \frac{1}{2} \sqrt{\left(I_{y}-I_{z}\right)^{2}+4 I_{y z}^{2}} \\
&amp;amp;I_{z 0}=I_{\min }=\frac{I_{y}+I_{z}}{2} \mp \frac{1}{2} \sqrt{\left(I_{y}-I_{z}\right)^{2}+4 I_{y z}^{2}}
\end{aligned}
$$
&lt;em&gt;Hints&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$I_{y0}、I_{z0}$也是不变量，意味着上述公式中的每一项都与$\alpha$无关&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;图形的轴惯性矩与坐标相关，但是主轴的惯性矩一定对应这些坐标的极大与极小值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;任意一点均有主轴，但是我们最感兴趣的是&lt;strong&gt;形心主轴&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有对称轴截面的惯性主轴：&lt;/p&gt;
&lt;p&gt;当取图形的对称轴为坐标轴，&lt;strong&gt;对称轴以及与之垂直的任意轴&lt;/strong&gt;即为过两者交点的主轴&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;平面弯曲时梁横截面上的正应力&#34;&gt;平面弯曲时梁横截面上的正应力&lt;/h2&gt;
&lt;p&gt;对称面：梁的横截面具有对称轴，所有相同的对称轴组成的平面，称为梁的对称面&lt;/p&gt;
&lt;p&gt;主轴平面：梁的横截面没有对称轴，但是都有过横截面形心的主轴，所有相同的形心主轴组成的平面称为梁的主轴平面。对称面是特殊的主轴平面。&lt;/p&gt;
&lt;p&gt;产生平面弯曲的条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加载平面与主轴平面一致&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;纯弯曲：当截面上&lt;strong&gt;只有弯矩&lt;/strong&gt;，没有其他内力时，即为纯弯曲&lt;/p&gt;
&lt;p&gt;横向弯曲：除了弯矩之外，还有横向的剪力&lt;/p&gt;
&lt;p&gt;中性层：在伸长与压缩的交界处，存在既不发生拉伸，也不发生缩短变形的一层，称为中性面/中性层&lt;/p&gt;
&lt;p&gt;中性轴：中性面与梁的横截面的交线，称为截面的中性轴，是&lt;strong&gt;应力为0的轴线&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;纯弯曲是梁横截面上的正应力分析&#34;&gt;纯弯曲是梁横截面上的正应力分析&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;变形协调+物性关系+平衡方程&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;平面假定&lt;/strong&gt;：纯弯曲之前为平面，弯曲之后横截面仍保持平面，只是绕其中心轴转过一个小角度。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一尺之垂，日取其半，万垚不竭。&lt;/p&gt;
&lt;p&gt;利用对称性不断取一半，由于对称轴不变，故可以不断论证&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;取微段$dx$，其上距离中性轴$y$处长度的改变量为：
$$
\Delta \mathrm{d} x=-y \mathrm{~d} \theta
$$
可知线段的正应变为：
$$
\varepsilon=\frac{\Delta \mathrm{d} x}{\mathrm{~d} x}=-y \frac{\mathrm{d} \theta}{\mathrm{d} x}=-\frac{y}{\rho}
$$
其中由几何关系可知，曲率（与坐标无关）可表示为：
$$
\frac{\mathrm{d} \theta}{\mathrm{d} x}=\frac{1}{\rho}
$$
应用胡克定律可知，横截面上正应力分布为：
$$
\sigma=-E \frac{y}{\rho}
$$
但此时并不确定曲率半径$\rho$与中性轴的位置，需要使用平衡方程确定&lt;/p&gt;
&lt;p&gt;由于纯弯曲时，轴力为0，弯矩为$M_z$：
$$
\int_{A} \sigma \mathrm{d} A=F_{\mathrm{N}}=0 \\
\int_{A}(\sigma \mathrm{d} A) y=-M_{\mathrm{z}}
$$
整理可得：
$$
\frac{1}{\rho}=\frac{M_{z}}{E I_{z}}=\frac{\mathrm{d} \theta}{\mathrm{d} x} \quad \sigma=-\frac{M_{z}}{I_{z}} y
$$
上述公式可计算纯弯曲相对转过的圆心角，即对$d \theta$积分即可。&lt;/p&gt;
&lt;p&gt;若使轴力为0，则需要$\int_A ydA=S_z=0$，因此**$z$轴必须过形心**。&lt;/p&gt;
&lt;p&gt;工程最感兴趣的是最大应力，当y取最大时，则有：
$$
\sigma_{\max }=\frac{M_{z} y_{\max }}{I_{z}}=\frac{M_{z}}{W_{z}} \quad W_{z}=\frac{I_{z}}{y_{\max }}
$$
其中$W_x$称为弯曲截面模量，量纲为$m^3$，一些常见的值为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;矩形：
$$
W_z=\frac{bh^2}{6} \quad W_y=\frac{hb^2}{6}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;圆形：
$$
W_y=W_z=\frac{\pi d^3}{32}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;圆环：
$$
W_y=W_z=\frac{\pi D^3(1-\alpha ^4)}{32} \quad \alpha=\frac{d}{D}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Hints&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;计算正应力时先明确正负号，利用右手定则取确定拉伸和压缩&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;平面有正交的对称轴，加载方向与其中一轴相同，则中性轴为另一轴$\sigma_{\max }^{+} \neq \sigma_{\max }^{-}$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;只有一个对称轴，架子方向与对称轴相同，则中性轴过截面形心并且垂直对称轴，$\sigma_{\max}^+ \neq \sigma_{\max}^-$&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;梁的强度计算&#34;&gt;梁的强度计算&lt;/h2&gt;
&lt;p&gt;梁受到弯矩和剪力时，其上有正应力，也有剪应力，但是对于&lt;strong&gt;细长梁&lt;/strong&gt;剪应力远小于正应力，因此剪应力对于强度的影响忽略不计，&lt;strong&gt;强度计算只考虑正应力。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;弯曲强度条件：
$$
\sigma_{max}=\sigma_s\quad(韧性材料)
\\
\sigma_{max}=\sigma_b\quad(脆性材料)
$$
故许可应力为：
$$
\sigma_{\max }  \leq \frac{\sigma_{\mathrm{s}}}{n_{s}}=[\sigma] \\
\sigma_{\max }  \leq \frac{\sigma_{\mathrm{b}}}{n_{b}}=[\sigma]
$$
此处注意，有些材料拉伸与压缩的强度不等，故需要分别计算&lt;/p&gt;
&lt;p&gt;强度计算的三类问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;强度校核&lt;/li&gt;
&lt;li&gt;截面尺寸设计&lt;/li&gt;
&lt;li&gt;确定许用载荷&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;Hints&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;弯矩图无论正负，都是画在受拉的一侧。因此在倒转的弯矩图中，&lt;strong&gt;图线位于哪一侧就是哪一侧受拉&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;弯曲剪应力与弯曲中心的概念&#34;&gt;弯曲剪应力与弯曲中心的概念&lt;/h2&gt;
&lt;p&gt;横向弯曲应力特点：既有剪应力，又有正应力&lt;/p&gt;
&lt;p&gt;与圆轴的扭转与纯弯曲相比，&lt;strong&gt;横弯曲有何不同？&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;截面上横弯曲的&lt;strong&gt;剪应力破坏了平截面假定&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于剪应力在横截面长度方向上分布不同，使得角变形程度不同，平面错动&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;借助合适的假定，横弯曲的剪应力就变为一个静定问题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;尽管平截面假定失效，但仍然认为&lt;strong&gt;弯曲正应力公式可用&lt;/strong&gt;
$$
\sigma_x=-\frac{M_z y}{I_z}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;横截面上的剪应力沿着宽度方向均匀分布（长度方向仍然不均匀）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;分析弯曲剪应力&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://imgtu.com/i/q8CalR&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s1.ax1x.com/2022/03/24/q8CalR.png&#34; &gt;
		&lt;img src=&#34;https://s1.ax1x.com/2022/03/24/q8CalR.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;平面弯曲的微元分析&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;平面弯曲的微元分析&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可得弯曲剪应力表达式为：
$$
\tau\left(y^{*}\right)=\tau^{\prime}=\frac{F_{\mathrm{Q}} S_{z}^{*}\left(y^{*}\right)}{\delta I_{z}}
$$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$F_Q$为截面的剪力&lt;/li&gt;
&lt;li&gt;$\delta$为微段的厚度&lt;/li&gt;
&lt;li&gt;$I_z$为整个截面的轴惯性矩&lt;/li&gt;
&lt;li&gt;$S_z^*$为微段$A^*$的静矩&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Hints&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;无限接近上表面的剪应力为0，自由表面剪应力为0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;无限接近下表面的剪应力同样为0，静矩积分正负相抵，结果为0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最大的剪应力位于中性轴&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;横截面上的剪应力分布&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;实心截面梁的弯曲剪应力公式&#34;&gt;实心截面梁的弯曲剪应力公式&lt;/h3&gt;
&lt;p&gt;设&lt;strong&gt;矩形截面&lt;/strong&gt;y-z长度分别为h与b，设所研究的$A^*$的形心坐标为$y_C^*$，截取的刀口为$y^*$，则有：
$$
y^{*}_C=\frac{1}{2}(\frac{h}{2}-y^{*})+y^{*}=\frac{1}{2}(\frac{h}{2}+y^{*})
\\
S^{*}_z(y^{*})=A^{*} \times y^{*}_C=(b \times (\frac{h}{2}-y^{*}))\times y^{*}_C=\frac{b}{2}[(\frac{h}{2})^2-y^{{*}2}]
$$&lt;/p&gt;
&lt;p&gt;已知$I_z=\frac{bh^3}{12}$，故剪应力为：
$$
\tau=\frac{F_{\mathrm{Q}} S_{z}^{*}}{\delta I_{z}}=\frac{F_{\mathrm{Q}} \frac{b}{2}\left[\left(\frac{h}{2}\right)^{2}-y^{2}\right]}{b \frac{b h^{3}}{12}}=\frac{6 F_{\mathrm{Q}}}{b h^{3}}\left[\left(\frac{h}{2}\right)^{2}-y^{2}\right]
$$
故剪应力在y方向以抛物线变化，最大值在中性轴上取得，为：
$$
\tau_{max}=\frac{3}{2}\frac{F_Q}{A}
$$&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;圆截面&lt;/strong&gt;剪应力最大值为：
$$
\tau_{max}=\frac{4}{3}\frac{F_Q}{A}
$$
但是这种推导不严谨，即不能满足第二条假设：沿宽度方向剪应力分布均匀。但是在工程上我们将其忽略。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;圆环截面&lt;/strong&gt;剪应力最大值为：
$$
\tau_{max}=2.0\frac{F_Q}{A}
$$
&lt;strong&gt;工字刚截面&lt;/strong&gt;剪应力最大值为：
$$
\tau_{max}=\frac{F_Q}{\delta(I/S_{max})}
$$
$I/S_{max}$由型钢表查得&lt;/p&gt;
&lt;h3 id=&#34;薄壁截面梁的弯曲中心&#34;&gt;薄壁截面梁的弯曲中心&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;弯曲中心的引入：为了使得结构发生平面弯曲，应该如何施力？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过考察微段的局部平衡确定剪应力流的方向&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://imgtu.com/i/q8PUUS&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s1.ax1x.com/2022/03/24/q8PUUS.png&#34; &gt;
		&lt;img src=&#34;https://s1.ax1x.com/2022/03/24/q8PUUS.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;剪应力流的方向&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;剪应力流的方向&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当加载与弯曲中心时，整个结构不发生扭转，满足：
$$
F_P ,e=F_T ,h
$$&lt;/p&gt;
&lt;h2 id=&#34;斜弯曲的应力计算与强度设计&#34;&gt;斜弯曲的应力计算与强度设计&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;斜弯曲=两个平面弯曲的叠加&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;设$F_P$与y轴夹角为$\alpha$，则有
$$
F_y=F_p cos \alpha \quad M_z=F_Plcos\alpha
\\
F_z=F_p sin \alpha \quad M_y=F_Plsin\alpha
$$
任一点的正应力为：
$$
\sigma(y,z)=-\frac{M_yz}{I_y}+\frac{M_zy}{I_z}
$$
如何确定应力最大的点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;令z,y分别取对应的最值&lt;/li&gt;
&lt;li&gt;令$\sigma$为0，即可得到中性轴的位置，最危险的点即为离中性轴最远的点&lt;/li&gt;
&lt;li&gt;直接利用右手法则，确定拉伸、压缩的重合面&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;中性轴和合主矩的方向重合的条件？：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当$I_z=I_y$时就会重合&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;强度设计需要满足：
$$
\sigma_{max}\leq[\sigma]
$$&lt;/p&gt;
&lt;p&gt;对于&lt;strong&gt;矩形截面&lt;/strong&gt;，最大拉、压应力发生在角点处：
$$
\sigma_{\max }^{+}=\frac{M_{y}}{W_{y}}+\frac{M_{z}}{W_{z}} \\
\sigma_{\max }^{-}=-\left(\frac{M_{y}}{W_{y}}+\frac{M_{z}}{W_{z}}\right)
$$
但是上式对于圆截面不成立，这是由于最大的拉/压应力$M_y、M_z$&lt;em&gt;不同时取最值&lt;/em&gt;，利用圆截面主矩与中性轴重合则有：
$$
\sigma_{\max }^{+}=\frac{M}{W}=\frac{\sqrt{M_{y}^{2}+M_{z}^{2}}}{W} \quad \sigma_{\max }^{-}=-\frac{M}{W}=-\frac{\sqrt{M_{y}^{2}+M_{z}^{2}}}{W}
$$&lt;/p&gt;
&lt;h2 id=&#34;弯矩和轴力同时作用时横截面上的正应力&#34;&gt;弯矩和轴力同时作用时横截面上的正应力&lt;/h2&gt;
&lt;p&gt;叠加即可&lt;/p&gt;
</description>
        </item>
        <item>
        <title>第五章·梁的剪力图和弯矩图</title>
        <link>https://zalouti.github.io/p/%E7%AC%AC%E4%BA%94%E7%AB%A0%E6%A2%81%E7%9A%84%E5%89%AA%E5%8A%9B%E5%9B%BE%E5%92%8C%E5%BC%AF%E7%9F%A9%E5%9B%BE/</link>
        <pubDate>Sat, 19 Mar 2022 19:32:17 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E7%AC%AC%E4%BA%94%E7%AB%A0%E6%A2%81%E7%9A%84%E5%89%AA%E5%8A%9B%E5%9B%BE%E5%92%8C%E5%BC%AF%E7%9F%A9%E5%9B%BE/</guid>
        <description>&lt;h1 id=&#34;梁的剪力图和弯矩图&#34;&gt;梁的剪力图和弯矩图&lt;/h1&gt;
&lt;h2 id=&#34;工程中的梁与梁的力学模型&#34;&gt;工程中的梁与梁的力学模型&lt;/h2&gt;
&lt;p&gt;梁：主要&lt;strong&gt;承受弯曲&lt;/strong&gt;的杆件。&lt;/p&gt;
&lt;p&gt;弯曲：杆件承受垂直于轴线的外力或者位于其轴线所在的平面内的力偶作用时，轴线将弯曲为曲线。&lt;/p&gt;
&lt;p&gt;梁的分类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;悬臂梁：一段固定，一段自由&lt;/p&gt;
&lt;p&gt;例子：直升机的机翼&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简支梁：一段为固定铰支座，另一端为辊轴支座（水平方向可以移动）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;外伸梁：简支梁的左右两端/某一段伸在支座的外端&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;梁横截面上的内力剪力和弯矩&#34;&gt;梁横截面上的内力——剪力和弯矩&lt;/h2&gt;
&lt;h3 id=&#34;剪力和弯矩的正负号规定&#34;&gt;剪力和弯矩的正负号规定&lt;/h3&gt;
&lt;p&gt;剪力：剪力使得构件进行&lt;strong&gt;顺时针旋转即为正&lt;/strong&gt;，&lt;strong&gt;逆时针旋转即为负&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;弯矩：&lt;strong&gt;“碗口朝上”即为正，“碗口朝下”即为负&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;总体平衡与局部平衡的概念&#34;&gt;总体平衡与局部平衡的概念&lt;/h3&gt;
&lt;p&gt;总体平衡局部必然平衡，局部平衡是整体平衡的必要条件。&lt;/p&gt;
&lt;h2 id=&#34;描述剪力和弯矩沿梁的轴线变化的两种方法&#34;&gt;描述剪力和弯矩沿梁的轴线变化的两种方法&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;数学方程：剪力方程、弯矩方程&lt;/li&gt;
&lt;li&gt;图形：剪力图、弯矩图&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在载荷无突变的一段杆件的各截面上内力按照相同的规律变化。即可以用&lt;strong&gt;同一图线或者同一方程&lt;/strong&gt;描述。&lt;/p&gt;
&lt;h2 id=&#34;应用力系简化方法确定梁的剪力和弯矩&#34;&gt;应用力系简化方法确定梁的剪力和弯矩&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;远离外力一侧&lt;/strong&gt;截面上的内力即为&lt;strong&gt;外力简化至截面&lt;/strong&gt;的结果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;不移动外力矩。&lt;/li&gt;
&lt;li&gt;选取合适的外力：约束力/外力&lt;/li&gt;
&lt;li&gt;如果涉及力矩时，移动时计算对应的力矩&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;剪力方程与弯矩方程&#34;&gt;剪力方程与弯矩方程&lt;/h2&gt;
&lt;p&gt;根据坐标建立函数关系即可。&lt;/p&gt;
&lt;h2 id=&#34;载荷集度剪力弯矩之间的微分关系&#34;&gt;载荷集度、剪力、弯矩之间的微分关系&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;基本思想：通过微分寻找内力与外力的关系&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;设分布载荷$q(x)$向上为正方向&lt;/strong&gt;，则有
$$
\frac{dF_Q(x)}{dx}=q\
\frac{dM(x)}{dx}=F_Q
\
\frac{d^2M}{dx^2}=q
$$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;若两个相邻的控制面之间没有外部载荷，则有：
$$
\frac{dF_Q}{dx}=q=0 \quad \to F_Q=Const
$$
剪力$F_Q$是一条平行于$x$轴的直线
$$
\frac{dM}{dx}=F_Q=C \quad \to M=Cx+D
$$
弯矩$M$是一条斜直线，但是此处规定向下为弯矩的正方向&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;若两个相邻的控制面之间有均匀分布的载荷，则有：
$$
\frac{dF_Q}{dx}=q=const \quad \to F_Q=qx+C
$$
剪力$F_Q$是一条斜直线
$$
\frac{dM}{dx}=F_Q=qx+C \quad \to M=\frac{1}{2}x^2+Cx+D
$$
弯矩$M$是一条抛物线&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意剪力图与弯矩图的对应（端面/极值点）&lt;/p&gt;
&lt;h2 id=&#34;剪力图与弯矩图&#34;&gt;剪力图与弯矩图&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;标注约束力时尽量标注在真实方向，可以避免正负号麻烦。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;利用力系简化快速球控制面上的力&lt;/li&gt;
&lt;li&gt;利用微分关系快速连线&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意剪力图与弯矩图其实是一种工程上的实际应用，所以将弯矩图坐标轴倒画有其便捷性的考虑！&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Hints&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;剪力的突变&lt;/strong&gt;：反应为弯矩的左右导数不一致，丧失了光滑性：尖点向哪边尖?——外加力的方向&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;外力矩的转动方向&lt;/strong&gt;：与弯矩图的抬升与下降恰好巧合&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;均布载荷$q$的方向&lt;/strong&gt;：与弯矩图的弯曲方向是一致的，同时也符合了&lt;strong&gt;弯矩图画在受拉的一侧&lt;/strong&gt;的假定&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Discussion&lt;/em&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;确定控制面上剪力和弯矩有几种方法？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;微分关系的灵活应用，利用面积关系由剪力图求弯矩
$$
\frac{dM}{dx}=F_Q \quad dM=F_Q dx\
\int_a^edM=\int_a^eF_Qdx
\
M(e)-M(a)=A(F_Q)|_a^e
$$&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;怎样确定弯矩图上极值点处的弯矩数值？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找剪力图上的零点代入计算&lt;/li&gt;
&lt;li&gt;对应&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;是否能够根据剪力图反向确定约束力以及约束类型？
&lt;ul&gt;
&lt;li&gt;有可能确定约束力，但是&lt;strong&gt;约束的类型并不唯一&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;那么给定剪力图和弯矩图呢？
&lt;ul&gt;
&lt;li&gt;同样不能确定对应的约束&lt;/li&gt;
&lt;li&gt;单独施加载荷，分别画剪力图和弯矩图，之后叠加&lt;/li&gt;
&lt;li&gt;将约束段简化为中间的墙壁插入&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;刚架的内力与内力图&#34;&gt;刚架的内力与内力图&lt;/h2&gt;
&lt;p&gt;刚架的组成：横梁、立柱与刚节点&lt;/p&gt;
&lt;p&gt;关于三种内力分量，轴力、剪力、弯矩，其内力方向的特点为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;轴力方向与观察者方向无关&lt;/li&gt;
&lt;li&gt;剪力方向与观察者无关&lt;/li&gt;
&lt;li&gt;弯矩方向与观察者有关
&lt;ol&gt;
&lt;li&gt;所以采用&lt;strong&gt;受拉侧为正，受压侧为负&lt;/strong&gt;的方法&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;刚架内力图的绘制并不需要建立坐标系，原因是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;物理规律与坐标系无关&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;无需建立坐标系&lt;/li&gt;
&lt;li&gt;控制面、平衡微分方程&lt;/li&gt;
&lt;li&gt;弯矩的数值表在受拉边&lt;/li&gt;
&lt;li&gt;轴力、建立画在里侧与外侧均可，但是要标出正负号&lt;/li&gt;
&lt;li&gt;注意节点处的平衡关系&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;节点处的平衡关系&#34;&gt;节点处的平衡关系&lt;/h3&gt;
&lt;p&gt;节点使得&lt;strong&gt;两侧的轴力与剪力分别对应平衡&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;刚节点上的弯矩特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;弯矩位于同侧：使得刚架两侧同时同侧受拉/受压&lt;/li&gt;
&lt;li&gt;大小必然相等&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>第四章·圆轴扭转时的强度与刚度计算</title>
        <link>https://zalouti.github.io/p/%E7%AC%AC%E5%9B%9B%E7%AB%A0%E5%9C%86%E8%BD%B4%E6%89%AD%E8%BD%AC%E6%97%B6%E7%9A%84%E5%BC%BA%E5%BA%A6%E4%B8%8E%E5%88%9A%E5%BA%A6%E8%AE%A1%E7%AE%97/</link>
        <pubDate>Fri, 18 Mar 2022 20:52:03 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E7%AC%AC%E5%9B%9B%E7%AB%A0%E5%9C%86%E8%BD%B4%E6%89%AD%E8%BD%AC%E6%97%B6%E7%9A%84%E5%BC%BA%E5%BA%A6%E4%B8%8E%E5%88%9A%E5%BA%A6%E8%AE%A1%E7%AE%97/</guid>
        <description>&lt;h1 id=&#34;圆轴扭转时的强度与刚度计算&#34;&gt;圆轴扭转时的强度与刚度计算&lt;/h1&gt;
&lt;h2 id=&#34;外加扭力矩扭矩与扭矩图&#34;&gt;外加扭力矩、扭矩与扭矩图&lt;/h2&gt;
&lt;p&gt;作用于构件中的扭矩与机器的转速、功率相关。在传动轴计算中，通常给出传动功率$P$与转速$n$，可得外加力矩$M_e$为：
$$
M_e \omega=P(SI)
\
M_e=9549\frac{P}{n}(P单位为kW,n单位为r/min)
$$
扭矩与扭矩图的研究同之前轴力与轴力图的方法。&lt;/p&gt;
&lt;h2 id=&#34;剪应力互等成对定理&#34;&gt;剪应力互等/成对定理&lt;/h2&gt;
&lt;p&gt;由于一个面上的力偶无法独自平衡，所以需要另有一对力偶与之平衡，则有：
$$
(\tau dy dz)dx=(\tau&amp;rsquo;dxdz)dy \to \tau=\tau&#39;
$$
严谨表述为：在两个相互垂直的平面上，净应力必然成对存在且数值相等，两者都垂直于两个平面的交线，方向则共同指向或者背离这一交线&lt;/p&gt;
&lt;h2 id=&#34;圆轴扭转时横截面上的剪应力分析与强度设计&#34;&gt;圆轴扭转时横截面上的剪应力分析与强度设计&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;变形协调+物性关系+平衡方程&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;平面假定&lt;/strong&gt;：圆柱体做扭转时，假定横截面只做刚性的旋转，并不改变轴向位置&lt;/p&gt;
&lt;p&gt;设圆轴半径为$\rho$处的剪应变为$\gamma(\rho)$，则&lt;strong&gt;变形协调&lt;/strong&gt;方程为：
$$
\gamma(\rho)=\rho\frac{d\varphi}{dx}
$$
由&lt;strong&gt;物性关系&lt;/strong&gt;可知截面上剪应力分布为：
$$
\tau=G\gamma=G\rho\frac{d\varphi}{dx}
$$
但是我们仍然不清楚单位长度的相对扭转角$\frac{d\varphi}{dx}$的值，需要用&lt;strong&gt;平衡方程&lt;/strong&gt;获取：
$$
\int_A(\tau dA)\rho=M_x
\
\frac{d\varphi}{dx}=\frac{M_x}{GI_P}
$$
其中，我们定义$GI_P$为&lt;strong&gt;扭转刚度&lt;/strong&gt;，$I_P$的定义为：
$$
I_P=\int_A \rho^2 dA
$$
故在扭转中的剪应力为：
$$
\tau(\rho)=\frac{M_x\rho}{I_P}（注意沿着圆心径向分布）
$$
剪应力取最大值为$\rho$取最大值时，设扭转截面模量$W_P$为：
$$
W_P=\frac{I_P}{\rho_{max}} \quad
\to
\quad
\tau_{max}=\frac{M_x}{W_P}
$$&lt;/p&gt;
&lt;h3 id=&#34;截面的极惯性矩与扭转截面模量&#34;&gt;截面的极惯性矩与扭转截面模量&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;对于直径为$d$的实心圆截面
$$
I_P = \frac{\pi d^4}{32}  \quad W_P=\frac{\pi d^3}{16}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于内外直径分别为$d$和$D$的圆环截面
$$
I_P=\frac{\pi D^4(1-\alpha^4)}{32} \quad W_P=\frac{\pi D^3(1-\alpha^4)}{16}
\quad
\alpha=\frac{d}{D}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;受扭转的圆轴的强度设计准则&#34;&gt;受扭转的圆轴的强度设计准则&lt;/h3&gt;
&lt;p&gt;类比拉压杆件，则有：
$$
\tau_{max}=\frac{M_{x,max}}{W_P}\leq[\tau]
$$
共有三类问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;强度校核&lt;/li&gt;
&lt;li&gt;尺寸设计&lt;/li&gt;
&lt;li&gt;最大许可扭矩&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;圆杆扭转时的变形及刚度条件&#34;&gt;圆杆扭转时的变形及刚度条件&lt;/h2&gt;
&lt;p&gt;受纽圆轴的相对扭转角$\varphi$为：
$$
\varphi=\int_ld\varphi=\int_l \frac{M_x}{GI_P}dx
$$&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;两端承受集中扭矩的等截面圆轴&lt;/p&gt;
&lt;p&gt;$$
\varphi_{AB}=\frac{M_xl}{GI_P}=\frac{M_el}{GI_P}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;各段不等&lt;/p&gt;
&lt;p&gt;分段研究之后累加:
$$
\varphi_{AB}=\sum_{i=1}^{n}\frac{M_{xi}l_i}{GI_{Pi}}
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;均匀分布的力偶&lt;/p&gt;
&lt;p&gt;需要积分运算$M(x)$&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;受扭圆轴的刚度设计准则&#34;&gt;受扭圆轴的刚度设计准则&lt;/h3&gt;
&lt;p&gt;一般地，设计准则为：
$$
\theta=\frac{d\varphi}{dx}\leq[\theta]
$$
对于之前的两端集中承受扭矩的等截面圆轴则有
$$
\theta=\frac{M_x}{GI_P}\leq[\theta]
$$
类比也可以进行三类问题的运算：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;刚度校核&lt;/li&gt;
&lt;li&gt;尺寸设计&lt;/li&gt;
&lt;li&gt;最大载荷&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;note:计算时需要同一单位，注意弧度与角度！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;结论与讨论&#34;&gt;结论与讨论&lt;/h2&gt;
&lt;h3 id=&#34;关于公式的应用条件&#34;&gt;关于公式的应用条件&lt;/h3&gt;
&lt;p&gt;扭转剪应力公式是圆轴在弹性范围内导出的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;必须是圆轴&lt;/li&gt;
&lt;li&gt;必须满足胡克定律&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;矩形截面杆扭转时横截面上的剪应力&#34;&gt;矩形截面杆扭转时横截面上的剪应力&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;变形特征——翘曲&lt;/p&gt;
&lt;p&gt;扭转后，横截面将不再保持平面&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;由平衡直接得到的结论（弹性力学中的基本结论）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;角点的剪应力为0&lt;/li&gt;
&lt;li&gt;边缘各点剪应力沿着切线方向&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;剪应力分布与剪应力公式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最大的切应力发生在长边中点&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
\tau_{max}=\frac{M_x}{C_1hb^2} \quad 长边h中点处
\
\tau_{max}&#39;=C_1&#39;\tau_{max} \quad 短边中点处
$$&lt;/p&gt;
&lt;p&gt;其中，$C_1$、$C_1’$查表可得对应系数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;狭长矩形截面&lt;/p&gt;
&lt;p&gt;当长边$h$远大于短边$\delta$时，$C_1=0.3333 \approx\frac{1}{3}$，可得：
$$
\tau_{max}=\frac{3M_x}{h\delta^2}
$$
此时长边的切应力接近于线性变化，短边切应力几乎为0&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个小问题：一张A4纸，直接扭转与卷成纸筒，谁更抗扭转？&lt;/p&gt;
&lt;p&gt;显然是纸筒，但是为什么呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;纸筒上的切应力为线性分布，在纸厚非常小的情况下，可视作线性分布，已知纸筒的半径为$r$，对于中心点取矩可得:
$$
M_x=\oint\tau ,r,dA
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;而一张A4纸的截面，恰为一个狭长矩形截面，对于相同的扭矩$M_x$，此时力臂最大为$\delta$，故此时剪应力$\tau$分布在狭小的一块区域中且数值极大，因此抗扭转的能力更弱&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>第三章·连接件强度的工程假定计算</title>
        <link>https://zalouti.github.io/p/%E7%AC%AC%E4%B8%89%E7%AB%A0%E8%BF%9E%E6%8E%A5%E4%BB%B6%E5%BC%BA%E5%BA%A6%E7%9A%84%E5%B7%A5%E7%A8%8B%E5%81%87%E5%AE%9A%E8%AE%A1%E7%AE%97/</link>
        <pubDate>Fri, 18 Mar 2022 20:49:13 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E7%AC%AC%E4%B8%89%E7%AB%A0%E8%BF%9E%E6%8E%A5%E4%BB%B6%E5%BC%BA%E5%BA%A6%E7%9A%84%E5%B7%A5%E7%A8%8B%E5%81%87%E5%AE%9A%E8%AE%A1%E7%AE%97/</guid>
        <description>&lt;h1 id=&#34;连接件强度的工程假定计算&#34;&gt;连接件强度的工程假定计算&lt;/h1&gt;
&lt;h2 id=&#34;连接件强度计算的工程意义&#34;&gt;连接件强度计算的工程意义&lt;/h2&gt;
&lt;p&gt;工程中常常采用连接件，由于应力集中，应力分布规律复杂，需要做一些假定来分析。&lt;/p&gt;
&lt;h3 id=&#34;假定计算的基础&#34;&gt;假定计算的基础&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;假设应力均匀分布&lt;/li&gt;
&lt;li&gt;在假定的前提下进行实验，确定许用应力&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;剪切假定计算&#34;&gt;剪切假定计算&lt;/h2&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/04/20/1nSQf5eVruM96Cv.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/04/20/1nSQf5eVruM96Cv.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;剪切假定&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;剪切假定&lt;/figcaption&gt;
	
&lt;/figure&gt;
$$
\tau=\frac{F_Q}{A}\leq[\tau]
$$&lt;/p&gt;
&lt;h2 id=&#34;挤压假定计算&#34;&gt;挤压假定计算&lt;/h2&gt;
&lt;p&gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s2.loli.net/2022/04/20/su2fEMrdwmBJAXG.png&#34; &gt;
		&lt;img src=&#34;https://s2.loli.net/2022/04/20/su2fEMrdwmBJAXG.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;挤压假定&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;挤压假定&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;由图可知，假设有效挤压面为$S=\delta d$,则有
$$
\sigma_{\mathrm{c}}=\frac{F_{\mathrm{P}}}{\delta d} \leq\left[\sigma_{\mathrm{c}}\right]
$$&lt;/p&gt;
&lt;h2 id=&#34;焊缝假定计算&#34;&gt;焊缝假定计算&lt;/h2&gt;
</description>
        </item>
        <item>
        <title>第二章·轴向载荷作用的杆件</title>
        <link>https://zalouti.github.io/p/%E7%AC%AC%E4%BA%8C%E7%AB%A0%E8%BD%B4%E5%90%91%E8%BD%BD%E8%8D%B7%E4%BD%9C%E7%94%A8%E7%9A%84%E6%9D%86%E4%BB%B6/</link>
        <pubDate>Tue, 15 Mar 2022 20:12:27 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E7%AC%AC%E4%BA%8C%E7%AB%A0%E8%BD%B4%E5%90%91%E8%BD%BD%E8%8D%B7%E4%BD%9C%E7%94%A8%E7%9A%84%E6%9D%86%E4%BB%B6/</guid>
        <description>&lt;h1 id=&#34;轴向载荷作用下的杆件的材料力学问题&#34;&gt;轴向载荷作用下的杆件的材料力学问题&lt;/h1&gt;
&lt;h2 id=&#34;轴力与轴力图&#34;&gt;轴力与轴力图&lt;/h2&gt;
&lt;p&gt;为什么要研究内力图？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过绘制内力图，寻找哪一处内力最大&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;正负号的约定：同一处截面上两侧受力正负相同，规定&lt;em&gt;&lt;strong&gt;受拉为正，压缩为负&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;选取控制面是关键：即内力会发生突变的地方&lt;/p&gt;
&lt;p&gt;选取一个截面后，将此面上的内力标记为正方向的，其他外力与之同向为正，反向为负，进行代数运算。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如何理解控制面两侧内力的突变？&lt;/p&gt;
&lt;p&gt;轴力图的本质是平衡状态的体现，控制面上面由外力突变，为维持平衡，内力图会突变，且&lt;strong&gt;突变量恰为外力的值&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;拉压杆件横截面上的应力&#34;&gt;拉压杆件横截面上的应力&lt;/h2&gt;
&lt;p&gt;当外力沿着杆件的轴线作用时，横截面上只有轴力一个内力分量，截面上只有正应力。&lt;/p&gt;
&lt;p&gt;当杆件在轴力作用下均匀伸长/变短时，由材料均匀性假定，可知此时正应力满足：
$$
\int_A\sigma_xdA=F_N\to \sigma=\frac{F_N}{A}
$$
&lt;strong&gt;上式表明：横截面上的正应力，与材料无关。（前提条件是？）&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;殷老师的小技巧：&lt;/p&gt;
&lt;p&gt;在分析杆件的平衡时，可以直接将平衡分析的力换为各个正方向的内力，这样便直接得到了我们需要的内力&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;拉压杆件的强度设计&#34;&gt;拉压杆件的强度设计&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;强度设计&lt;/strong&gt;：将杆件中最大的应力限制在允许的范围内，保证杆件既不发生强度失效，还要有安全裕度，满足：
$$
\sigma_{max}\leq[\sigma]=\frac{\sigma ^0}{n}
$$&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$[\sigma]$：许用应力&lt;/li&gt;
&lt;li&gt;$\sigma$：极限应力&lt;/li&gt;
&lt;li&gt;$n$：安全系数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;三种问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;强度校核：所有条件已知，检验不等式是否成立&lt;/li&gt;
&lt;li&gt;尺寸设计：根据设计准则，求对应的横截面积$A$&lt;/li&gt;
&lt;li&gt;确定许可载荷：求最大的轴力$F_N$&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;拉压杆件的变形分析&#34;&gt;拉压杆件的变形分析&lt;/h2&gt;
&lt;h3 id=&#34;均匀杆件&#34;&gt;均匀杆件&lt;/h3&gt;
&lt;p&gt;对于长为$l$、杨氏模量为$E$、截面积为$A$的杆件的收到$F_P$均匀拉伸,均匀变形保证了:
$$
\varepsilon_x=\frac{\Delta l}{l}
$$
杆件伸长量$\Delta l$为：
$$
\Delta l=\frac{F_Pl}{EA}
$$&lt;/p&gt;
&lt;p&gt;定义截面抗拉伸的刚度为$EA$，则$\frac{EA}{l}$为单位长度截面抗拉伸的刚度，则有：
$$
F_P=\frac{EA}{l}\Delta l\
类比：F_P=k\Delta x
$$
可知，刚度系数$k$与杨氏模量的联系&lt;/p&gt;
&lt;p&gt;当杆件有两个及以上的外力作用时，分段求解为：
$$
\Delta l=\sum_i\frac{F_{Ni}l_i}{(EA)_i}
$$&lt;/p&gt;
&lt;h3 id=&#34;非均匀杆件&#34;&gt;非均匀杆件&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;在微元段上化非均匀为均匀&lt;/strong&gt;，则杆件长度变化为：
$$
\Delta l=\int_0^l\Delta dx=\int_l\frac{F_N(x)dx}{E(x)A(x)}
$$&lt;/p&gt;
&lt;h3 id=&#34;横向变形与泊松比&#34;&gt;横向变形与泊松比&lt;/h3&gt;
&lt;p&gt;轴向变形时，横向也会发生变形，实验结果表示，轴向应变$\varepsilon_x$与横向变形$\varepsilon_y$之间存在关系为：
$$
\varepsilon_x=-\nu \varepsilon_y
$$
其中，$\nu$为泊松比，&lt;strong&gt;无量纲&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;结论与讨论&#34;&gt;结论与讨论&lt;/h2&gt;
&lt;h3 id=&#34;应力和变形公式的应用条件&#34;&gt;应力和变形公式的应用条件&lt;/h3&gt;
&lt;p&gt;$$
\sigma_x=\frac{F_N}{A}（正应力均匀分布时才成立）\
\Delta l=\frac{F_Pl}{EA}（轴向方向均匀变形时伸长量公式才适用）
$$&lt;/p&gt;
&lt;p&gt;如何满足上述条件？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;轴向载荷在杆件中心轴线&lt;/li&gt;
&lt;li&gt;截面均匀连续&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;关于加力点附近的应力分布&#34;&gt;关于加力点附近的应力分布&lt;/h3&gt;
&lt;p&gt;圣维南原理：如果杆件两端两种外加力静力学等效，则距离加力点稍远处，静力学等效对应力风不动影响很小，可以忽略不计&lt;/p&gt;
&lt;h3 id=&#34;应力集中&#34;&gt;应力集中&lt;/h3&gt;
&lt;p&gt;几何形状的不连续出，应力会局部增大，称为应力集中&lt;/p&gt;
&lt;p&gt;应力集中的程度用应力集中因数描述，为横截面上应力最大值与不考虑应力集中时的应力值之比
$$
K=\frac{\sigma_{max}}{\sigma_a}
$$&lt;/p&gt;
&lt;h3 id=&#34;拉伸压缩时斜截面上的应力&#34;&gt;拉伸压缩时斜截面上的应力&lt;/h3&gt;
&lt;p&gt;当沿着斜截面研究时，会发现角度发生了改变，必有剪应力&lt;/p&gt;
&lt;p&gt;设斜截面法向与杆件轴向的夹角为$\theta$，轴向外力为$F_P$，则有：
$$
F_Q=F_P\times sin \theta
\
F_N=F_P\times cos \theta
$$
设原有的横截面面积为$A$，斜截面面积为$A_{\theta}=A/cos \theta$，设应力在斜截面上均匀分布&lt;/p&gt;
&lt;p&gt;故斜截面上的正应力、剪应力分别为：
$$
\sigma_{\theta}=\frac{F_N}{A_{\theta}}=\sigma_x cos^2\theta
\
\tau_{\theta}=\frac{F_Q}{A_{\theta}}=\frac{1}{2}\sigma_x sin2\theta
$$
或者可以取一个小微元体，再斜切一个$\theta$角：&lt;/p&gt;
&lt;p&gt;此时小微元体横截面只受正应力$\sigma_x$，由于&lt;strong&gt;应力无法参与平衡，只能由力来参与平衡&lt;/strong&gt;：
$$
\sigma_{\theta}dA=\sigma_x \times cos\theta\times dAcos \theta
\
\tau_{\theta}dA=\sigma_x \times sin\theta \times dAcos \theta
$$
可得结果为，说明前面对于&lt;strong&gt;斜截面上应力均匀分布的假设是正确&lt;/strong&gt;的：
$$
\sigma_{\theta}=\frac{F_N}{A_{\theta}}=\sigma_x cos^2\theta
\
\tau_{\theta}=\frac{F_Q}{A_{\theta}}=\frac{1}{2}\sigma_x sin2\theta
$$
上面的斜截面上的应力公式还反传递出了以下信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不同$\theta$角度应力不同&lt;/li&gt;
&lt;li&gt;正应力横截面最大，剪应力在$\theta=45 \degree$最大&lt;/li&gt;
&lt;li&gt;由于微元体取得比较小，英雌微元体斜面上的应力，即为过一点出不同方向的应力，故指明应力时，应该指明是哪一点处、哪一个方向上的应力&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;拉伸和压缩的静不定问题&#34;&gt;拉伸和压缩的静不定问题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;静定问题：外力或者内力可由静力学平衡方程可以直接确定的问题&lt;/li&gt;
&lt;li&gt;静不定问题：未知力的个数多于能够提供平衡方程的个数，仅依靠平衡方程无法确定的问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;求解静不定问题需要考虑三方面的因素：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;受力平衡&lt;/li&gt;
&lt;li&gt;变形协调方程&lt;/li&gt;
&lt;li&gt;物理性质：胡克定律&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;开放式思维案例&#34;&gt;开放式思维案例&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;定义一种新的应力，便于分析&lt;/li&gt;
&lt;li&gt;非均匀应力分布的分析方法，常采用&lt;strong&gt;微元体法&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;应力-应变曲线&#34;&gt;应力-应变曲线&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;脆性材料拉伸时的应力应变曲线：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://imgtu.com/i/q8pQ9s&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s1.ax1x.com/2022/03/24/q8pQ9s.png&#34; &gt;
		&lt;img src=&#34;https://s1.ax1x.com/2022/03/24/q8pQ9s.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;脆性材料应力应变曲线&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;脆性材料应力应变曲线&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;韧性金属材料拉伸时的应力应变曲线：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://imgtu.com/i/q8pKhj&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s1.ax1x.com/2022/03/24/q8pKhj.png&#34; &gt;
		&lt;img src=&#34;https://s1.ax1x.com/2022/03/24/q8pKhj.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;韧性材料应力应变曲线&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;韧性材料应力应变曲线&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;屈服应力&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;条件屈服应力&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;金属材料先加载，卸载时，会沿着弹性的直线恢复，当最后盈利为0时，无法恢复的塑性形变的量为0.2%时，我们称最大的应力值为条件屈服应力&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>第一章材料力学概论</title>
        <link>https://zalouti.github.io/p/%E7%AC%AC%E4%B8%80%E7%AB%A0%E6%9D%90%E6%96%99%E5%8A%9B%E5%AD%A6%E6%A6%82%E8%AE%BA/</link>
        <pubDate>Sun, 13 Mar 2022 19:23:10 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E7%AC%AC%E4%B8%80%E7%AB%A0%E6%9D%90%E6%96%99%E5%8A%9B%E5%AD%A6%E6%A6%82%E8%AE%BA/</guid>
        <description>&lt;h1 id=&#34;第一章材料力学概论&#34;&gt;第一章·材料力学概论&lt;/h1&gt;
&lt;h2 id=&#34;材料力学研究的内容&#34;&gt;材料力学研究的内容&lt;/h2&gt;
&lt;h3 id=&#34;什么是材料力学&#34;&gt;什么是材料力学？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;杆、轴、梁在外力作用下的应力、变形、能量（长度远大于截面积）&lt;/li&gt;
&lt;li&gt;材料的行为：在温度/外力作用下表现出的力学性能与失效（宏观）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设计出杆状构件或者零部件的合理尺寸与形状，保证足够的强度、刚度、稳定性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;强度：受理后不发生破坏或者不可恢复的变形&lt;/li&gt;
&lt;li&gt;刚度：受力变形不大&lt;/li&gt;
&lt;li&gt;稳定性：平衡的状态不发生突变（在压缩载荷之下）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;内力与内分量&#34;&gt;内力与内分量&lt;/h2&gt;
&lt;p&gt;为什么要研究&lt;strong&gt;内力&lt;/strong&gt;？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;例子：跳板断裂先从根部断裂，外力作用是确定的，但是我们需要内力去解释为什么会从根部断裂。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如何研究内力？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;采用一个假想的截面，每一点处的合力与对面截面等大反向&lt;/li&gt;
&lt;li&gt;内力可以向截面的坐标系（主矩与坐标系原点相关，主矢无关）简化为内力分量，可以得到一个内力主矢和内力主矩&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;内力的分量是？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;轴力：$F_N$轴向，压缩或者拉伸&lt;/li&gt;
&lt;li&gt;剪力：$F_Q$切向，引起剪切&lt;/li&gt;
&lt;li&gt;扭矩：$M_x$轴向，引起扭转变形&lt;/li&gt;
&lt;li&gt;弯矩：$M_y$、$M_z$，引起弯曲变形
施加方式的形象化理解：&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;杆件的受力与变形形式&#34;&gt;杆件的受力与变形形式&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;拉压弯扭组合受力。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;拉伸或压缩：轴向的拉力或者压力，产生轴向伸长或者变形&lt;/li&gt;
&lt;li&gt;剪切：相近的两力错动时产生&lt;/li&gt;
&lt;li&gt;扭转：横截面绕其轴旋转&lt;/li&gt;
&lt;li&gt;弯曲：杆件的轴线变为曲线&lt;/li&gt;
&lt;li&gt;组合受力：以上四种受力的各种组合&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;工程构件静力学设计的主要内容&#34;&gt;工程构件静力学设计的主要内容&lt;/h2&gt;
&lt;p&gt;工程设计一般需要完成以下几方面的工作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;分析构件的外力&lt;/li&gt;
&lt;li&gt;研究其内力、变形、失效规律&lt;/li&gt;
&lt;li&gt;提出保证构件具有足够强度、刚度、稳定性的准则与设计方法&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;弹性体受力与变形特征&#34;&gt;弹性体受力与变形特征&lt;/h2&gt;
&lt;p&gt;两个平衡：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;内力与外力的平衡：截面与其分割的材料的外力&lt;/li&gt;
&lt;li&gt;内力与内力的平衡：截面与截面满足牛顿第三定律&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;变形协调&lt;/strong&gt;：材料不能重叠，不能出现空缺&lt;/p&gt;
&lt;p&gt;典型的例子是：两根绳子拉着杆件的静力学问题是静定的，三根绳子则为静不定的，需要补充变形协调方程&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;分析问题时：平衡+变形协调&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;关于材料的基本假定&#34;&gt;关于材料的基本假定&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;均匀、连续、各向同性。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;均匀：构件不同位置处材料性能相同&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;连续：类比函数的连续，各种物理量可以表达为坐标的函数，可以使用微积分方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;各向同性：同一位置各个方向看到的一样&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;应力应变及其相互关系&#34;&gt;应力、应变及其相互关系&lt;/h2&gt;
&lt;h3 id=&#34;为什么要研究应力&#34;&gt;为什么要研究应力？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;只有一端支撑的梁，在无支撑的一端施力，最上方先断裂，这是我们需要一个点的概念，使得我们能够解释为何同一截面上的行为不同&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;应力的定义&#34;&gt;应力的定义&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;应力&lt;/strong&gt;：分布的内力在一点的集度，就是单位面积上的内力。&lt;/p&gt;
&lt;p&gt;集度的研究无法再一点上面研究，需要在邻域$\Delta A$上研究，此时主矢为$\Delta F$，分量为$\Delta F_Q$、$\Delta F_N$。此时忽略主矩，由于邻域$\Delta A$线度很小，故主矩为高阶小量。&lt;/p&gt;
&lt;p&gt;作用线垂直于截面，为正应力：
$$
\sigma =\lim_{\Delta A\to0}\frac{\Delta F_N}{\Delta A}
$$&lt;/p&gt;
&lt;p&gt;作用线位于截面，为剪应力：
$$
\tau =\lim_{\Delta A\to0}\frac{\Delta F_Q}{\Delta A}
$$&lt;/p&gt;
&lt;h3 id=&#34;应力与内力分量的关系&#34;&gt;应力与内力分量的关系&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;由$\sigma$可以得到轴力与弯矩，但是却不能由轴力与弯矩得到每一点的应力，为什么？&lt;/p&gt;
&lt;p&gt;这是由于，由力确定应力是一个&lt;strong&gt;超静定&lt;/strong&gt;问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;假设以下各式中各量均为正方向：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;轴力与正应力：
$$
\int_A \sigma_x dA=F_N
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;弯矩与正应力：
$$
\int_A(\sigma_x dA)z=M_y\
\int_A(\sigma_x dA)y=-M_z
$$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;切应力与剪应力：&lt;/p&gt;
&lt;p&gt;$\tau_{xy}$表示截面法向为x，指向y
$$
\int_A \tau_{xy}dA=F_{Qy}
\quad
\int_A \tau_{xz}dA=F_{Qz}
\
\quad
-\int_A(\tau_{xy}dA)z+\int_A(\tau_{xz}dA)y=M_x
$$
同正应力一样，&lt;strong&gt;剪应力的分布也是超静定问题&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;应变的定义&#34;&gt;应变的定义&lt;/h3&gt;
&lt;p&gt;在构件截面上取一个长方体的&lt;strong&gt;微单元体dxdydz&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;正应变：正应力引起的线变形的程度，用$\varepsilon$表示&lt;/li&gt;
&lt;li&gt;角应变：剪应力引起的角变形的程度，用$\gamma$表示&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$$
\varepsilon_x=\frac{\Delta dx}{dx}
\quad
\gamma=\alpha+\beta
$$&lt;/p&gt;
&lt;p&gt;其中，$dx$为微元体的边长，$\Delta dx$表示边长的改变量，$\alpha、\beta$分别为两边的变化角度&lt;/p&gt;
&lt;p&gt;不难发现，&lt;strong&gt;应变无量纲。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;应变与应力的关系&#34;&gt;应变与应力的关系&lt;/h3&gt;
&lt;p&gt;对于大多数金属材料，变形不是很大、受力不是很大的时候，应力与应变满足线性关系：
$$
\sigma=E\varepsilon \quad
\tau=G\gamma
$$
其中，$E$为杨氏模量，单位为$Pa$，又称为线弹性模量；$G$为剪切模量，单位为$Pa$&lt;/p&gt;
&lt;p&gt;常用单位满足：
$$
1 Gpa=1\times10^9 Pa
\
1 Mpa=1\times10^6 Pa
\
1 kpa=1\times10^3 Pa
$$&lt;/p&gt;
&lt;h2 id=&#34;结论与讨论&#34;&gt;结论与讨论&lt;/h2&gt;
&lt;h3 id=&#34;刚体模型与弹性体模型&#34;&gt;刚体模型与弹性体模型&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;平衡问题：采用刚体分析&lt;/li&gt;
&lt;li&gt;变形问题：弹性体模型&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;弹性体受力及变形特点&#34;&gt;弹性体受力及变形特点&lt;/h3&gt;
&lt;p&gt;材力中的约束：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;外力平衡&lt;/li&gt;
&lt;li&gt;变形协调&lt;/li&gt;
&lt;li&gt;力与变形的物性关系&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这是与理论力学区别所在。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Wissenschaft als Beruf?</title>
        <link>https://zalouti.github.io/p/wissenschaft-als-beruf/</link>
        <pubDate>Sat, 12 Mar 2022 06:59:42 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/wissenschaft-als-beruf/</guid>
        <description>&lt;h1 id=&#34;wissenschaft-als-beruf-&#34;&gt;Wissenschaft als Beruf !?&amp;hellip;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Things fade , alternatives exclude.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;标题是马克斯·韦伯的一次著名的演讲《科学作为天职》。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>CS106L Sequence container</title>
        <link>https://zalouti.github.io/p/cs106l-sequence-container/</link>
        <pubDate>Wed, 09 Mar 2022 12:36:41 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/cs106l-sequence-container/</guid>
        <description>&lt;h1 id=&#34;overview&#34;&gt;overview&lt;/h1&gt;
&lt;p&gt;反正就是牛逼，不用这个就约等于只用了C+cin/cout&lt;/p&gt;
&lt;p&gt;之后关于STL的课程将会涉及以下五个方面&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sequence container&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;sequence-container&#34;&gt;Sequence container&lt;/h1&gt;
&lt;p&gt;what is sequence container?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It provides the acsess to a sequence of elements&lt;/li&gt;
&lt;li&gt;元素是按照序列顺序储存的&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;std::vector&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::deque&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::list&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::array&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;std::forward_list&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;stdvectort&#34;&gt;&lt;code&gt;std::vector&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;vector是一列任意元素类型的序列&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;T代表type，在使用时定义，这可以是任何的类型&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vecInt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vecOfvec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;h3 id=&#34;stddequet&#34;&gt;&lt;code&gt;std::deque&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;fullname:double ended queue&lt;/li&gt;
&lt;li&gt;可以完成所有&lt;code&gt;vector&lt;/code&gt;可以完成的事情，同时可以很快速的完成&lt;code&gt;push_front&lt;/code&gt;和&lt;code&gt;pop_front&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;但是在&lt;code&gt;vector&lt;/code&gt;同样可以完成的任务之下，&lt;code&gt;vector&lt;/code&gt;表现更加出色&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;container-adaptors&#34;&gt;Container Adaptors&lt;/h2&gt;
</description>
        </item>
        <item>
        <title>我所理解的流体力学</title>
        <link>https://zalouti.github.io/p/%E6%88%91%E6%89%80%E7%90%86%E8%A7%A3%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%9B%E5%AD%A6/</link>
        <pubDate>Tue, 08 Mar 2022 11:58:38 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E6%88%91%E6%89%80%E7%90%86%E8%A7%A3%E7%9A%84%E6%B5%81%E4%BD%93%E5%8A%9B%E5%AD%A6/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;上学期某位北大的dalao整理出的课程自学的电子书实在是令人心动，回想起华大的授课水平同样需要一些优质的在线课程进行补充，遂开此坑。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;我所理解的流体力学第一章&#34;&gt;我所理解的流体力学——第一章&lt;/h1&gt;
&lt;p&gt;我所理解的流体力学是北航的王洪伟老师的一门&lt;strong&gt;针对网课的课程&lt;/strong&gt;，并非线下课程的录制，所以在线观感很强，这门课程十分简短，总时长为395min，结合老师语速较慢的特点，倍速可以在4小时左右解决战斗。&lt;/p&gt;
&lt;p&gt;这门课程特点鲜明：即是不懂任何关于流体力学的知识，数学基础也几乎没有的话，你也可以随便选感兴趣的一节开始听讲，但是这并没有影响这门课程关于流体力学的高观点，这门课程更注重从物理的角度诠释流体的本质，这门课程可以迅速地建立起流体力学的概览。&lt;/p&gt;
&lt;p&gt;然而这也是缺点之一，这门课程在数学方面的欠缺，使得其不能作为正式的流体力学教程，更适合用于预习&amp;amp;娱乐&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;课程难度：⭐&lt;/li&gt;
&lt;li&gt;先修要求：微积分、高中物理&lt;/li&gt;
&lt;li&gt;预计学时：4~5h&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面是我个人的学习记录&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Cs106L Types</title>
        <link>https://zalouti.github.io/p/cs106l-types/</link>
        <pubDate>Thu, 03 Mar 2022 13:09:26 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/cs106l-types/</guid>
        <description>&lt;h1 id=&#34;c-types&#34;&gt;C++ Types&lt;/h1&gt;
&lt;h2 id=&#34;auto类型的使用&#34;&gt;&lt;code&gt;auto&lt;/code&gt;类型的使用&lt;/h2&gt;
&lt;p&gt;C++11支持自动类型，可以让编译器帮助你弄清这是什么类型&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;studentMap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cbegin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;studentMAp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;几乎所有的地方都可以使用&lt;code&gt;auto&lt;/code&gt;，除了函数的形参不可以使用，例如下面的例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;calculateeSum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bettername&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Avery&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[](&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
    
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;bettername&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;struct的使用&#34;&gt;&lt;code&gt;struct&lt;/code&gt;的使用&lt;/h2&gt;
&lt;p&gt;如何使函数返回多个参数值？&lt;/p&gt;
&lt;p&gt;对于CS106B来讲，函数返回值需要借助其他的&lt;strong&gt;reference parameters&lt;/strong&gt;，例如下例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;findpricerange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;min&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;static_cast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.08&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;static_cast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.36&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;750&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dist&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6452&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;findpricerange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;You can find price between:&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;and&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是上面的做法并不能很明显地看出&lt;code&gt;max&lt;/code&gt;与&lt;code&gt;min&lt;/code&gt;是reference parameter，当我们返回一对值时会更加自然，例如下例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;findpricerange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;static_cast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.08&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;static_cast&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.36&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;750&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;make_pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;findpricerange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;You can find prices between:&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;first&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;and&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;second&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;结合&lt;code&gt;auto&lt;/code&gt;我们可以将传回来的pair立马unpack，并直接使用&lt;code&gt;min&lt;/code&gt;与&lt;code&gt;max&lt;/code&gt;，只需将上面的&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;findpricerange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//pair不必类型相同
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;换为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;auto&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;findpricerange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dist&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;好多了！但是上面的程序还有缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;返回值时一对，能不能返回更多的值？&lt;code&gt;tuple&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;返回值要求第一个是&lt;code&gt;min&lt;/code&gt;第二个是&lt;code&gt;max&lt;/code&gt;，但是程序使用者怎样知道呢？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以更好的方式是使用&lt;code&gt;struct&lt;/code&gt;，用法大致同C,略去不写&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;course&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;code&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;TIme&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;strattime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Time&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endtime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;instructors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;initialization&#34;&gt;initialization&lt;/h2&gt;
&lt;p&gt;初始化在C++里面是一个麻烦事……一共有26种初始化变量的方式。所以为了解决这个问题，我们再添加一种初始化方式为&lt;strong&gt;uniform initialization&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;Course&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;now&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;CS106L&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Wang&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;zeng&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}};&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以下对比了不同的初始化方式&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vec1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//vector={3}
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vec2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//vector ={0,0,0}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Cs106L StreamⅡ</title>
        <link>https://zalouti.github.io/p/cs106l-stream/</link>
        <pubDate>Wed, 02 Mar 2022 13:07:00 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/cs106l-stream/</guid>
        <description>&lt;h1 id=&#34;stream-&#34;&gt;Stream Ⅱ&lt;/h1&gt;
&lt;h2 id=&#34;cout--cin&#34;&gt;cout &amp;amp; cin&lt;/h2&gt;
&lt;p&gt;一共有四种标准的&lt;code&gt;iostreams&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cin&lt;/code&gt;：标准输入&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cout&lt;/code&gt;：标准输出（缓冲区&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cerr&lt;/code&gt;：标准错误流（未缓冲&lt;/li&gt;
&lt;li&gt;&lt;code&gt;clog&lt;/code&gt;：标准错误流（缓冲&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;cin&lt;/code&gt;和&lt;code&gt;iss&lt;/code&gt;的区别在于，如果缓冲区不存在东西时，会等用户输入东西&lt;/p&gt;
&lt;h3 id=&#34;三个为什么带有的cin是一场噩梦的理由&#34;&gt;三个为什么带有&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;的&lt;code&gt;cin&lt;/code&gt;是一场噩梦的理由：&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cin&lt;/code&gt;读取一整行到缓冲区中，但是返回的是根据空白符分割的片段&lt;/li&gt;
&lt;li&gt;缓冲区中的其他信息会使得&lt;code&gt;cin&lt;/code&gt;可能不会等待用户输入&lt;/li&gt;
&lt;li&gt;当前面的&lt;code&gt;cin&lt;/code&gt;失效后，后面的&lt;code&gt;cin&lt;/code&gt;也会失效&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以如果我们想读取一整行时，可以采用&lt;code&gt;getline(cin,var)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;但是仍然会出现一些不方便的bug，当我们想将所有的东西复制到一个不依赖于外部的stream中，我们使用&lt;code&gt;stringstream&lt;/code&gt;!&lt;/p&gt;
&lt;h3 id=&#34;getinteger&#34;&gt;getInteger&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getInteger&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trash&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;domain_error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(...);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;istringstream&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iss&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iss&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trash&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;iss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;iss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ignore&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;numeric_limits&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;streamsize&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面我们来解析这个读取整数的函数&lt;code&gt;getInteger()&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;domain_error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(...);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这一行代码尝试去读取一整行，因为缓冲区此时是空的，所以他会提示用户输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;n&#34;&gt;istringstream&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;iss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用刚刚读取的一行&lt;code&gt;line&lt;/code&gt;，创建一个&lt;code&gt;istringstream&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iss&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iss&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trash&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这一行先在&lt;code&gt;iss&lt;/code&gt;中尝试读取&lt;code&gt;int&lt;/code&gt;的result，之后再尝试读取任何的&lt;code&gt;trash&lt;/code&gt;（注意上节课讲到的&lt;code&gt;iss&lt;/code&gt;的读取位置的变化，第二次读取trash时会自动寻找）&lt;/p&gt;
&lt;p&gt;如果if判定失败，则清空流并且再次尝试，因为出现了一些垃圾&lt;/p&gt;
&lt;p&gt;反之则返回我们想要的&lt;code&gt;result&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;实际上，由于每一次都在创建不同的流，所以最后两行的清空操作可以省略&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;stringstream&lt;/code&gt;并不是用来彻底取代&lt;code&gt;stream&lt;/code&gt;的，其仍然有自身的适用范围&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在处理字符串时
&lt;ul&gt;
&lt;li&gt;化简“/./a/b”为“/a”&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;规范输入输出时&lt;/li&gt;
&lt;li&gt;分析不同的类型时
&lt;ul&gt;
&lt;li&gt;例如getinteger()&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Cs106L StreamⅠ</title>
        <link>https://zalouti.github.io/p/cs106l-stream/</link>
        <pubDate>Wed, 02 Mar 2022 10:27:46 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/cs106l-stream/</guid>
        <description>&lt;h1 id=&#34;stream-&#34;&gt;Stream Ⅰ&lt;/h1&gt;
&lt;h2 id=&#34;string-stream&#34;&gt;string stream&lt;/h2&gt;
&lt;p&gt;使用&lt;code&gt;#include &amp;lt;sstream&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ostringstream&lt;/code&gt;代表&lt;em&gt;output string stream&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;创建一个stream时，默认位置在初始位置&lt;/li&gt;
&lt;li&gt;当尝试写入stream时，会覆盖原有内容&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sstream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ostringstream&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;oss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;I am Icarus.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;oss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;oss&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;16.9&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;AAAAAOnuce&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;oss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;当然我们也可以将位置设置在末尾，即&lt;strong&gt;at e&lt;/strong&gt;nd&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ostringstream&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;oss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;I am Icarus.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stringstream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;istirngstream&lt;/code&gt;代表&lt;em&gt;input string stream&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;istringstream&lt;/code&gt;将读取至下一个空格，并将读取的内容转化为对应的类型(&lt;code&gt;double&lt;/code&gt;、&lt;code&gt;int&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;sstream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ostringstream&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;oss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;I am Icarus.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;oss&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;16.9&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Onuce&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;istringstream&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;oss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;unit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;iss&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;unit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Now the water is &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;amount&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;unit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们可以制定&lt;code&gt;ostringtream&lt;/code&gt;和&lt;code&gt;istringstream&lt;/code&gt;所在的任意位置&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;    &lt;span class=&#34;n&#34;&gt;fpos&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;oss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tellp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;streamoff&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;oss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;seekp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;例一string-to-integer&#34;&gt;例一：string to integer&lt;/h3&gt;
&lt;p&gt;写一个函数，将输入的字符串转化为整数&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;StringtoInteger&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;istringstream&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;iss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;iss&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是这种解答不是完美的，我们并不知道&lt;code&gt;iss &amp;gt;&amp;gt; value&lt;/code&gt;这一行是否成功了。&lt;/p&gt;
&lt;p&gt;那么引出下文&lt;/p&gt;
&lt;h2 id=&#34;state-bits&#34;&gt;State bits&lt;/h2&gt;
&lt;p&gt;一共有四种表示stream的状态&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Good bit:准备好进行读写&lt;/li&gt;
&lt;li&gt;Fail bit:之前的操作失败了，所有未来操作被冻结&lt;/li&gt;
&lt;li&gt;EOF bit:end of file&lt;/li&gt;
&lt;li&gt;Bad bit:外部错误&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;h3 id=&#34;stringstream&#34;&gt;stringstream&lt;/h3&gt;
&lt;p&gt;分为输出与输入&lt;code&gt;ostringstream&lt;/code&gt;与&lt;code&gt;istringstream&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用方法为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;n&#34;&gt;istringstream&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;iss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;initial&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;ostringstream&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;oss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;initial&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以使用各种选项，例如：二进制、从末尾开始输入/出&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;n&#34;&gt;istringstream&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;iss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;initial&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stringstream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;ostringstream&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;oss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;initial&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stringstream&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用&lt;code&gt;oss&lt;/code&gt;与&lt;code&gt;iss&lt;/code&gt;从缓冲区中读取数据，将字符串变量转化为或者读取为对应的类型&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;n&#34;&gt;oss&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;var1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;var2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;iss&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;var1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;var2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们可以手动调整stream在输入和输出时候的位置&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;output&lt;/th&gt;
&lt;th&gt;input&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;get position&lt;/td&gt;
&lt;td&gt;oss.tellp()&lt;/td&gt;
&lt;td&gt;iss.tellg()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;set position&lt;/td&gt;
&lt;td&gt;oss.seekp(pos)&lt;/td&gt;
&lt;td&gt;iss.seekg(pos)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;creat offset&lt;/td&gt;
&lt;td&gt;streamoff(n)&lt;/td&gt;
&lt;td&gt;~&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;state-bits-1&#34;&gt;state bits&lt;/h3&gt;
&lt;p&gt;一共有四种表示stream的状态&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Good bit:准备好进行读写&lt;/li&gt;
&lt;li&gt;Fail bit:之前的操作失败了，所有&lt;strong&gt;未来操作被冻结&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;EOF bit:end of file，&lt;strong&gt;未来操作被冻结&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Bad bit:外部错误，&lt;strong&gt;未来操作被冻结&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>黄金与镀金</title>
        <link>https://zalouti.github.io/p/%E9%BB%84%E9%87%91%E4%B8%8E%E9%95%80%E9%87%91/</link>
        <pubDate>Sun, 27 Feb 2022 21:58:14 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E9%BB%84%E9%87%91%E4%B8%8E%E9%95%80%E9%87%91/</guid>
        <description>&lt;h1 id=&#34;黄金与镀金政党的衰落与革新&#34;&gt;黄金与镀金——政党的衰落与革新&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;**《德国与中华民国》**着眼于1927年到1938年——国民政府发展的“黄金十年”。然而“黄金十年”并非孤立地存在，相反，它深刻地与两次世界大战之间的进程相融合。作为费孝通的弟子，柯伟林先生同样主张用国际化视角研究现代中国[&lt;a class=&#34;link&#34; href=&#34;#_ftn1&#34; &gt;①]&lt;/a&gt;。研究这一时期的中德关系，我们不仅可以一窥两次世界大战间的国际风云是如何与国内环境相互作用的，更重要的是，黄金十年的中德关系，打开了一扇从外部研究中国现代化进程的窗口，能够让我们重新审视政党自我革新与衰落的范式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;重温这段历史，中德关系的发展与破裂始终围绕着双方的经济发展与思想传播，因此经济发展与思想渗透便构成了两条贯穿全书的主线，并且相互融合。&lt;/p&gt;
&lt;h2 id=&#34;经济线以物易物的工业外交&#34;&gt;经济线：以物易物的工业外交&lt;/h2&gt;
&lt;p&gt;首先，经济线溯源于一战结束。相较于其他仍保有治外法权的帝国主义国家，凡尔赛合约使德国“被迫”与中国以一种平等的姿态交往。但是这种平等姿态，与其他列强相比，反而成为德国所具有的稀缺竞争力，帮助德国与中国重建关系，开启并返回中国市场。&lt;/p&gt;
&lt;p&gt;一战后，德国与中国各自对于武器的买卖需求促使了德国与中国之间贸易的复苏。虽然初期是以零散、非官方的形式开展的，但是颇丰的利益带来的吸引力，为后来的官方合作奠定了基础。此外，基于中国对于德国国民性的崇拜，在其他的外援告吹后，国民政府希望以德为师，迅速实现中国的现代化。&lt;/p&gt;
&lt;p&gt;中德官方的正式接触有赖于双方的共同推力。德国方面，军事顾问团处于整个交流的核心地位。而这一模式大规模的使用，溯源于第一位核心人物——鲍尔。其本人的政治哲学——“民族布尔什维克主义”与国民党高层的保守主义具有极大的相似性，这使得鲍尔的建议深受蒋介石本人认同。“他为中德合作的十年创立了制度化的框架，并刺激起德国工业界对闯出一条通往中国市场的全方位的新道路的兴趣。”[&lt;a class=&#34;link&#34; href=&#34;#_ftn2&#34; &gt;②]&lt;/a&gt;鲍尔本人促使了中德双方代表团的互访，双方在互相考察后均燃起了对于经济合作的热情，开启了中德合作的“黄金十年”。&lt;/p&gt;
&lt;p&gt;中国方面，翁文灏、朱家骅、丁文江等具有留德背景的知识分子致力于搭建中德交流的桥梁。这种留德背景的思想渗透，一方面形成了国民党工业计划中对于德国产品的偏好；另一方面，双方的思想交流与渗透在合作过程中进一步加强，对于德国的崇拜与日俱增，也为日后的新生活运动埋下了伏笔。&lt;/p&gt;
&lt;p&gt;国民政府的工业战略以孙中山的《实业计划》为基础：希望在保有独立主权的前提下，尽可能地吸收外资来发展自身。1932年前的工业计划缺乏统一机构的指导，且由于未基于国民政府自身的实力与财政基础考虑，各个部门都在制定一个“完美”的计划，却没有规划如何去实现这一计划，工业计划的执行成为一片混乱。&lt;/p&gt;
&lt;p&gt;在1931年的满洲事变之后，工业战略的目的更加明确了，即：通过提高技术专家在政府中的地位，加强自身国防实力，为抵御日本侵略做物质准备。德国与中国的合作见诸于工业现代化与军事现代化，这期间起主导作用的是德国军事顾问塞克特。&lt;/p&gt;
&lt;p&gt;工业方面，基于中国自身的财政赤字，以资源原料换取工业产品的以物易物机构——合步楼诞生了，这一机构在三年计划中起了中心作用：中国输出原料，德国输入制成品。但是，以输出原材料为收入的战略希望保持国际局势的紧张冲突，但是这一计划的执行却又不希望看到真正的冲突提前爆发。同时，德国在华利益的扩大，是以加强国民政府的实力为前提，这一举措间接地损伤了其盟友日本的利益，导致德国不得不在中国与日本之间斡旋，缺乏高层领导人之间的直接接触也为日后关系的破裂埋下伏笔。国家资源委员会的三年计划，希望在短时间创建中南地区的工业基地来抵御日本的入侵，最终为中国的发展奠定基础**。**合作庞大且激进，被称为国民党的大跃进。[&lt;a class=&#34;link&#34; href=&#34;#_ftn3&#34; &gt;③]&lt;/a&gt;但由于战争的突然爆发，所有计划都被迫中止，一次雄心勃勃的革新宣告失败了。&lt;/p&gt;
&lt;p&gt;军事方面，塞克特的建议使兵工厂获得了长足的发展。塞克特依照德国的军制对中国军队进行改革，希望借此建立起一支仅听命于蒋介石一人的严密的军官团。不可忽视的是，政治军事相互作用，这支军队成为蒋介石个人权力的基础，间接地提高了蒋介石的地位。但是这种地位的提高在这支军队丧失后也随之消逝，这也成为日后蒋介石只能借派系斗争实现统治的隐患。一场看似借鉴军事强国的军制革新，最终却“意外地”成为政党衰落的原因。&lt;/p&gt;
&lt;p&gt;总结这一时期的中德经济合作：不可置否的是，虽然这期间遭受了国际环境上经济大危机的打击与国内满洲事变的影响，但中德互相的贸易占比均不断上升。双方建立起了新型的以货易货的利益纽带，中德开展工业外交也取得了一定成果。但是，由于外部的战事突变与国民党内部的权力斗争，所有计划都存在一定的破产。由此看来，“黄金十年”并非完美的十年，十年中的革新取得了经济上的增量，但背后同样也存在着衰落的蛛丝马迹。&lt;/p&gt;
&lt;h2 id=&#34;思想线中国的法西斯主义&#34;&gt;思想线：中国的法西斯主义&lt;/h2&gt;
&lt;p&gt;思想线作为中德关系的暗线，一直贯穿于经济线中。“中国之所以乐于与德国合作，这是基于中国对于德国的一种观察，即研究了德国过去和现在的发展情况，认为它所取得的经验有可能被中国取而用之。”[&lt;a class=&#34;link&#34; href=&#34;#_ftn4&#34; &gt;④]&lt;/a&gt;中国人对于德国的国民性保持一贯的好感，“强调其具有执着、有条理、忠诚和思想深奥等特点。”[&lt;a class=&#34;link&#34; href=&#34;#_ftn5&#34; &gt;⑤]&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这也可以解释为何南京的德国顾问团享有如此显赫的地位。最典型的例子是，对于德国的崇拜与钦慕体现于，对于法西斯主义的崇拜在国内形成了一种风尚。但是，这种模糊的崇拜是派系林立、党争纷繁的最直接的体现。各个派系争夺对于法西斯主义的解释权，实则是各个利益团体对于自身利益的诉求。为了使权力集中于自身，蒋介石利用派系纷争实现个人统治，国民党被肢解为一个个纠纷不止的派系，逐渐无法调和，已经不再是国民革命时期那个富有生气的党派了。&lt;/p&gt;
&lt;p&gt;蒋介石也看到了这一点，在受德国崇拜与塞克特的双重影响下，独裁运动失败之后，蒋介石发起了“新生活运动”——借助中国传统文化思想与德国的民族主义观，希望可以重振国民的“精神”。但这场荒诞的运动自身的思想内核无所不包，在党内，蒋介石希望通过此次运动将各个派系统制于一个体系之下，将自己送到更高的地位；在党外，则希望这场运动可以实现对于人民的“规训”。这场“中体德用”的运动最终以失败告终，讽刺的是，这种丧失道德与精神的现状，恰是蒋介石上位过程中的产物。党内众多的派系林立，无不与每一次蒋介石自身权利的加强与集中有关，蒋介石的这一集权过程一方面达到了集权的目的，另一方面，又造成了党内不可弥合的派系分歧。国民党的革新起源于自身的衰落，可这种衰落并非外部势力所为，恰恰是自身党内领导者的“杰出之作”造成了这一戏剧性的结果。从某种意义上来说，这是一场不可避免的衰落。&lt;/p&gt;
&lt;p&gt;希特勒上台是中德关系发展的转折点。基于自身更加宏大的战争利益的考量，希特勒放弃了中德苦心经营的经济利益纽带，最终选择了日本作为自己的盟友，倒行逆施的政治支配了经济，最终使两者同归于尽。[&lt;a class=&#34;link&#34; href=&#34;#_ftn6&#34; &gt;⑥]&lt;/a&gt;德国对外政策愈发亲日：承认伪满洲政府的合法性，召回德国顾问团。中国也于1941年对德宣战，标志着这段中德关系的结束。&lt;/p&gt;
&lt;h2 id=&#34;张力与限界中德关系的启发&#34;&gt;张力与限界：中德关系的启发&lt;/h2&gt;
&lt;p&gt;最后，让我们与柯伟林先生的思路保持一致：借助德国的视角我们看到了什么？&lt;/p&gt;
&lt;p&gt;首先，重新审视这段中德关系，凡尔赛和约签订以后，两个处境类似——均受到了不平等条约制约的国家，相互选择了对方，建立起了近代中国一段“平等外交”。在整体的国际视角下，我们可以更加深刻地理解某些历史事件的逻辑与规律：为什么蒋介石对于江西的“剿匪”如此重视？江西的露天钨矿又是如何与二战深刻地结合在了一起？&lt;/p&gt;
&lt;p&gt;其次，我们需要重新审视“黄金时代”的措词。1928——1937年间，国民党在内部动乱与日军侵略的夹缝之中艰难发展，这期间不乏许多自我革新的努力，无论是从经济上的“三年经济计划”，还是从思想上的“新生活运动”，抑或是从军事上的军队整编。但是全套“以德为师”的计划无一幸免于破产，毋庸置疑，国民政府的经济确实在此期间获得了相当的发展，然而透过冰冷的数据，我们看到的是党内派系的勾心斗角、计划执行的混乱激进、浮于形式的精神规训，以及最重要的，疏离人民的政党政权。同样作为列宁主义的政党，国民党为何逐渐失去人心？《德国与中华民国》从法西斯主义的中国化为我们打开了新的视角：各个派系或许根本不想深究法西斯主义的真正内核。法西斯主义唯一吸引他们的，只不过是权力的独裁。所有人都幻想获得权力，实现独裁，复现德国历史上的奇迹崛起。但幻想中的独裁缺乏人民的支持，恰似无本之木，终有败时。&lt;/p&gt;
&lt;p&gt;最后，这段中德关系中，国民党希望参照德国的发展模式来寻求中国的现代化之路。但这种“中体德用”的破产，促使我们思考——现代化道路的选择应当何如？国民党对于德国的借鉴，某种程度上来讲，是一种基于自身政治信仰的偏好选择，一厢情愿地引入德国模式，却忽略了这些模式产生所需的历史与文化渊源。对于德国的拙劣模仿不仅仅改变了经济、军事、政治等实质性的领域，也同样将德国的思想融入了国民党之中，更加向往集权与独裁，更加崇拜精神与训政，这种思想上的改变同样体现于国民党的组织形态——权力更加集中于蒋介石一人。作为执政党的国民党，在守天下的过程中逐渐迷失了打天下的初心。&lt;/p&gt;
&lt;p&gt;当我们回过头重新评价这段历史时，不能简单地用国民党不得人心，共产党得人心来概括革新与衰落的原因。国民党自身并非没有自我革新与挣扎，只不过，当这种自我革新建立在背离党派自身初心之上，一个列宁主义的政党被派系分裂所困，与人民渐行渐远，每一步革新终将伴随着不可避免的衰落，每一刻的生存都意味着三民主义的滥觞的慢性死亡，最终写就了国民党的衰亡史。&lt;/p&gt;
&lt;p&gt;从德国视角研究近代中国，我们可以看到“黄金时代”背后令人惋惜的镀金真相，对于国民党衰落与革新的透视，更重要的是回答这些问题：今日的中国如何继续自身的现代化长征？我们党又如何才能真正实现自我革新？岁月失语,唯石能言，这或许就是“黄金与镀金”的思考带给我们的启发。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;[&lt;a class=&#34;link&#34; href=&#34;#_ftnref1&#34; &gt;①]&lt;/a&gt; 柯伟林：《德国与中华民国》，陈谦平等译，南京：江苏人民出版社，2006年，新中文版序言，第3页。&lt;/p&gt;
&lt;p&gt;[&lt;a class=&#34;link&#34; href=&#34;#_ftnref2&#34; &gt;②]&lt;/a&gt; 柯伟林：《德国与中华民国》，第44页。&lt;/p&gt;
&lt;p&gt;[&lt;a class=&#34;link&#34; href=&#34;#_ftnref3&#34; &gt;③]&lt;/a&gt; 柯伟林：《德国与中华民国》，第236页。&lt;/p&gt;
&lt;p&gt;[&lt;a class=&#34;link&#34; href=&#34;#_ftnref4&#34; &gt;④]&lt;/a&gt; 柯伟林：《德国与中华民国》，第171页。&lt;/p&gt;
&lt;p&gt;[&lt;a class=&#34;link&#34; href=&#34;#_ftnref5&#34; &gt;⑤]&lt;/a&gt; 柯伟林：《德国与中华民国》，第173页。&lt;/p&gt;
&lt;p&gt;[&lt;a class=&#34;link&#34; href=&#34;#_ftnref6&#34; &gt;⑥]&lt;/a&gt; 柯伟林：《德国与中华民国》，第303页。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>现实与真实</title>
        <link>https://zalouti.github.io/p/%E7%8E%B0%E5%AE%9E%E4%B8%8E%E7%9C%9F%E5%AE%9E/</link>
        <pubDate>Sun, 13 Feb 2022 23:16:06 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E7%8E%B0%E5%AE%9E%E4%B8%8E%E7%9C%9F%E5%AE%9E/</guid>
        <description>&lt;h1 id=&#34;现实与真实&#34;&gt;现实与真实&lt;/h1&gt;
&lt;blockquote&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css&#34;&gt;
&lt;style type=&#34;text/css&#34;&gt;.dark-theme .aplayer{background:#212121}.dark-theme .aplayer.aplayer-withlist .aplayer-info{border-bottom-color:#5c5c5c}.dark-theme .aplayer.aplayer-fixed .aplayer-list{border-color:#5c5c5c}.dark-theme .aplayer .aplayer-body{background-color:#212121}.dark-theme .aplayer .aplayer-info{border-top-color:#212121}.dark-theme .aplayer .aplayer-info .aplayer-music .aplayer-title{color:#fff}.dark-theme .aplayer .aplayer-info .aplayer-music .aplayer-author{color:#fff}.dark-theme .aplayer .aplayer-info .aplayer-controller .aplayer-time{color:#eee}.dark-theme .aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon path{fill:#eee}.dark-theme .aplayer .aplayer-list{background-color:#212121}.dark-theme .aplayer .aplayer-list::-webkit-scrollbar-thumb{background-color:#999}.dark-theme .aplayer .aplayer-list::-webkit-scrollbar-thumb:hover{background-color:#bbb}.dark-theme .aplayer .aplayer-list li{color:#fff;border-top-color:#666}.dark-theme .aplayer .aplayer-list li:hover{background:#4e4e4e}.dark-theme .aplayer .aplayer-list li.aplayer-list-light{background:#6c6c6c}.dark-theme .aplayer .aplayer-list li .aplayer-list-index{color:#ddd}.dark-theme .aplayer .aplayer-list li .aplayer-list-author{color:#ddd}.dark-theme .aplayer .aplayer-lrc{text-shadow:-1px -1px 0 #666}.dark-theme .aplayer .aplayer-lrc:before{background:-moz-linear-gradient(top, #212121 0%, rgba(33,33,33,0) 100%);background:-webkit-linear-gradient(top, #212121 0%, rgba(33,33,33,0) 100%);background:linear-gradient(to bottom, #212121 0%, rgba(33,33,33,0) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=&#39;#212121&#39;, endColorstr=&#39;#00212121&#39;,GradientType=0 )}.dark-theme .aplayer .aplayer-lrc:after{background:-moz-linear-gradient(top, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);background:-webkit-linear-gradient(top, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);background:linear-gradient(to bottom, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=&#39;#00212121&#39;, endColorstr=&#39;#cc212121&#39;,GradientType=0 )}.dark-theme .aplayer .aplayer-lrc p{color:#fff}.dark-theme .aplayer .aplayer-miniswitcher{background:#484848}.dark-theme .aplayer .aplayer-miniswitcher .aplayer-icon path{fill:#eee}&lt;/style&gt;
&lt;script src=&#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js&#34;&gt;&lt;/script&gt;&lt;meting-js server=&#34;netease&#34; type=&#34;song&#34; id=&#34;1447930631&#34; theme=&#34;#2980b9&#34;&gt;&lt;/meting-js&gt;
&lt;/blockquote&gt;
&lt;p&gt;时隔3年多，终于读完《如何阅读一本书》，借鉴其中的方法，以后在读书笔记之前都会加一些自己的概括，这次推荐的书是 &lt;a class=&#34;link&#34; href=&#34;https://book.douban.com/subject/27608239/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;《原则》&lt;/strong&gt;&lt;/a&gt; ：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;《原则》这本书的核心观点是：为了更好地生活、实现自己的目标，我们需要在生活中制定自己的原则并按照原则行事。书中不仅详细介绍了作者的生活与工作原则，直面生活与头脑开放是这本书的精华所在。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;满满的成功学鸡汤味，对吧？但是我把这本书定位为 &lt;em&gt;不读会后悔&lt;/em&gt; 的系列。&lt;/p&gt;
&lt;h2 id=&#34;现实的混沌&#34;&gt;现实的混沌&lt;/h2&gt;
&lt;p&gt;寒假总是颓废堕落的好时机，在刷知乎的时候突然看到了这样一个问题（虽然我要吐槽这人小学语文没过关）：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;清醒的堕落该怎么使自己能够振奋起来学习？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在寒假躺尸一个月的我，看到这个问题自然心里感觉不太对劲。Ne处于第一功能，导致潜意识还没等我反应过来，就已经开始准备写下这个问题的答案了。&lt;/p&gt;
&lt;p&gt;首先，既然清醒，何谓堕落？在清醒的定义下，如果个体具有理性的思考能力，并且内心想要上进的话，那么能被称之为堕落的事情几乎是不会发生的。&lt;/p&gt;
&lt;p&gt;许多知乎上对于类似问题的回答是——想太多而做太少。&lt;/p&gt;
&lt;p&gt;有道理，但是我觉得并不是核心问题所在。长辈们经常会说”想太多而做太少“，但是我始终认为，这并不是想太多而是想得还不够全面，我并没有什么信心说我自己已经认清了我自己。相反，正是因为想得不够清楚，导致根本不是在 &lt;em&gt;”清醒的堕落“&lt;/em&gt;，连现实都是混沌与虚幻的，何谈用力与振奋呢？&lt;/p&gt;
&lt;p&gt;我的回答是：这种状态只是人生经历的同构重现罢了。借用《原则》中的一句话，即为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;几乎所有“眼前的情况”都是“类似情境的再现”…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;还是觉得我在当谜语人？好吧，举个我自身的例子就清楚了。&lt;/p&gt;
&lt;p&gt;当我在做lili题目的时候，遇到一些比较困难的题目时，尤其是新加的一些难题时，内心通常会有这些想法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这是钱班的题目吧orz……&lt;/li&gt;
&lt;li&gt;我赌ta期末不考&lt;/li&gt;
&lt;li&gt;先看看答案之后再说&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;于是在应该调动自身主观能动性去获取新的知识的时候，由于这些想法和心态，使得大部分时间都是在比较trivial的题目中自我陶醉。&lt;/p&gt;
&lt;p&gt;回到高考，当年的我不确信我有考上TP的实力，尤其是在二模之后遇到一些难题的时候，内心基本会这样去想：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这是附中的题目吧……附中大佬tkpl&lt;/li&gt;
&lt;li&gt;我赌ta高考不考&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是不是类似情景的再现：幻想着一个比自己强大的组织，将自己的挑战推卸给想象以降低自身的步是与恐惧，最后为了避免认知失调，拿考试不考来自圆其说。所以说：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;即刻即永恒。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;取得成功、推动进步的人对现实背后的因果关系有着深刻的理解，并利用原则实现自己的愿望。反过来也成立：没有深深扎根于现实的理想主义者会制造问题，而不是推动进步。&lt;/p&gt;
&lt;p&gt;但是这种经历的同构其实也是可以打破的，正如上面那句话的后半句所说，在这现实的混沌中，大部分时间我们只是在依靠潜意识前行，《原则》给出了突破的方法在于：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;应用经深思熟虑得出的原则来应对。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;真实的代价&#34;&gt;真实的代价&lt;/h2&gt;
&lt;p&gt;为什么这种“类似情境的再现”往往意识不到呢？可能的原因是：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;了解真相是痛苦的。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;做梦是很容易的，因为梦足够廉价，能让我们在这种主观的记忆与经验中编制混沌的现实。一言以蔽之——丧失了自我意识。&lt;/p&gt;
&lt;p&gt;由于现实的真相很痛苦，为了避免直接接触这些真相，机体将会采取两方面的措施：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;否定事实，编制一场梦，正如刚刚所看到的一致&lt;/li&gt;
&lt;li&gt;降低自我意识，没有了自我，压力与焦虑也便消失了，这点与酗酒同理&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以，为了走出这些“类似情境”，我们往往需要借助&lt;strong&gt;他者&lt;/strong&gt;的力量帮助我们意识到自我的存在，我们需要信赖我们客观的记录而不是主观的记忆，这便是原则存在的意义。&lt;/p&gt;
&lt;p&gt;Anyway，入手不亏，就算不看也能压泡面（雾）&lt;/p&gt;
&lt;hr&gt;
</description>
        </item>
        <item>
        <title>杂记</title>
        <link>https://zalouti.github.io/p/%E6%9D%82%E8%AE%B0/</link>
        <pubDate>Sun, 06 Feb 2022 20:21:32 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E6%9D%82%E8%AE%B0/</guid>
        <description>&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://imgtu.com/i/HKGG8g&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s4.ax1x.com/2022/02/06/HKGG8g.png&#34; &gt;
		&lt;img src=&#34;https://s4.ax1x.com/2022/02/06/HKGG8g.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;我和我糟糕的睡眠&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;我和我糟糕的睡眠&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css&#34;&gt;
&lt;style type=&#34;text/css&#34;&gt;.dark-theme .aplayer{background:#212121}.dark-theme .aplayer.aplayer-withlist .aplayer-info{border-bottom-color:#5c5c5c}.dark-theme .aplayer.aplayer-fixed .aplayer-list{border-color:#5c5c5c}.dark-theme .aplayer .aplayer-body{background-color:#212121}.dark-theme .aplayer .aplayer-info{border-top-color:#212121}.dark-theme .aplayer .aplayer-info .aplayer-music .aplayer-title{color:#fff}.dark-theme .aplayer .aplayer-info .aplayer-music .aplayer-author{color:#fff}.dark-theme .aplayer .aplayer-info .aplayer-controller .aplayer-time{color:#eee}.dark-theme .aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon path{fill:#eee}.dark-theme .aplayer .aplayer-list{background-color:#212121}.dark-theme .aplayer .aplayer-list::-webkit-scrollbar-thumb{background-color:#999}.dark-theme .aplayer .aplayer-list::-webkit-scrollbar-thumb:hover{background-color:#bbb}.dark-theme .aplayer .aplayer-list li{color:#fff;border-top-color:#666}.dark-theme .aplayer .aplayer-list li:hover{background:#4e4e4e}.dark-theme .aplayer .aplayer-list li.aplayer-list-light{background:#6c6c6c}.dark-theme .aplayer .aplayer-list li .aplayer-list-index{color:#ddd}.dark-theme .aplayer .aplayer-list li .aplayer-list-author{color:#ddd}.dark-theme .aplayer .aplayer-lrc{text-shadow:-1px -1px 0 #666}.dark-theme .aplayer .aplayer-lrc:before{background:-moz-linear-gradient(top, #212121 0%, rgba(33,33,33,0) 100%);background:-webkit-linear-gradient(top, #212121 0%, rgba(33,33,33,0) 100%);background:linear-gradient(to bottom, #212121 0%, rgba(33,33,33,0) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=&#39;#212121&#39;, endColorstr=&#39;#00212121&#39;,GradientType=0 )}.dark-theme .aplayer .aplayer-lrc:after{background:-moz-linear-gradient(top, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);background:-webkit-linear-gradient(top, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);background:linear-gradient(to bottom, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=&#39;#00212121&#39;, endColorstr=&#39;#cc212121&#39;,GradientType=0 )}.dark-theme .aplayer .aplayer-lrc p{color:#fff}.dark-theme .aplayer .aplayer-miniswitcher{background:#484848}.dark-theme .aplayer .aplayer-miniswitcher .aplayer-icon path{fill:#eee}&lt;/style&gt;
&lt;script src=&#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js&#34;&gt;&lt;/script&gt;&lt;meting-js server=&#34;netease&#34; type=&#34;song&#34; id=&#34;1884083122&#34; theme=&#34;#2980b9&#34;&gt;&lt;/meting-js&gt;
&lt;p&gt;这就是寒假罢了hhh&lt;/p&gt;
</description>
        </item>
        <item>
        <title>间隔重复系统与渐进阅读</title>
        <link>https://zalouti.github.io/p/%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D%E7%B3%BB%E7%BB%9F%E4%B8%8E%E6%B8%90%E8%BF%9B%E9%98%85%E8%AF%BB/</link>
        <pubDate>Mon, 31 Jan 2022 20:37:51 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E9%97%B4%E9%9A%94%E9%87%8D%E5%A4%8D%E7%B3%BB%E7%BB%9F%E4%B8%8E%E6%B8%90%E8%BF%9B%E9%98%85%E8%AF%BB/</guid>
        <description>&lt;h2 id=&#34;什么是间隔重复系统和渐进阅读&#34;&gt;什么是间隔重复系统和渐进阅读？&lt;/h2&gt;
&lt;p&gt;Spaced Repetition System，缩写为SRS，也是标题中的间隔重复系统。&lt;/p&gt;
&lt;p&gt;Incremental Reading，SRS缩写为IR，也就是标题中的渐进阅读。&lt;/p&gt;
&lt;p&gt;或许这两种工具对于读者还是比较陌生，但是当我讲述结束之后，其实你会发现，这两种工具其实蕴含着一种新的学习理念，或许你也会正如初三时的我一般，内心暗自惊叹：&lt;strong&gt;这TM就是我想要的东西！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果很闲的话，其实可以看一看这个视频，叶哥是国内渐进学习的领头人物了(Repect)&lt;/p&gt;






    


&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe src=&#34;https://player.bilibili.com/player.html?as_wide=1&amp;amp;high_quality=1&amp;amp;page=1&amp;bvid=BV1jL411V7GD&#34;
            scrolling=&#34;no&#34;
            frameborder=&#34;no&#34;
            framespacing=&#34;0&#34;
            allowfullscreen=&#34;true&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;
&lt;div style=&#34;position: relative; padding: 32% 45%;&#34;&gt;
    &lt;iframe style=&#34;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&#34; 
    src=&#34;//player.bilibili.com/player.html?bvid=BV1jL411V7GD&amp;page=1&amp;as_wide=1&amp;high_quality=1&amp;danmaku=1&#34; 
    scrolling=&#34;no&#34; frameborder=&#34;no&#34; framespacing=&#34;0&#34; allowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;好吧，我也不知道为什么会有两个窗口，毁灭吧……&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;或者可以看这个，以SRS漫画介绍还是非常新颖的做法,&lt;a class=&#34;link&#34; href=&#34;https://ncase.me/remember/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;戳这里&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;srs&#34;&gt;SRS&lt;/h3&gt;
&lt;p&gt;对于学生党而言，每年最要紧的时候，无非两场决定生死的考试。而决定两场考试的，便是考试周的疯狂复习，正如季羡林先生所言：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;做什么有意义的事—妈的，这些混蛋教授，不但不知道自己泄气，还整天考，不是你考，就是我考，考他娘的什么东西？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然而，在经历了多次全靠考前一周挣分的经历之后，总想在考试周过得不太狼狈。很正常的想法就是——那我提前开始复习吧！&lt;/p&gt;
&lt;p&gt;然而问题就来了，提前多少？复习的内容每隔几天看一次最好？一次看多少比较好？&lt;/p&gt;
&lt;p&gt;这些关于马冬梅和孙红雷的问题几乎每个学生党都遇到过，最重要的是，考前几周总会被莫名其妙的屁事占满，总是没有时间安排一个良好高效的复习计划。&lt;/p&gt;
&lt;p&gt;所以，SRS就是为了解决这个问题的。&lt;/p&gt;
&lt;p&gt;相信读者肯定都用过背单词的软件，这也是最基本的SRS软件了。其实，市面上使用量最大的SRS软件是&lt;a class=&#34;link&#34; href=&#34;https://apps.ankiweb.net/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Anki&lt;/a&gt;，主要的功能有以下三条：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;制卡：正面问题，背面答案&lt;/li&gt;
&lt;li&gt;根据回忆评分&lt;/li&gt;
&lt;li&gt;根据评分自动安排复习时间&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;基本上有这三条就可以判断是一个间隔重复软件了，详细的介绍我放在&lt;a class=&#34;link&#34; href=&#34;https://ncase.me/remember/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这里&lt;/a&gt;，毕竟用SRS来介绍SRS还是非常好的一件事情hhh&lt;/p&gt;
&lt;h3 id=&#34;ir&#34;&gt;IR&lt;/h3&gt;
&lt;p&gt;渐进阅读实际上算是一些高级玩法了，内嵌在软件中的目前只有supermemo一家。其实刚刚谈到SRS用于复习，但是你会发现SRS好像只能用来复习……&lt;/p&gt;
&lt;p&gt;当我想学一点新的东西的时候会发现传统的线性学习会有以下的问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;前面的术语看过之后，到后面用到时，我已经忘记是什么意思了orz&lt;/li&gt;
&lt;li&gt;刚开始看的时候觉得什么都是重点，什么都想画横线&lt;/li&gt;
&lt;li&gt;我无法多线程任务，优先级无法很好地安排&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;详细的介绍我放在&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/279553703&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;em&gt;&lt;strong&gt;这里&lt;/strong&gt;&lt;/em&gt;&lt;/a&gt;，毕竟前人之述备矣，就不重复造轮子了。&lt;/p&gt;
&lt;h2 id=&#34;我的实践与经验教训&#34;&gt;我的实践与经验教训&lt;/h2&gt;
&lt;p&gt;截至大二上学期，我成功学会了使用supermemo以及使用最快速度方法进行Ankify我的知识，下面就我所使用的过程中的一些问题和感想记录下来。&lt;/p&gt;
&lt;h3 id=&#34;制卡本身就是学习&#34;&gt;制卡本身就是学习&lt;/h3&gt;
&lt;p&gt;第一次看到anki时，我首先想到的就是，这太适合学语言了！所以我搜集了别人的卡组，开始背诵……&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Rule1：永远不要使用别人的卡组！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;制卡以及提问的方式涉及对于知识的理解与掌握，不同的人对于知识的掌握程度不同，制卡并不能达成基本的共识，使用的chunks以及术语不同，拿来主义丧失了最宝贵的学习机会！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Rule2：永远不要嫌卡片太多，尤其是初学者。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第一次尝试大规模使用anki是在高三背诵生物的时候，但是当时不懂得拆分与原子化问题，导致en背……效果也不是很好&lt;/p&gt;
&lt;h3 id=&#34;理科的灵魂在于手笔演算&#34;&gt;理科的灵魂在于手笔演算&lt;/h3&gt;
&lt;p&gt;本学期我尝试了将Anki用于两门科目：理论力学和常微分方程，然而由于这两门课都犯了一个致命的错误——没有计算、或者说，没有规范计算，导致自己吃了两个3.3&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Rule3：理科先算后输入是最好的！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;不要害怕重复制卡&#34;&gt;不要害怕重复制卡&lt;/h3&gt;
&lt;p&gt;重复的过程中，总会发现一些难以记忆的卡片，这时候应该大胆地将其剔除掉，当有了新的理解的时候也应该及时加入，重复的过程就是SRS的意义所在&lt;/p&gt;
&lt;h3 id=&#34;先框架后原子&#34;&gt;先框架，后原子&lt;/h3&gt;
&lt;p&gt;在学习知识的时候，一定要先搭建知识框架，之后再进行原子化的制卡，不然会陷入原子化的制卡之中反而为知识所蒙蔽了……&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下学期尝试全面SRS化！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>伊卡洛斯的翅膀</title>
        <link>https://zalouti.github.io/p/%E4%BC%8A%E5%8D%A1%E6%B4%9B%E6%96%AF%E7%9A%84%E7%BF%85%E8%86%80/</link>
        <pubDate>Mon, 31 Jan 2022 17:34:13 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E4%BC%8A%E5%8D%A1%E6%B4%9B%E6%96%AF%E7%9A%84%E7%BF%85%E8%86%80/</guid>
        <description>&lt;img src="https://s4.ax1x.com/2022/02/27/bn20UA.png" alt="Featured image of post 伊卡洛斯的翅膀" /&gt;&lt;blockquote&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css&#34;&gt;
&lt;style type=&#34;text/css&#34;&gt;.dark-theme .aplayer{background:#212121}.dark-theme .aplayer.aplayer-withlist .aplayer-info{border-bottom-color:#5c5c5c}.dark-theme .aplayer.aplayer-fixed .aplayer-list{border-color:#5c5c5c}.dark-theme .aplayer .aplayer-body{background-color:#212121}.dark-theme .aplayer .aplayer-info{border-top-color:#212121}.dark-theme .aplayer .aplayer-info .aplayer-music .aplayer-title{color:#fff}.dark-theme .aplayer .aplayer-info .aplayer-music .aplayer-author{color:#fff}.dark-theme .aplayer .aplayer-info .aplayer-controller .aplayer-time{color:#eee}.dark-theme .aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon path{fill:#eee}.dark-theme .aplayer .aplayer-list{background-color:#212121}.dark-theme .aplayer .aplayer-list::-webkit-scrollbar-thumb{background-color:#999}.dark-theme .aplayer .aplayer-list::-webkit-scrollbar-thumb:hover{background-color:#bbb}.dark-theme .aplayer .aplayer-list li{color:#fff;border-top-color:#666}.dark-theme .aplayer .aplayer-list li:hover{background:#4e4e4e}.dark-theme .aplayer .aplayer-list li.aplayer-list-light{background:#6c6c6c}.dark-theme .aplayer .aplayer-list li .aplayer-list-index{color:#ddd}.dark-theme .aplayer .aplayer-list li .aplayer-list-author{color:#ddd}.dark-theme .aplayer .aplayer-lrc{text-shadow:-1px -1px 0 #666}.dark-theme .aplayer .aplayer-lrc:before{background:-moz-linear-gradient(top, #212121 0%, rgba(33,33,33,0) 100%);background:-webkit-linear-gradient(top, #212121 0%, rgba(33,33,33,0) 100%);background:linear-gradient(to bottom, #212121 0%, rgba(33,33,33,0) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=&#39;#212121&#39;, endColorstr=&#39;#00212121&#39;,GradientType=0 )}.dark-theme .aplayer .aplayer-lrc:after{background:-moz-linear-gradient(top, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);background:-webkit-linear-gradient(top, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);background:linear-gradient(to bottom, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=&#39;#00212121&#39;, endColorstr=&#39;#cc212121&#39;,GradientType=0 )}.dark-theme .aplayer .aplayer-lrc p{color:#fff}.dark-theme .aplayer .aplayer-miniswitcher{background:#484848}.dark-theme .aplayer .aplayer-miniswitcher .aplayer-icon path{fill:#eee}&lt;/style&gt;
&lt;script src=&#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js&#34;&gt;&lt;/script&gt;&lt;meting-js server=&#34;netease&#34; type=&#34;song&#34; id=&#34;34509603&#34; theme=&#34;#2980b9&#34;&gt;&lt;/meting-js&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;icarus-wings&#34;&gt;Icarus Wings&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;So we beat on, boats against the current, borne back ceaselessly into the past.——The Great Gatsby&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;年终不知为何，总是标志着一波大规模的总结。在可能存在的外星人眼里，无非是愚蠢的地球人庆祝地球成功自转一周。然而白驹过隙，回顾虚度的十九个年头，转眼就要奔三的我也未曾写过什么像样的总结。随一波大流，写下一年来对于学习生活的一些小小思考。&lt;/p&gt;
&lt;h2 id=&#34;骄傲地恐惧着&#34;&gt;“骄傲地恐惧着”&lt;/h2&gt;
&lt;p&gt;这个学期过得并不是很好，这并不是在出分后作出成王败寇式的反思，相反，在学期中已经崩了。大二上学期，最我恐惧的两门课程，就是大学物理和理论力学。事实证明，一个wonderful和一个期末爆肝之后剩下的3.3，确实构成了本学期不那么光彩的两门课程。&lt;/p&gt;
&lt;p&gt;然而当我开始回忆大二上的经历时，却发现了一种十分奇怪的问题。一方面，我对于身为行健书院的一员而十分高兴，享受着“精深学习”所带来的快感——一种通过脑中意淫其他同名课程的简单程度的精神胜利法；另一方面，却又对于身边将近60%多拥有物理竞赛的同学们感到了一种莫名的peer pressure。于是，我发现我陷入了一种奇怪的状态——&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我在骄傲地恐惧着。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;恐惧归恐惧，但是你得有行动啊？于是，对于大学物理和理论力学的准备，基本上就是挂在口头的“刷题”，以及拖到期末周的疯狂更新公众号。&lt;/p&gt;
&lt;p&gt;我们先暂且放下大学物理和理论力学这两门课程，回顾一下前段时间我在公众号中宣传的一门通识课程——《沟通表达基础与进阶》。在课程的结尾，有一个最终展示环节。这个环节是自愿报名参加的，思考再三之后，我选择了放弃，在回复理由时，我写到：担心没有充分的准备，效果不好。&lt;/p&gt;
&lt;p&gt;看到这里可能有人会觉得一头雾水：这两件事情有什么关系？&lt;/p&gt;
&lt;p&gt;在大学物理与理论力学的拖延之中，我也会好奇：明明道理就在那里，方法也很清楚，那为什么不去用呢？为什么一定要等到最后的几周才开始去着手学期初就知道的事情呢？&lt;/p&gt;
&lt;p&gt;在个人展示结束的那天晚上，我十分羡慕地看着参加展示的同学拿到了专属的奖状。准备一次展示，难道一定要惊艳吗？为什么要拖到最后的时刻，然后后悔自己could have done？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;完美主义。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;每次都只差一点点就能够达到目标，在唾手可得的时候往往失去了所谓“高中的冲劲”，于是，就止步于此。有时甚至都不会去开始，连普通优秀都达不到。因为追求极限和完美，反而离完美越来越远了。&lt;/p&gt;
&lt;p&gt;这还是表象，还不够深入，这种行为背后的逻辑是什么？&lt;/p&gt;
&lt;p&gt;不妨回到任务的初期，明明道理就在那里，方法也很清楚，那为什么不去用呢？&lt;/p&gt;
&lt;p&gt;其实话不能说得很绝对，当初也做了一些尝试，比如尝试使用间隔重复与渐进阅读帮助自己学习大学物理和理论力学，但为了学习如何导入学习材料，搭建软件，如何制卡，已经占据了大量的时间，直到期末周才草草了事。其实，当初要是把学习如何采用间隔重复与渐进阅读的时间投入到传统的学习方法上时，反而最后的收效会更好。&lt;/p&gt;
&lt;p&gt;直到这个假期，才能闲下来思考这些问题，那么下面给出我的答案。&lt;/p&gt;
&lt;p&gt;这种“知而不行”的状态，核心是等待，等待什么？等待一个最好的方法，一个超越现状，超越所有人的方法，帮助自己“多快好省”地学习。&lt;/p&gt;
&lt;p&gt;这背后的思路不就是只要我付出一点点的努力，就可以比绝大多数人强吗？&lt;/p&gt;
&lt;p&gt;可问题是凭什么？&lt;/p&gt;
&lt;p&gt;从初三开始我一直沉迷于学习方法与技巧的优化，这确实帮助我走出18线小城市，但是这种追求技术的狂热终究反噬了自我。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Icarus Wings.&lt;/strong&gt; 它能帮助你飞出迷楼，但当飞得过高时，结局便是葬身于大海。&lt;/p&gt;
&lt;p&gt;这还是表象，还不够深入，为什么会产生这种逻辑？&lt;/p&gt;
&lt;p&gt;我们回到最开始那种奇怪的状态——**骄傲地恐惧着。**恐惧总归要有个对象，恐惧什么？&lt;/p&gt;
&lt;p&gt;失语，却又想起最近看的某本书中的一段话。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;如果一种害怕使人既无法理解也无法定位，也因此无法去面对，那么它就变得更为可怕，引发无助的感觉，进一步加重焦虑。当焦虑的对象从无物变成某物，对无物的害怕转变为对某物的害怕时，就能发动自我保护机制，人就会逃离出存在性的焦虑。——《存在主义心理治疗》&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我想，还是心底不想承认自己比别人差这件事。当我停止脚步时，仍能构建一个幻想去安抚自己，但是如果开始努力，做最后的20%的冲刺，那么幻想的遮羞布就不复存在了。&lt;/p&gt;
&lt;h2 id=&#34;华枝春满天心月圆&#34;&gt;华枝春满，天心月圆&lt;/h2&gt;
&lt;p&gt;这是一句节选自弘一法师临终前的诗，原诗如下。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;君子之交，其淡如水。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;执象而求，咫尺千里。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;问余何适，廓尔忘言。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;华枝春满，天心月圆。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;什么意思呢？我也只是尝试解释一下，对不对另说，只是我当下认知水平的表现。&lt;/p&gt;
&lt;p&gt;当我执着于各种技巧的使用与探寻时，其实已经落入 &lt;em&gt;&lt;strong&gt;”执象而求，咫尺千里。“&lt;/strong&gt;&lt;/em&gt; 的困局之中了。&lt;/p&gt;
&lt;p&gt;春天的枝头自然是枝繁叶茂的，明净的天空中月圆华美，本就是完满的，恰如春天的枝头与天心中的圆月，何必去找外物来满足自身呢？&lt;/p&gt;
&lt;p&gt;可是，既然我们仍然有进步的空间，既然我们身上还有那么多的不完美，为什么禅宗却又说 &lt;em&gt;&lt;strong&gt;”华枝春满，天心月圆。“&lt;/strong&gt;&lt;/em&gt; 呢？&lt;/p&gt;
&lt;p&gt;在回顾一年的学业与生活中，总会有那么一段时间，精神饱满，身体健康，学习效率异常之高，生活也非常的顺心。每每想到这些“黄金时代”，总会另深处低谷的我们充满羡慕。当然，除了羡慕之外，更多的则是朋友圈中经常能够见得到的：我是个废物,etc.&lt;/p&gt;
&lt;p&gt;在初中、高中、大一的时候，我仍然在试探自己的生理极限，尤其是高中为了避免自己的计算失误甚至开始了一些自残的行为，具体不说了，反正就是左臂惨不忍睹。&lt;/p&gt;
&lt;p&gt;我的本能与直觉告诉我，这是反人性的，这是变态的。&lt;/p&gt;
&lt;p&gt;现实的信息与媒体告诉我，这是努力，这是朝圣的虔诚。&lt;/p&gt;
&lt;p&gt;最可怕的地方在于，只要我一直在取得着进步，那么我丝毫不会怀疑这种方法的合理性，只会不断地去push自己，直到身I体崩溃，情绪失调。最后习得了无助。&lt;/p&gt;
&lt;p&gt;问题在于，过去的那些所谓“黄金时代”不也是我们自己吗？现在的那些颓废与习得性无助不也是我们自己吗？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Icarus Wings.&lt;/strong&gt; 蛮横的努力可以帮助自己飞出知识的迷楼，然而这种粗暴的努力在飞到过高的天空时，只会灼伤自己。这就是自律所布下的障眼法。&lt;/p&gt;
&lt;p&gt;我在这学期沟通表达基础与进阶课程中即兴做了一点总结，当时是这样说的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;之前看到过他的tape提问箱，问题是：“上大学究竟带给了我什么？”&lt;/p&gt;
&lt;p&gt;我的回答是：&lt;/p&gt;
&lt;p&gt;战胜过去的恐惧，以及遇到新的恐惧。&lt;/p&gt;
&lt;p&gt;这个学期后半段，我学到的最重要的东西，或许就是，在面对恐惧时，不是自律的自我和恐惧一同携手将自己打倒。&lt;em&gt;&lt;strong&gt;相反，自律的我、放纵的我、强大的我、弱小的我，都是我不可或缺的一部分。学会让不同的自我相互融合，或许就是想和大家分享的一些道理。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;最后，用禅宗的一句话来做结语吧：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;华枝春满，天心月圆。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;想说的大概就是这个意思。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>春劫</title>
        <link>https://zalouti.github.io/p/%E6%98%A5%E5%8A%AB/</link>
        <pubDate>Mon, 31 Jan 2022 11:19:07 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E6%98%A5%E5%8A%AB/</guid>
        <description>&lt;blockquote&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css&#34;&gt;
&lt;style type=&#34;text/css&#34;&gt;.dark-theme .aplayer{background:#212121}.dark-theme .aplayer.aplayer-withlist .aplayer-info{border-bottom-color:#5c5c5c}.dark-theme .aplayer.aplayer-fixed .aplayer-list{border-color:#5c5c5c}.dark-theme .aplayer .aplayer-body{background-color:#212121}.dark-theme .aplayer .aplayer-info{border-top-color:#212121}.dark-theme .aplayer .aplayer-info .aplayer-music .aplayer-title{color:#fff}.dark-theme .aplayer .aplayer-info .aplayer-music .aplayer-author{color:#fff}.dark-theme .aplayer .aplayer-info .aplayer-controller .aplayer-time{color:#eee}.dark-theme .aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon path{fill:#eee}.dark-theme .aplayer .aplayer-list{background-color:#212121}.dark-theme .aplayer .aplayer-list::-webkit-scrollbar-thumb{background-color:#999}.dark-theme .aplayer .aplayer-list::-webkit-scrollbar-thumb:hover{background-color:#bbb}.dark-theme .aplayer .aplayer-list li{color:#fff;border-top-color:#666}.dark-theme .aplayer .aplayer-list li:hover{background:#4e4e4e}.dark-theme .aplayer .aplayer-list li.aplayer-list-light{background:#6c6c6c}.dark-theme .aplayer .aplayer-list li .aplayer-list-index{color:#ddd}.dark-theme .aplayer .aplayer-list li .aplayer-list-author{color:#ddd}.dark-theme .aplayer .aplayer-lrc{text-shadow:-1px -1px 0 #666}.dark-theme .aplayer .aplayer-lrc:before{background:-moz-linear-gradient(top, #212121 0%, rgba(33,33,33,0) 100%);background:-webkit-linear-gradient(top, #212121 0%, rgba(33,33,33,0) 100%);background:linear-gradient(to bottom, #212121 0%, rgba(33,33,33,0) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=&#39;#212121&#39;, endColorstr=&#39;#00212121&#39;,GradientType=0 )}.dark-theme .aplayer .aplayer-lrc:after{background:-moz-linear-gradient(top, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);background:-webkit-linear-gradient(top, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);background:linear-gradient(to bottom, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=&#39;#00212121&#39;, endColorstr=&#39;#cc212121&#39;,GradientType=0 )}.dark-theme .aplayer .aplayer-lrc p{color:#fff}.dark-theme .aplayer .aplayer-miniswitcher{background:#484848}.dark-theme .aplayer .aplayer-miniswitcher .aplayer-icon path{fill:#eee}&lt;/style&gt;
&lt;script src=&#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js&#34;&gt;&lt;/script&gt;&lt;meting-js server=&#34;netease&#34; type=&#34;song&#34; id=&#34;25982719&#34; theme=&#34;#2980b9&#34;&gt;&lt;/meting-js&gt;
&lt;/blockquote&gt;
&lt;p&gt;又是一年春劫。&lt;/p&gt;
&lt;p&gt;你或许会说，至于吗？&lt;/p&gt;
&lt;p&gt;好吧，任何人之间的悲欢总是不相通的。回忆起我在这个世界上的19个年头，如果说，有人问起我会有什么烦恼时，我将在心底毫不犹豫地给出我的答案——春劫。&lt;/p&gt;
&lt;p&gt;春劫不是某种具体的事件，而是一种感觉。类似心悸，却又不是真的心悸：呼吸间，胸口有着一种莫名的愤怒与委屈，随着胸口的上下起伏，这种情绪随着血液的循环遍布全身，直到感受到一种莫名的虚弱。在白天无人相诉说，希冀关上房门就能构筑起抵御一切的屏障；在夜晚只有在书籍中放逐自我，自我消失了，压力也就暂时逃离了，每年渡劫大致如此。&lt;/p&gt;
&lt;p&gt;春劫不是次次变换的磨炼，而是亘古不变的诅咒。在我有记忆的年份里面，春劫的问题无非是那么几样：财务纠纷、名誉纠纷、责任纠纷，如同单机游戏的背板。尽管我只是NPC，但杀伤力却未曾减弱过丝毫。破碎声、争吵声、嘶吼声、哭泣声，真是美妙啊。&lt;/p&gt;
&lt;p&gt;在所谓传统中，春节是什么？亲情？团圆？欢乐？从来不是。我们不妨这样看：这个特殊的时间点将所有人聚集在一起，每个人各怀鬼胎，相互不满，一年积累下来的财务纠纷、名誉纠纷、责任纠纷聚沙成塔，妙啊！人物、场景、矛盾都齐了！这是多么好的一场戏剧！我扮演着所谓传统施加于身上的面具，在虚假的奉承与逢迎之间觥筹交错，对着剧场中其他的演员指手画脚，哦，对了，尤其要指出的是，我非常不满这些给我选出来的演员，这真是残忍的馈赠。&lt;/p&gt;
&lt;p&gt;要是某一年没有发生这出好戏呢？&lt;/p&gt;
&lt;p&gt;我只会在战栗中窃喜。&lt;/p&gt;
&lt;p&gt;或许换句话说，这种窃喜让我战栗。&lt;/p&gt;
&lt;p&gt;润吧，润就没有这烦恼了。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>天大寒</title>
        <link>https://zalouti.github.io/p/%E5%A4%A9%E5%A4%A7%E5%AF%92/</link>
        <pubDate>Thu, 20 Jan 2022 22:04:50 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E5%A4%A9%E5%A4%A7%E5%AF%92/</guid>
        <description>&lt;h1 id=&#34;回顾一下刚刚过去大摸特摸的几天&#34;&gt;回顾一下刚刚过去大摸特摸的几天……&lt;/h1&gt;
&lt;blockquote&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css&#34;&gt;
&lt;style type=&#34;text/css&#34;&gt;.dark-theme .aplayer{background:#212121}.dark-theme .aplayer.aplayer-withlist .aplayer-info{border-bottom-color:#5c5c5c}.dark-theme .aplayer.aplayer-fixed .aplayer-list{border-color:#5c5c5c}.dark-theme .aplayer .aplayer-body{background-color:#212121}.dark-theme .aplayer .aplayer-info{border-top-color:#212121}.dark-theme .aplayer .aplayer-info .aplayer-music .aplayer-title{color:#fff}.dark-theme .aplayer .aplayer-info .aplayer-music .aplayer-author{color:#fff}.dark-theme .aplayer .aplayer-info .aplayer-controller .aplayer-time{color:#eee}.dark-theme .aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon path{fill:#eee}.dark-theme .aplayer .aplayer-list{background-color:#212121}.dark-theme .aplayer .aplayer-list::-webkit-scrollbar-thumb{background-color:#999}.dark-theme .aplayer .aplayer-list::-webkit-scrollbar-thumb:hover{background-color:#bbb}.dark-theme .aplayer .aplayer-list li{color:#fff;border-top-color:#666}.dark-theme .aplayer .aplayer-list li:hover{background:#4e4e4e}.dark-theme .aplayer .aplayer-list li.aplayer-list-light{background:#6c6c6c}.dark-theme .aplayer .aplayer-list li .aplayer-list-index{color:#ddd}.dark-theme .aplayer .aplayer-list li .aplayer-list-author{color:#ddd}.dark-theme .aplayer .aplayer-lrc{text-shadow:-1px -1px 0 #666}.dark-theme .aplayer .aplayer-lrc:before{background:-moz-linear-gradient(top, #212121 0%, rgba(33,33,33,0) 100%);background:-webkit-linear-gradient(top, #212121 0%, rgba(33,33,33,0) 100%);background:linear-gradient(to bottom, #212121 0%, rgba(33,33,33,0) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=&#39;#212121&#39;, endColorstr=&#39;#00212121&#39;,GradientType=0 )}.dark-theme .aplayer .aplayer-lrc:after{background:-moz-linear-gradient(top, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);background:-webkit-linear-gradient(top, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);background:linear-gradient(to bottom, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=&#39;#00212121&#39;, endColorstr=&#39;#cc212121&#39;,GradientType=0 )}.dark-theme .aplayer .aplayer-lrc p{color:#fff}.dark-theme .aplayer .aplayer-miniswitcher{background:#484848}.dark-theme .aplayer .aplayer-miniswitcher .aplayer-icon path{fill:#eee}&lt;/style&gt;
&lt;script src=&#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js&#34;&gt;&lt;/script&gt;&lt;meting-js server=&#34;netease&#34; type=&#34;song&#34; id=&#34;1416959692&#34; theme=&#34;#2980b9&#34;&gt;&lt;/meting-js&gt;
&lt;/blockquote&gt;
&lt;p&gt;15号：逛街，吃喝玩乐&lt;/p&gt;
&lt;p&gt;16号：逛街，吃喝玩乐&lt;/p&gt;
&lt;p&gt;17号：B站皮皮幻-咕咕咕&lt;/p&gt;
&lt;p&gt;18号：B站皮皮幻-咕咕咕&lt;/p&gt;
&lt;p&gt;19号：B站皮皮幻-咕咕咕&lt;/p&gt;
&lt;p&gt;20号：B站皮皮幻-咕咕咕&lt;/p&gt;
&lt;p&gt;好了，当代胡适可以开始吟诵了……&lt;/p&gt;
</description>
        </item>
        <item>
        <title>书单</title>
        <link>https://zalouti.github.io/p/%E4%B9%A6%E5%8D%95/</link>
        <pubDate>Fri, 14 Jan 2022 23:06:52 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E4%B9%A6%E5%8D%95/</guid>
        <description>&lt;img src="https://w.wallhaven.cc/full/pk/wallhaven-pkgj13.png" alt="Featured image of post 书单" /&gt;&lt;p&gt;川陀大学及其图书馆，正是第二基地所在的地方，所谓&lt;em&gt;&lt;strong&gt;群星的尽头&lt;/strong&gt;&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;其实这个tag本来还有另一个名称，这个来源于我高中同学对于我的诟病——老学究。但是有一说一，我还挺喜欢这个外号，这让我看起来很knowledgeable🐶&lt;/p&gt;
&lt;p&gt;这个地方躺着老学究看过的书，以及一些书评的链接索引，佛系更新。&lt;/p&gt;
&lt;h1 id=&#34;2021年秋&#34;&gt;2021年秋&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;《基地》系列：5/5，阿西莫夫登峰造极之作，前三部非常值得一看，后四不免由于写作技法的重复使用而使读者感到无聊，但是后四部所提出的机器人三定律在今天仍然很有思考价值。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;《把自己作为方法》：5/5，项飙老师的谈话录，觉得非常值得一看。其中的“乡绅”与距离感，我觉得是当下青年可以实践的一种方法，或许我们真的可以“把自己作为方法”？&lt;/li&gt;
&lt;li&gt;《认知天性》：&lt;strong&gt;4/5&lt;/strong&gt;，如果说你想让我推荐一本有关于学习方法的书，这本一定不能少。其中涉及的间隔重复、增量阅读等思想非常适用于当下学校教育在学习方法方面的匮乏。然而1分在于，首先不免于欧美畅销书的窠臼，例子太多，大部分是一些个人的精力叙述，其实全书干货也就是3000-5000的博客，非给整成一本书……&lt;/li&gt;
&lt;li&gt;《存在主义心理治疗》：6/5，在看完这本书之后，我宣布我皈依了存在主义。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2021年冬&#34;&gt;2021年冬&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;《活法》：3/5，高中时班主任赞不绝口的一本书，上大学之后拿过来重新审阅一番。当我了解到稻盛和夫本人的背景后，更能够理解为什么这本书中存在着浓厚的佛家思想。对于和我一样的普通人来讲，坚持本书的纲领确实能够过上充实的一生。但是缺点在于，大人，时代变了，稻盛和夫想掩盖时代机遇对于个人发展的作用，其中论述日本应该向中国道歉怎么看都像是冲击销售量的软文。但如果想理解60、70年代的人的思路，这是一本不错的入门书。&lt;/li&gt;
&lt;li&gt;《如何阅读一本书》：5/5，这是最好的读书指南，没有之一，唯一遗憾的是，书后的书单只有西方世界的书籍，但是这也不能算作书的缺点，作者的文化背景所限罢了。当然，看完整本书已经非常不容易了hhh(这本书从我买下到看完花了3年😂)&lt;/li&gt;
&lt;li&gt;《了不起的盖茨比》：4/5，第7遍读这本小说了。菲茨拉杰德对于迷惘的一代的描述的确非常恰当——这一点也可以从用词造句的华丽看出来，但是当小舟一次又一次被推回海岸时，又该怎么办呢？&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>寒假寄划</title>
        <link>https://zalouti.github.io/p/%E5%AF%92%E5%81%87%E5%AF%84%E5%88%92/</link>
        <pubDate>Thu, 13 Jan 2022 19:28:49 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/%E5%AF%92%E5%81%87%E5%AF%84%E5%88%92/</guid>
        <description>&lt;h1 id=&#34;寒假计划&#34;&gt;寒假计划&lt;/h1&gt;
&lt;p&gt;先推一个专辑，考试周结束之后发现的宝藏专辑，正如专辑名称一样，适合Chill down~&lt;/p&gt;
&lt;blockquote&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css&#34;&gt;
&lt;style type=&#34;text/css&#34;&gt;.dark-theme .aplayer{background:#212121}.dark-theme .aplayer.aplayer-withlist .aplayer-info{border-bottom-color:#5c5c5c}.dark-theme .aplayer.aplayer-fixed .aplayer-list{border-color:#5c5c5c}.dark-theme .aplayer .aplayer-body{background-color:#212121}.dark-theme .aplayer .aplayer-info{border-top-color:#212121}.dark-theme .aplayer .aplayer-info .aplayer-music .aplayer-title{color:#fff}.dark-theme .aplayer .aplayer-info .aplayer-music .aplayer-author{color:#fff}.dark-theme .aplayer .aplayer-info .aplayer-controller .aplayer-time{color:#eee}.dark-theme .aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon path{fill:#eee}.dark-theme .aplayer .aplayer-list{background-color:#212121}.dark-theme .aplayer .aplayer-list::-webkit-scrollbar-thumb{background-color:#999}.dark-theme .aplayer .aplayer-list::-webkit-scrollbar-thumb:hover{background-color:#bbb}.dark-theme .aplayer .aplayer-list li{color:#fff;border-top-color:#666}.dark-theme .aplayer .aplayer-list li:hover{background:#4e4e4e}.dark-theme .aplayer .aplayer-list li.aplayer-list-light{background:#6c6c6c}.dark-theme .aplayer .aplayer-list li .aplayer-list-index{color:#ddd}.dark-theme .aplayer .aplayer-list li .aplayer-list-author{color:#ddd}.dark-theme .aplayer .aplayer-lrc{text-shadow:-1px -1px 0 #666}.dark-theme .aplayer .aplayer-lrc:before{background:-moz-linear-gradient(top, #212121 0%, rgba(33,33,33,0) 100%);background:-webkit-linear-gradient(top, #212121 0%, rgba(33,33,33,0) 100%);background:linear-gradient(to bottom, #212121 0%, rgba(33,33,33,0) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=&#39;#212121&#39;, endColorstr=&#39;#00212121&#39;,GradientType=0 )}.dark-theme .aplayer .aplayer-lrc:after{background:-moz-linear-gradient(top, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);background:-webkit-linear-gradient(top, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);background:linear-gradient(to bottom, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=&#39;#00212121&#39;, endColorstr=&#39;#cc212121&#39;,GradientType=0 )}.dark-theme .aplayer .aplayer-lrc p{color:#fff}.dark-theme .aplayer .aplayer-miniswitcher{background:#484848}.dark-theme .aplayer .aplayer-miniswitcher .aplayer-icon path{fill:#eee}&lt;/style&gt;
&lt;script src=&#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js&#34;&gt;&lt;/script&gt;&lt;meting-js auto=&#34;https://music.163.com/#/album?id=98166062&#34; theme=&#34;#2980b9&#34;&gt;&lt;/meting-js&gt;
&lt;/blockquote&gt;
&lt;p&gt;ENTP一直被诟病太过于关注可能性而忽视了做计划与做总结，那么不妨这个寒假来做一个计划，结合我们自己的需求，尝试一下立具体的flag……&lt;/p&gt;
&lt;h2 id=&#34;想做的事情&#34;&gt;想做的事情&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;大学物理自学免修考试&lt;/li&gt;
&lt;li&gt;寒假磕盐打工&lt;/li&gt;
&lt;li&gt;托福考试&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;大学物理学习&#34;&gt;大学物理学习&lt;/h3&gt;
&lt;p&gt;寒假大雾一共有这些内容：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;力学部分：振动(第六章)——波动(第七章)&lt;/li&gt;
&lt;li&gt;热学：第9章.温度和气体动理论——第10章.热力学第一定律——第11章.热力学第二定律&lt;/li&gt;
&lt;li&gt;光学：第22章 光的干涉——第23章 光的衍射——第24章 光的偏振&lt;/li&gt;
&lt;li&gt;量子力学：第26章 波粒二象性——第27章 薛定谔方程——第28章 原子中的电子——第29章 固体中的电子&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以根据SRS与IR的思路，我们采用以下的顺序&lt;/p&gt;
&lt;p&gt;6——22——9——7——26——27——10——28——23——11——29&lt;/p&gt;
&lt;p&gt;每一章的题目大概只需要做每周布置的作业即可，但是力求将其搞清楚&lt;/p&gt;
&lt;h3 id=&#34;寒假磕盐打工&#34;&gt;寒假磕盐打工&lt;/h3&gt;
&lt;p&gt;寒假不小心发现自己竟然会有两个磕盐项目，但是程志刚学长那个我想quit了……&lt;/p&gt;
&lt;p&gt;一个是因为，目前在里面投入还不是很多，抽身还来得及……&lt;/p&gt;
&lt;p&gt;另一方面是SRT项目是自己写的代码，已经投入了很大的精力了……&lt;/p&gt;
&lt;p&gt;还有一方面是，土木那边不想再继续深究下去了……&lt;/p&gt;
&lt;h3 id=&#34;toefl&#34;&gt;TOEFL&lt;/h3&gt;
&lt;p&gt;阅读半截+写作半截&lt;/p&gt;
&lt;p&gt;除此之外还有&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4&lt;/strong&gt;节阅读&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3&lt;/strong&gt;节听力&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3&lt;/strong&gt;节写作&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3&lt;/strong&gt;节口语&lt;/p&gt;
&lt;p&gt;每节课4个小时，所以总共需要至少68个小时才能结束第一轮有帮助的学习&lt;/p&gt;
&lt;h2 id=&#34;实际的时间计算&#34;&gt;实际的时间计算&lt;/h2&gt;
&lt;p&gt;从1月14号开始算起，到开学前2月20号，我应该有38天的时间去完成这些事情。其中，托福课程需要至少8天的时间才能结束，并且这8天中无法做其他任务量很大的事情，单纯按照每天学习的时长来算的话，剩下的2~3小时的学习时间可以用来去刷卡和制卡。&lt;/p&gt;
&lt;p&gt;此外，大雾学习大概为：看书——看PPT——制卡——写作业——最后往年题目&lt;/p&gt;
&lt;p&gt;看书看PPT大概也需要4个小时，每天如果要满足间隔重复的需求的话，我们至少需要&lt;strong&gt;12&lt;/strong&gt;天来完成基础知识的储备与建立这件事情，而且大雾的优先级应该是最高的。&lt;/p&gt;
&lt;p&gt;最后是磕盐，虽然说磕盐任务比较多，但是我们思索一下我们这个寒假需要干的活有什么？&lt;/p&gt;
&lt;p&gt;对于SRT来讲，需要把整体计划写清楚。&lt;/p&gt;
&lt;p&gt;整体计划的&lt;code&gt;.tex&lt;/code&gt;文件应该包括下列内容：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;问题陈述：PDE及其应用背景。&lt;/li&gt;
&lt;li&gt;数值方法：分别是有限元方法和基本解方法。&lt;/li&gt;
&lt;li&gt;算例：Test 1.1， 1.2， 2.7.&lt;/li&gt;
&lt;li&gt;扩展内容：从二维问题推广到三维，或者从热传导方程推广到常系数对流-扩散-反应方程 (Convection-diffusion-reaction equations)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以还是需要给自己留6~7天的假期时间+自学时间，剩下的时间大概有12天左右的时间用于做科研项目……&lt;/p&gt;
&lt;p&gt;先写一个明天的策划吧……&lt;/p&gt;
&lt;p&gt;明天起床后的第一个4h内，进行大雾第9章的学习和制卡，之后进行半截托福课程的扫尾和制卡+锻炼，午休之后写大雾作业，之后磕盐写写fundamental solution&lt;/p&gt;
</description>
        </item>
        <item>
        <title>01-14</title>
        <link>https://zalouti.github.io/p/01-14/</link>
        <pubDate>Thu, 13 Jan 2022 16:25:32 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/01-14/</guid>
        <description>&lt;h1 id=&#34;打工日常&#34;&gt;打工日常&lt;/h1&gt;
&lt;h2 id=&#34;基本框架搭建&#34;&gt;基本框架搭建&lt;/h2&gt;
&lt;h3 id=&#34;mainpy&#34;&gt;&lt;code&gt;main.py&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;接下来我们写出热传导方程的基本解
$$
u(x,t)=\int_{R^n}\Phi(x-y,t)u_0(y)dy+\int^t_0\int_{R^n}\Phi(x-y,t-\tau)f(y,\tau)dyd\tau
$$
其中$u_0(x)$、$f(y,\tau)$由模型决定，$\Phi(x,t)$的表达式为
$$
\Phi(x,t)=\frac{1}{(4\pi\kappa t)^{\frac{n}{2}}}e^{-\frac{|x|^2}{4\kappa t}}
$$&lt;/p&gt;
&lt;h4 id=&#34;计算部分exact-solution&#34;&gt;计算部分(exact solution)&lt;/h4&gt;
&lt;p&gt;已知$u_0(x)$，代入模型参数与数值参数得到精确解&lt;/p&gt;
&lt;h4 id=&#34;绘图部分&#34;&gt;绘图部分&lt;/h4&gt;
&lt;p&gt;将基本解与精确解在每个mesh上分别绘图，将最终得到的图像保存到&lt;code&gt;/image&lt;/code&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>01-13</title>
        <link>https://zalouti.github.io/p/01-13/</link>
        <pubDate>Thu, 13 Jan 2022 11:43:00 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/01-13/</guid>
        <description>&lt;h2 id=&#34;打工日常&#34;&gt;打工日常&lt;/h2&gt;
&lt;blockquote&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css&#34;&gt;
&lt;style type=&#34;text/css&#34;&gt;.dark-theme .aplayer{background:#212121}.dark-theme .aplayer.aplayer-withlist .aplayer-info{border-bottom-color:#5c5c5c}.dark-theme .aplayer.aplayer-fixed .aplayer-list{border-color:#5c5c5c}.dark-theme .aplayer .aplayer-body{background-color:#212121}.dark-theme .aplayer .aplayer-info{border-top-color:#212121}.dark-theme .aplayer .aplayer-info .aplayer-music .aplayer-title{color:#fff}.dark-theme .aplayer .aplayer-info .aplayer-music .aplayer-author{color:#fff}.dark-theme .aplayer .aplayer-info .aplayer-controller .aplayer-time{color:#eee}.dark-theme .aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon path{fill:#eee}.dark-theme .aplayer .aplayer-list{background-color:#212121}.dark-theme .aplayer .aplayer-list::-webkit-scrollbar-thumb{background-color:#999}.dark-theme .aplayer .aplayer-list::-webkit-scrollbar-thumb:hover{background-color:#bbb}.dark-theme .aplayer .aplayer-list li{color:#fff;border-top-color:#666}.dark-theme .aplayer .aplayer-list li:hover{background:#4e4e4e}.dark-theme .aplayer .aplayer-list li.aplayer-list-light{background:#6c6c6c}.dark-theme .aplayer .aplayer-list li .aplayer-list-index{color:#ddd}.dark-theme .aplayer .aplayer-list li .aplayer-list-author{color:#ddd}.dark-theme .aplayer .aplayer-lrc{text-shadow:-1px -1px 0 #666}.dark-theme .aplayer .aplayer-lrc:before{background:-moz-linear-gradient(top, #212121 0%, rgba(33,33,33,0) 100%);background:-webkit-linear-gradient(top, #212121 0%, rgba(33,33,33,0) 100%);background:linear-gradient(to bottom, #212121 0%, rgba(33,33,33,0) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=&#39;#212121&#39;, endColorstr=&#39;#00212121&#39;,GradientType=0 )}.dark-theme .aplayer .aplayer-lrc:after{background:-moz-linear-gradient(top, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);background:-webkit-linear-gradient(top, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);background:linear-gradient(to bottom, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=&#39;#00212121&#39;, endColorstr=&#39;#cc212121&#39;,GradientType=0 )}.dark-theme .aplayer .aplayer-lrc p{color:#fff}.dark-theme .aplayer .aplayer-miniswitcher{background:#484848}.dark-theme .aplayer .aplayer-miniswitcher .aplayer-icon path{fill:#eee}&lt;/style&gt;
&lt;script src=&#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js&#34;&gt;&lt;/script&gt;&lt;meting-js server=&#34;netease&#34; type=&#34;song&#34; id=&#34;1494525139&#34; theme=&#34;#2980b9&#34;&gt;&lt;/meting-js&gt;
&lt;/blockquote&gt;
&lt;p&gt;今天的任务是理清楚heat_solver的框架，手绘出一个框架的草图。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;以下是计算rectangle的模型，disk再说&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;参数部分&#34;&gt;参数部分&lt;/h3&gt;
&lt;p&gt;首先&lt;code&gt;heat_solver&lt;/code&gt;在参数读取部分会有两个&lt;code&gt;.txt&lt;/code&gt;文件：分别命名为&lt;code&gt;para_model.txt&lt;/code&gt;以及&lt;code&gt;para_numerical.txt&lt;/code&gt;。分别表示了模型参数与数值模拟的参数。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;para_model.txt&lt;/code&gt;的文件的内容为&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#parameter_model&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#boundary Lx ,Ly&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#initial data \alpha \beta&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;para_numerical.txt&lt;/code&gt;的文件的内容为&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#parameter_numerical simulation&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#final time T&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Number of meshes Nx, Ny&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#The num of Guass quadrature point&lt;/span&gt;
&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;类的使用&#34;&gt;类的使用&lt;/h3&gt;
&lt;p&gt;大概类似于C里面的&lt;code&gt;struct&lt;/code&gt;，Python使用类，我们定义一个模型类&lt;code&gt;datatype.py&lt;/code&gt;，方便调用与存储数据&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Lx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Ly&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;beta&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
       &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Lx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Lx&lt;/span&gt;
       &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Ly&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Ly&lt;/span&gt;
       &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alpha&lt;/span&gt;
       &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;beta&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;beta&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;主函数-mainpy-部分&#34;&gt;主函数&lt;code&gt;main.py&lt;/code&gt;部分&lt;/h3&gt;
&lt;h4 id=&#34;创建文件夹的函数&#34;&gt;创建文件夹的函数&lt;/h4&gt;
&lt;p&gt;需要为每次的计算创建三个文件夹来储存数据，分别是&lt;code&gt;/data&lt;/code&gt;、&lt;code&gt;/image&lt;/code&gt;、&lt;code&gt;/video&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这是&lt;code&gt;mkdir.py&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;mkdir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 去除首位空格&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 去除尾部 \ 符号&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rstrip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\\&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 判断路径是否存在&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 存在     True&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 不存在   False&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;isExists&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;c1&#34;&gt;# 判断结果&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isExists&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# 如果不存在则创建目录&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# 创建目录操作函数&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;makedirs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; 创建成功&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# 如果目录存在则不创建，并提示目录已存在&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39; 目录已存在&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在主程序中只需要命令特定的&lt;code&gt;path&lt;/code&gt;即可&lt;/p&gt;
&lt;h4 id=&#34;储存模型与计算数据的函数&#34;&gt;储存模型与计算数据的函数&lt;/h4&gt;
&lt;p&gt;将本次模拟计算的数据以二进制的形式储存到&lt;code&gt;/data&lt;/code&gt;中，当然，还需要写一个读取二进制文件的函数&lt;/p&gt;
&lt;p&gt;读取数据&lt;code&gt;readpara.py&lt;/code&gt;中包含了读取模型数据的&lt;code&gt;modreader&lt;/code&gt;和读取数值计算的&lt;code&gt;numreader&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# define the function to read the parameter of the model&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# meanwhile save the current test parameters as .txt&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# return a list of[Lx,Ly,alpha,beta]&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#oops,every element is also a list&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;modreader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;para&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/home/u_zalouti/srt/rectangle/para_model.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;file_object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;file_object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rstrip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isdigit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]):&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;para&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;para&lt;/span&gt;


&lt;span class=&#34;c1&#34;&gt;# define the function to read the parameter of the numerical computation&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# return a list of[T,Nx,Ny,num_of_guass]&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# the linenum of the parameters is&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# T--2   Nx--4  Ny--5  num_of_guass--7&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;numreader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;para&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/home/u_zalouti/srt/rectangle/para_numrical.txt&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;file_object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;file_object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rstrip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isdigit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]):&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;para&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;para&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;储存数据的&lt;code&gt;savepara.py&lt;/code&gt;中包含了储存模型数据的&lt;code&gt;modreader&lt;/code&gt;和储存数值计算的&lt;code&gt;numreader&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;numpy&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;np&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pickle&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;readpara&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;modreader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;numreader&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;modsaver&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;para&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;modreader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;save&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;para&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;astype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;float32&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/model.bin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;pickle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dump&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;save&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# define the function to save the model parameter as binary form&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# path is determined by main.py&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;numsaver&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;para&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;numreader&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;save&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;para&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;astype&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;float32&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/num.bin&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;pickle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dump&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;save&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# define the function to save the numerical parameter as binary form&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# path is determined by main.py&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;计算部分fundamental-solution&#34;&gt;计算部分(fundamental solution)&lt;/h4&gt;
&lt;p&gt;开始正式的计算，但是也分几步&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先划分网格，使用Gaussian积分，为每一个格点匹配对应的权重&lt;/li&gt;
&lt;li&gt;之后再在每一个网格上积分——一个求和——但注意是平面积分——求和两次&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;网格划分&lt;code&gt;mesh_div.py&lt;/code&gt;包括了根据读取的数据&lt;code&gt;Nx&lt;/code&gt;和&lt;code&gt;Ny&lt;/code&gt;划分网格&lt;code&gt;mesh&lt;/code&gt;，以及每个区间做区间变换&lt;code&gt;interval_tran&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;区间变换为：
$$
\int _{a}^{b}f(x)\ dx=\frac{b-a}{2}\int _{-1}^{1}f\left({\frac {b-a}{2}}\xi +{ \frac {a+b}{2}}\right)\ d\xi 
$$&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;numpy&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;np&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;mesh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Lx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ly&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Nx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ny&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;linspace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Lx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Nx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;linspace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ly&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ny&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;# 划分Nx个网格，需要有Nx+1个点&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# boundary Lx ,Ly&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# Number of meshes Nx, Ny&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;interval_tran&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;w&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;polynomial&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;legendre&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;leggauss&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;coff&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;coff&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# transform gaussian points from [-1,1] to [start,end]&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# n stands for the num of Gaussian points&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# start&amp;amp;end stand for the start and end of the interval&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# return the guassian points on new interval with their weights&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;积分部分&lt;code&gt;intergrate.py&lt;/code&gt;首先写一个非常一般的积分，即高斯求积法在$[-1,1]$上的积分
$$
\int_{-1}^1f(x)dx \approx \sum_{i=1}^nw_if_(x_i)
$$&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;int_basic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;point&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;func1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;func1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;point&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;  
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后得到一维的高斯求积法为&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;int_1D&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;func1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;point&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;coff&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;interval_tran&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;coff&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;int_basic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;point&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;func1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;考虑到区间变换，则二维的高斯求积法可以被写作
$$
\int_{x_1}^{x_2}\int_{y_1}^{y_2}f(x,y)dydx =\\
\\ 
\frac{x_2-x_1}{2}\frac{y_2-y_1}{2}\int^1_{-1}\int_{-1}^1f(\frac{x_2-x_1}{2}x+\frac{x_2+x_1}{2},\frac{y_2-y_1}{2}y+\frac{y_2+y_1}{2})\\
\approx \frac{x_2-x_1}{2}\frac{y_2-y_1}{2}\sum_{j=1}^m\sum_{i=1}^nw_iw_jf(x_i,y_j)
$$
我们可以看到，上述二维的表达式中，最后一项两个求和可以采用向量化编程的形式，减少&lt;code&gt;for&lt;/code&gt;循环的出现，即为：
$$
\sum_{j=1}^m\sum_{i=1}^nw_iw_jf(x_i,y_j)=
\begin{pmatrix}
w_1&amp;amp;w_2&amp;amp;\cdots&amp;amp;w_n
\end{pmatrix}
\begin{pmatrix}
f(x_1,y_1)&amp;amp;\cdots&amp;amp;f(x_1,y_m)\\
\vdots&amp;amp;&amp;amp;\vdots\\
f(x_n,y_1)&amp;amp;\cdots&amp;amp;f(x_n,y_m)
\end{pmatrix}
\begin{pmatrix}
w_1\\ w_2\\ w_m
\end{pmatrix}\\
=det\begin{pmatrix}
f(x_1,y_1)&amp;amp;\cdots&amp;amp;f(x_1,y_m)\\
\vdots&amp;amp;&amp;amp;\vdots\\
f(x_n,y_1)&amp;amp;\cdots&amp;amp;f(x_n,y_m)
\end{pmatrix}
\begin{pmatrix}
w_1\\ w_2\\ w_m
\end{pmatrix}
\begin{pmatrix}
w_1&amp;amp;w_2&amp;amp;\cdots&amp;amp;w_n
\end{pmatrix}
$$
代码实现为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;int_2D&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;func2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;x_point&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x_weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x_coff&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;interval_tran&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;y_point&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y_weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y_coff&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;interval_tran&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;w2d&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;outer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y_weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x_weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;p2d&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;meshgrid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x_point&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y_point&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x_coff&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y_coff&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;func2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p2d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w2d&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;明天解决的任务&#34;&gt;明天解决的任务&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;写出基本解的积分并验证两个算例&lt;/li&gt;
&lt;li&gt;还需要写一个自动生成路径&lt;code&gt;PATH&lt;/code&gt;的函数，以便生成文件夹&lt;/li&gt;
&lt;li&gt;学会绘图并保存为&lt;code&gt;.eps&lt;/code&gt;格式&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;日寄本体&#34;&gt;日寄本体……&lt;/h2&gt;
&lt;p&gt;英语已经好久没有开始学习了……得马上速速把计划做起来……&lt;/p&gt;
&lt;p&gt;今晚先听一下听力课，明天起就可以开始练听力了……&lt;/p&gt;
&lt;p&gt;oops，明天是不是还要开始打卡了……&lt;/p&gt;
&lt;p&gt;看看这代码的样子，比那个垃圾微信公众号好多了！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;参考网站与文献：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/monsteryang/p/6574550.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.cnblogs.com/monsteryang/p/6574550.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Gaussian_quadrature&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://en.wikipedia.org/wiki/Gaussian_quadrature&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://kz16.top/na/Guass&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://kz16.top/na/Guass&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>01-12</title>
        <link>https://zalouti.github.io/p/01-12/</link>
        <pubDate>Wed, 12 Jan 2022 09:38:18 +0800</pubDate>
        
        <guid>https://zalouti.github.io/p/01-12/</guid>
        <description>&lt;h1 id=&#34;今日任务&#34;&gt;今日任务&lt;/h1&gt;
&lt;blockquote&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css&#34;&gt;
&lt;style type=&#34;text/css&#34;&gt;.dark-theme .aplayer{background:#212121}.dark-theme .aplayer.aplayer-withlist .aplayer-info{border-bottom-color:#5c5c5c}.dark-theme .aplayer.aplayer-fixed .aplayer-list{border-color:#5c5c5c}.dark-theme .aplayer .aplayer-body{background-color:#212121}.dark-theme .aplayer .aplayer-info{border-top-color:#212121}.dark-theme .aplayer .aplayer-info .aplayer-music .aplayer-title{color:#fff}.dark-theme .aplayer .aplayer-info .aplayer-music .aplayer-author{color:#fff}.dark-theme .aplayer .aplayer-info .aplayer-controller .aplayer-time{color:#eee}.dark-theme .aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon path{fill:#eee}.dark-theme .aplayer .aplayer-list{background-color:#212121}.dark-theme .aplayer .aplayer-list::-webkit-scrollbar-thumb{background-color:#999}.dark-theme .aplayer .aplayer-list::-webkit-scrollbar-thumb:hover{background-color:#bbb}.dark-theme .aplayer .aplayer-list li{color:#fff;border-top-color:#666}.dark-theme .aplayer .aplayer-list li:hover{background:#4e4e4e}.dark-theme .aplayer .aplayer-list li.aplayer-list-light{background:#6c6c6c}.dark-theme .aplayer .aplayer-list li .aplayer-list-index{color:#ddd}.dark-theme .aplayer .aplayer-list li .aplayer-list-author{color:#ddd}.dark-theme .aplayer .aplayer-lrc{text-shadow:-1px -1px 0 #666}.dark-theme .aplayer .aplayer-lrc:before{background:-moz-linear-gradient(top, #212121 0%, rgba(33,33,33,0) 100%);background:-webkit-linear-gradient(top, #212121 0%, rgba(33,33,33,0) 100%);background:linear-gradient(to bottom, #212121 0%, rgba(33,33,33,0) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=&#39;#212121&#39;, endColorstr=&#39;#00212121&#39;,GradientType=0 )}.dark-theme .aplayer .aplayer-lrc:after{background:-moz-linear-gradient(top, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);background:-webkit-linear-gradient(top, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);background:linear-gradient(to bottom, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=&#39;#00212121&#39;, endColorstr=&#39;#cc212121&#39;,GradientType=0 )}.dark-theme .aplayer .aplayer-lrc p{color:#fff}.dark-theme .aplayer .aplayer-miniswitcher{background:#484848}.dark-theme .aplayer .aplayer-miniswitcher .aplayer-icon path{fill:#eee}&lt;/style&gt;
&lt;script src=&#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js&#34;&gt;&lt;/script&gt;&lt;meting-js server=&#34;netease&#34; type=&#34;song&#34; id=&#34;1494525139&#34; theme=&#34;#2980b9&#34;&gt;&lt;/meting-js&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;博客建设&#34;&gt;博客建设&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;实现网抑云博客播放 搞定！&lt;/li&gt;
&lt;li&gt;探究评论回复系统&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;学习&#34;&gt;学习&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;大雾振动结束&lt;/li&gt;
&lt;li&gt;TOEFL听一节课&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;计划&#34;&gt;计划&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;学习tasklist的使用&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;磕盐&#34;&gt;磕盐&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;重新规划heat-solver的写法&lt;/li&gt;
&lt;li&gt;看一篇文献&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>第二基地</title>
        <link>https://zalouti.github.io/p/%E7%AC%AC%E4%BA%8C%E5%9F%BA%E5%9C%B0/</link>
        <pubDate>Tue, 11 Jan 2022 01:00:00 +0200</pubDate>
        
        <guid>https://zalouti.github.io/p/%E7%AC%AC%E4%BA%8C%E5%9F%BA%E5%9C%B0/</guid>
        <description>&lt;img src="https://zalouti.github.io/p/%E7%AC%AC%E4%BA%8C%E5%9F%BA%E5%9C%B0/cover.png" alt="Featured image of post 第二基地" /&gt;&lt;h1 id=&#34;第二基地&#34;&gt;第二基地&lt;/h1&gt;
&lt;blockquote&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css&#34;&gt;
&lt;style type=&#34;text/css&#34;&gt;.dark-theme .aplayer{background:#212121}.dark-theme .aplayer.aplayer-withlist .aplayer-info{border-bottom-color:#5c5c5c}.dark-theme .aplayer.aplayer-fixed .aplayer-list{border-color:#5c5c5c}.dark-theme .aplayer .aplayer-body{background-color:#212121}.dark-theme .aplayer .aplayer-info{border-top-color:#212121}.dark-theme .aplayer .aplayer-info .aplayer-music .aplayer-title{color:#fff}.dark-theme .aplayer .aplayer-info .aplayer-music .aplayer-author{color:#fff}.dark-theme .aplayer .aplayer-info .aplayer-controller .aplayer-time{color:#eee}.dark-theme .aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon path{fill:#eee}.dark-theme .aplayer .aplayer-list{background-color:#212121}.dark-theme .aplayer .aplayer-list::-webkit-scrollbar-thumb{background-color:#999}.dark-theme .aplayer .aplayer-list::-webkit-scrollbar-thumb:hover{background-color:#bbb}.dark-theme .aplayer .aplayer-list li{color:#fff;border-top-color:#666}.dark-theme .aplayer .aplayer-list li:hover{background:#4e4e4e}.dark-theme .aplayer .aplayer-list li.aplayer-list-light{background:#6c6c6c}.dark-theme .aplayer .aplayer-list li .aplayer-list-index{color:#ddd}.dark-theme .aplayer .aplayer-list li .aplayer-list-author{color:#ddd}.dark-theme .aplayer .aplayer-lrc{text-shadow:-1px -1px 0 #666}.dark-theme .aplayer .aplayer-lrc:before{background:-moz-linear-gradient(top, #212121 0%, rgba(33,33,33,0) 100%);background:-webkit-linear-gradient(top, #212121 0%, rgba(33,33,33,0) 100%);background:linear-gradient(to bottom, #212121 0%, rgba(33,33,33,0) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=&#39;#212121&#39;, endColorstr=&#39;#00212121&#39;,GradientType=0 )}.dark-theme .aplayer .aplayer-lrc:after{background:-moz-linear-gradient(top, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);background:-webkit-linear-gradient(top, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);background:linear-gradient(to bottom, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=&#39;#00212121&#39;, endColorstr=&#39;#cc212121&#39;,GradientType=0 )}.dark-theme .aplayer .aplayer-lrc p{color:#fff}.dark-theme .aplayer .aplayer-miniswitcher{background:#484848}.dark-theme .aplayer .aplayer-miniswitcher .aplayer-icon path{fill:#eee}&lt;/style&gt;
&lt;script src=&#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js&#34;&gt;&lt;/script&gt;&lt;meting-js server=&#34;netease&#34; type=&#34;song&#34; id=&#34;1484862050&#34; theme=&#34;#2980b9&#34;&gt;&lt;/meting-js&gt;
&lt;/blockquote&gt;
&lt;p&gt;经过一学期与命令行操作、git、github的搏斗，我终于明白git的push和pull是在干什么😥回想起每次凌晨3点的寒冷，我看着cmd和git的报错毫无头绪的绝望，终于在今天候机楼的最后一搏中结束了这场战斗。我拥有了这个前互联网时代的产品——&lt;strong&gt;第一个个人博客。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;此为序言，亦是新的开端。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;如无必要勿增实体&#34;&gt;“如无必要，勿增实体”&lt;/h2&gt;
&lt;p&gt;正如标题所言的奥卡姆剃刀原理，既然你都有一个公众号了，何必再折腾搞一个博客呢？&lt;/p&gt;
&lt;p&gt;我将控诉微信的&lt;strong&gt;原罪与傲慢&lt;/strong&gt;，这是我搭建博客的外在原因。&lt;/p&gt;
&lt;h3 id=&#34;丑陋而沉重的界面排版&#34;&gt;丑陋而沉重的界面排版&lt;/h3&gt;
&lt;p&gt;对于简洁的美学我毫无抵抗力，尤其是乔布斯所创造的独特的科技审美。&lt;/p&gt;
&lt;p&gt;然而，简洁并不代表苍白与丑陋：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;微信公众平台的内置排版系统简陋到令人发指&lt;/li&gt;
&lt;li&gt;对于图片的优化几乎为0，一旦开始上传图片就会卡成村通网，以及无法容忍的压缩图片画质&lt;/li&gt;
&lt;li&gt;必须借助第三方排版网页排版的功能令人烦躁，手机登录的逻辑画蛇添足&lt;/li&gt;
&lt;li&gt;莫名其妙的 1 : 2.35&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;对于互联网原教旨的背叛&#34;&gt;对于互联网原教旨的背叛&lt;/h3&gt;
&lt;p&gt;互联网再其诞生之初，是为了让信息更好地流通，让每个人都更加平等地获取信息。其中，&lt;strong&gt;平等、共享、自由&lt;/strong&gt;这是互联网精神的原教旨。&lt;/p&gt;
&lt;p&gt;让我们看看微信公众号干了什么：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;禁止插入外链，只能链接微信公众号文章&lt;/li&gt;
&lt;li&gt;免费情况下，只提供少数小程序接口&lt;/li&gt;
&lt;li&gt;小程序本身就是一个非常奇怪的产品&lt;/li&gt;
&lt;li&gt;莫名其妙的言论审查机制&lt;/li&gt;
&lt;li&gt;一天只能发一篇的诡异逻辑&lt;/li&gt;
&lt;li&gt;公众号失去了评论功能，成为了单向度的输出，没有互动，没有生命&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;trigger-to-tittytainment&#34;&gt;Trigger to Tittytainment&lt;/h3&gt;
&lt;p&gt;查看微信公众号总会导致在微信上停留过多的时间……每次对于微信公众号阅读数的在意也会让我花费相当多的时间去反复查看。往往一个小时就过去了……&lt;/p&gt;
&lt;h2 id=&#34;群星的尽头&#34;&gt;“群星的尽头”&lt;/h2&gt;
&lt;p&gt;第二基地的灵感来自于艾西莫夫的《基地》系列。为了尽量缩短银河帝国覆灭后的至暗时期，书中的传奇数学家——哈里·谢顿提出了谢顿计划，在银河的两端分设了两个基地，共同保证谢顿计划的发展。第一基地，主要发展新的科技；第二基地则位于“群星的尽头”，在暗中用心灵科技守护谢顿计划。&lt;/p&gt;
&lt;p&gt;那么同样，微信公众号有其缺陷的一面，那么我们不妨设立一个第二基地，它同样位于“银河的另一端”。功能分设如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;五道口菜鸡养殖场&lt;/em&gt;：只负责学习资料的上传与分享&lt;/li&gt;
&lt;li&gt;&lt;em&gt;第二基地&lt;/em&gt;：保存所有的markdown文件，以及保存个人随笔、感想、计划、总结，占据主导地位。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;obliviate&#34;&gt;&lt;em&gt;“Obliviate”&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;正如第二基地的人可以为第一基地的人进行心灵改造、Harry Potter中也有&lt;em&gt;&lt;strong&gt;Obliviate&lt;/strong&gt;&lt;/em&gt; 的存在，为了明哲保身与进行计划定位的调整，公众号将逐渐抹除以往学习功能之外的东西。&lt;/p&gt;
&lt;p&gt;但是正如第二基地的隐喻一般，哪里是&lt;strong&gt;群星的尽头&lt;/strong&gt;?&lt;/p&gt;
&lt;p&gt;所以，我将第二基地的入口藏在了……&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://imgtu.com/i/7m4Zh6&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s4.ax1x.com/2022/01/11/7m4Zh6.png&#34; &gt;
		&lt;img src=&#34;https://s4.ax1x.com/2022/01/11/7m4Zh6.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;非常符合《基地》的思路&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;非常符合《基地》的思路&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;END&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>那位西工大的同学带来的感想</title>
        <link>https://zalouti.github.io/p/%E9%82%A3%E4%BD%8D%E8%A5%BF%E5%B7%A5%E5%A4%A7%E7%9A%84%E5%90%8C%E5%AD%A6%E5%B8%A6%E6%9D%A5%E7%9A%84%E6%84%9F%E6%83%B3/</link>
        <pubDate>Sat, 20 Mar 2021 01:00:00 +0200</pubDate>
        
        <guid>https://zalouti.github.io/p/%E9%82%A3%E4%BD%8D%E8%A5%BF%E5%B7%A5%E5%A4%A7%E7%9A%84%E5%90%8C%E5%AD%A6%E5%B8%A6%E6%9D%A5%E7%9A%84%E6%84%9F%E6%83%B3/</guid>
        <description>&lt;img src="https://zalouti.github.io/p/%E9%82%A3%E4%BD%8D%E8%A5%BF%E5%B7%A5%E5%A4%A7%E7%9A%84%E5%90%8C%E5%AD%A6%E5%B8%A6%E6%9D%A5%E7%9A%84%E6%84%9F%E6%83%B3/cover.jpeg" alt="Featured image of post 那位西工大的同学带来的感想" /&gt;&lt;blockquote&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css&#34;&gt;
&lt;style type=&#34;text/css&#34;&gt;.dark-theme .aplayer{background:#212121}.dark-theme .aplayer.aplayer-withlist .aplayer-info{border-bottom-color:#5c5c5c}.dark-theme .aplayer.aplayer-fixed .aplayer-list{border-color:#5c5c5c}.dark-theme .aplayer .aplayer-body{background-color:#212121}.dark-theme .aplayer .aplayer-info{border-top-color:#212121}.dark-theme .aplayer .aplayer-info .aplayer-music .aplayer-title{color:#fff}.dark-theme .aplayer .aplayer-info .aplayer-music .aplayer-author{color:#fff}.dark-theme .aplayer .aplayer-info .aplayer-controller .aplayer-time{color:#eee}.dark-theme .aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon path{fill:#eee}.dark-theme .aplayer .aplayer-list{background-color:#212121}.dark-theme .aplayer .aplayer-list::-webkit-scrollbar-thumb{background-color:#999}.dark-theme .aplayer .aplayer-list::-webkit-scrollbar-thumb:hover{background-color:#bbb}.dark-theme .aplayer .aplayer-list li{color:#fff;border-top-color:#666}.dark-theme .aplayer .aplayer-list li:hover{background:#4e4e4e}.dark-theme .aplayer .aplayer-list li.aplayer-list-light{background:#6c6c6c}.dark-theme .aplayer .aplayer-list li .aplayer-list-index{color:#ddd}.dark-theme .aplayer .aplayer-list li .aplayer-list-author{color:#ddd}.dark-theme .aplayer .aplayer-lrc{text-shadow:-1px -1px 0 #666}.dark-theme .aplayer .aplayer-lrc:before{background:-moz-linear-gradient(top, #212121 0%, rgba(33,33,33,0) 100%);background:-webkit-linear-gradient(top, #212121 0%, rgba(33,33,33,0) 100%);background:linear-gradient(to bottom, #212121 0%, rgba(33,33,33,0) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=&#39;#212121&#39;, endColorstr=&#39;#00212121&#39;,GradientType=0 )}.dark-theme .aplayer .aplayer-lrc:after{background:-moz-linear-gradient(top, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);background:-webkit-linear-gradient(top, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);background:linear-gradient(to bottom, rgba(33,33,33,0) 0%, rgba(33,33,33,0.8) 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr=&#39;#00212121&#39;, endColorstr=&#39;#cc212121&#39;,GradientType=0 )}.dark-theme .aplayer .aplayer-lrc p{color:#fff}.dark-theme .aplayer .aplayer-miniswitcher{background:#484848}.dark-theme .aplayer .aplayer-miniswitcher .aplayer-icon path{fill:#eee}&lt;/style&gt;
&lt;script src=&#34;https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js&#34;&gt;&lt;/script&gt;&lt;meting-js server=&#34;netease&#34; type=&#34;song&#34; id=&#34;4278389&#34; theme=&#34;#2980b9&#34;&gt;&lt;/meting-js&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;一点点妄论，如果这也使你有些许共鸣，那就最好不过了。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今几日心里颇不宁静，在日常生活的压力中浸淫已久，甚至忘却了时间，直到看到高老师的公众号里校外的春光——原来今天是春分啊。&lt;/p&gt;
&lt;p&gt;这个学期并不清闲，甚至是没有清闲。数分高代压力不减反增，史纲任务量繁多，工图大化也没有时间复习，德语在假期草草玩了一点点，但在开学之初就已经忘光了；社工任务丝毫不水，科协的技术宣传部秉着fly bitch的原则确实可以学会很多东西，然而也确实占时间；科研的进展预计也依旧是flybitch，所幸学生节落选了……&lt;/p&gt;
&lt;p&gt;前几天高中派活，要写一个两三百字的东西，告诫学弟学妹不要拖延，虽然并不是很想写，但还是胡乱编了一些充数。令人惊讶的是，高中生活已经在我的脑海中形销影蚀——我只能从我的大学生活中寻找灵感，于是我写出了这样的垃圾文字：&lt;/p&gt;
&lt;p&gt;直到今日，在我的大学生活80%以上的日子，我依然遵循着高中的作息时间：5点50起床晨跑5公里，之后奔赴于各个教室，抑或在图书馆自习，伴着教学楼的闭馆铃声，22：30下自习，23：00宿舍熄灯睡觉。或许你会觉得我是在危言耸听，但现实是，这是我和我大多数同学的生活，平凡，真实。清华的校歌这样唱“行健不息须自强”，作为一名行健书院的学生，我们也常常调侃自己“行健”、“不（休）息”。&lt;/p&gt;
&lt;p&gt;讽刺的是，在我写完这些垃圾的第二天，我的一位同学在朋友圈里狠批西北工业大学的那位同学。历史不过是在上演昨天的故事，相似的作息时间表被媒体吹捧的故事至今仍被拿去给高三生打鸡血。这件事情让我疑惑：有必要这样累吗？&lt;/p&gt;
&lt;p&gt;随着这位西工大同学的报道在我的朋友圈刷屏，画风也逐渐趋向于两极——基于对于努力者的称赞与羡慕，以及，更多的，对于这种行为的不屑一顾。我成为了一场隐秘战争的观战者，策源于几千公里之外，投射于虚拟的朋友圈，上演于自己的内心。“有必要这样累吗？”这个问题同样是对我的问题，同样，又有一个老问题，“这是卷吗？”&lt;/p&gt;
&lt;p&gt;为了再次讨论这个问题，我回顾了当我在看完&lt;a class=&#34;link&#34; href=&#34;https://zalouti.github.io/p/%E9%A9%AC%E5%85%B0%E8%8A%B1%E5%BC%80%E5%86%99%E4%BA%8E%E5%86%85%E5%8D%B7%E7%9A%84%E9%97%B4%E9%9A%99/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;马兰花开之后的随笔&lt;/a&gt;，总体上来看，那次的随笔更像是一次集体情绪输出下的不甚成熟的思考产物，并未提出什么有创见的观点，只不过是单纯强调“do our best”的权宜之计。And then？的确没有解决方案……&lt;/p&gt;
&lt;p&gt;但是第一次的随笔也并非一无是处，具体来讲，是这句话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你要区分热爱与意志力。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们不妨换一种语言来重新叙述那段垃圾文字，或许，它可以这样写：&lt;/p&gt;
&lt;p&gt;那正是你所羡慕的大学生活：呼吸着校园第一缕晨光，与晨跑队的小伙伴们享受校园四时风光，晨跑结束后还能蹭吃蹭喝，开启充满活力的一天。在清华，你可以见到“教科书里的人”，也可以享受国内一流的教室与图书馆，聆教大师，享受求知之乐，在社工锻炼自己的自学能力，逐渐成为技术达人，还能在课余时间探访实验室，开启本科生科研的探索旅程。在夜幕中与同学分享自己有趣的X-idea，听着校河的水声潺潺戴月而归。&lt;/p&gt;
&lt;p&gt;这是同一段生活？这是同一段生活。我总想给自己加上那些让其他人羡慕的选项，想把自己拼凑成自己理想中的模样，只不过，正如“一张每一道题目都是好题的试卷就是一张垃圾试卷”的道理一样，每一个领域都想有所涉猎的兴趣终究会因为与这些兴趣相伴的代价而转化为压力。与此同时，自己就会变得患得患失，一边担心自己会丧失追求兴趣的机会，一边又害怕在日常的竞争中位居人后，这或许便是这几天焦虑的来源……&lt;/p&gt;
&lt;p&gt;那么回到那个老生常谈的问题——什么是卷？二元对立的“热爱与意志力”说在现实生活中并不完全成立，很多事并不是只有热爱就可以做好的，这种理论的缺陷在于，一旦感觉到开始调用自己的意志力，就会在潜意识中认为，这是一种burden。&lt;/p&gt;
&lt;p&gt;修正的定义是：动卷心即卷，心无卷则非卷。&lt;/p&gt;
&lt;p&gt;又问：如何令心不动？&lt;/p&gt;
&lt;p&gt;答：用心若镜，物来则应，物去不留。&lt;/p&gt;
&lt;p&gt;以往给自己设计的目标都是类似于KPI的考核指标，当自己取得了一点点成绩是就止不住兴奋，这何尝不是一种期待外物来满足自己的心态，只不过它带着一顶努力的帽子，更具有伪装性罢了。只有今晚停下来的时候才发现，自己又只是凭借着本能前行，却不知道路在哪里？若有人问起你是怎样做到这样所谓努力与自律的，自己也其实一团雾水。说白了，不就是给自己的未来画一个个饼吗……唯有放下希望的心，失望才会彻底消失。&lt;/p&gt;
&lt;p&gt;突然想起古仁人之心，不以物喜，可真是大境界啊……&lt;/p&gt;
&lt;p&gt;昨天在科研导引课上接触了OKR的概念，与KPI的区别，今晚细细思索，不正是心中有卷与心中无卷的区别所在吗？上学期的写沟课的长文，不正是自己选题，期待用人类学的视角发现一些有趣的事情，我不能说这其中没有意志力的因素，至少在冬天夜晚零下十几度的寒风中骑车并不是一件和热爱挂钩的事情，但是正是这种OKR的制定，最后在写长文的时候写出了自己写沟课上写得最畅快淋漓的一篇文章。前面关于同一段生活的两种叙述，不正是KPI与OKR的视角吗？&lt;/p&gt;
&lt;p&gt;古仁人之心，不以己悲，又是另一层更高的境界了……&lt;/p&gt;
&lt;p&gt;领悟并不是一种成就，而是一种体会。当我明早醒来时，一切都改变了，但是一切又都没有改变。&lt;/p&gt;
&lt;p&gt;不过，明天就当给自己放个假，记得去看看春天呐。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>马兰花开——写于内卷的间隙</title>
        <link>https://zalouti.github.io/p/%E9%A9%AC%E5%85%B0%E8%8A%B1%E5%BC%80%E5%86%99%E4%BA%8E%E5%86%85%E5%8D%B7%E7%9A%84%E9%97%B4%E9%9A%99/</link>
        <pubDate>Wed, 30 Sep 2020 01:00:00 +0200</pubDate>
        
        <guid>https://zalouti.github.io/p/%E9%A9%AC%E5%85%B0%E8%8A%B1%E5%BC%80%E5%86%99%E4%BA%8E%E5%86%85%E5%8D%B7%E7%9A%84%E9%97%B4%E9%9A%99/</guid>
        <description>&lt;img src="https://zalouti.github.io/p/%E9%A9%AC%E5%85%B0%E8%8A%B1%E5%BC%80%E5%86%99%E4%BA%8E%E5%86%85%E5%8D%B7%E7%9A%84%E9%97%B4%E9%9A%99/%E9%A9%AC%E5%85%B0%E8%8A%B1%E5%BC%80.png" alt="Featured image of post 马兰花开——写于内卷的间隙" /&gt;&lt;h1 id=&#34;马兰花开写于内卷的间隙&#34;&gt;马兰花开——写于内卷的间隙&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;这是第一次看完《马兰花开》后的一点点感想，好多观点自己现在都不一定认同，但是考古看看之前写的东西也是一种享受。&lt;/p&gt;
&lt;p&gt;希望能对你有些帮助。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://imgtu.com/i/7uVReO&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;figure 
	&gt;
	&lt;a href=&#34;https://s4.ax1x.com/2022/01/12/7uVReO.png&#34; &gt;
		&lt;img src=&#34;https://s4.ax1x.com/2022/01/12/7uVReO.png&#34;
			
			
			
			loading=&#34;lazy&#34;
			alt=&#34;入场前&#34;&gt;
	&lt;/a&gt;
	
	&lt;figcaption&gt;入场前&lt;/figcaption&gt;
	
&lt;/figure&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打脸*n&lt;/p&gt;
&lt;p&gt;之前还觉得这场话剧是无意义的浪费时间，一切的念头在这场话剧开始之时便灰飞烟灭：本以为是套话空话连缀出的样板戏，没想到却成为了在卷卷卷之外的精神皈依，笑点泪点拿捏恰当，演职人员演技过硬，幸亏没有把这张票转手……&lt;/p&gt;
&lt;p&gt;然而，马兰花开，不只是在今晚。&lt;/p&gt;
&lt;p&gt;近来，位于T大舆论浪尖的“卷”，以“学堂路车神”为引爆点，引起了大家接连不断的讨论。作为高校所谓“囚徒困境”的一员，对于卷同样是百感交集：“卷”的产生本源自大家想要保持优秀与领先的优越感的人之常情，然而我们却在不断的内耗之中将时间用于低效的“卷”。进一步，随着“卷”的概念的扩大，“卷”的边界渐渐模糊，我们每天正常完成作业被调侃为“卷”，正常学习理解概念被戏谑为“卷”，甚至出现了“一天不说卷”挑战，我们固然可以将其视作T大卷风语境下大家对于压力排遣的一种方式。&lt;/p&gt;
&lt;p&gt;然而这对于问题的解决毫无帮助。&lt;/p&gt;
&lt;p&gt;曾经看到过一个关于“卷”的思考的视频，讨论者一针见血地指出，卷是个由于资源有限而产生的制度性问题。这确实是真知灼见，然而需要指出的是，T大历史上也存在制度性的绩点改革，好处是，大家的绩点都看起来更nice，然而“卷”的风气一脉相承，它只不过是在不同时间以不同的面孔现身而已，过去的“踩踏效应”，今天的“卷”，显然，在目前无法做大蛋糕的时候，这种“开根乘十”的做法只不过杯水车薪。&lt;/p&gt;
&lt;p&gt;还记得在高三的成绩低谷时，我也曾经尝试过比别人早起，比别人更快吃饭，腾出更多时间来学习，用现在的行话来讲，就是“卷王”。然而这种生活是不可能持久的，在我身心俱疲时，感谢有位高人指点我——&lt;/p&gt;
&lt;p&gt;你要区分热爱与意志力。&lt;/p&gt;
&lt;p&gt;意志力终究是消耗品，而内外的困境与心智损耗却可以趋于无穷。然而热爱、信仰、所谓的理想，却可以取之不竭，用之不尽。记得有个学姐告诉我：跳出卷风的方法，便是在做某件事情之前，你先不会去想绩点、老师的看法、peer pressure ，而是在想，我如何把这件事做到自己的最好。或许“最好的自己”这种论调已经沦为稀松平常，然而在我看来，却是当下解决“卷”的个人最优解。&lt;/p&gt;
&lt;p&gt;担心被“卷”，从教育心理学的角度而言，这是对于损失逃避的过分关注，信心的建立来源于与他人的比较。当然我并不是全盘否定这种比较，恰如只要是考试，总会有第一和倒一，我只是在反对这种披着“卷”风外衣的变相恶性比较。我们的文化一直在告诉我们“满招损，谦受益”的哲理，可从来没有人向我们反复强调，极端谦虚本身难道不也是一种比较？这种心态恰好映射到担心被卷的焦虑，于是我们都在这场零和博弈中进行一场有限游戏。&lt;/p&gt;
&lt;p&gt;可惜，这些时间本可以做一些更有意义的事情的。&lt;/p&gt;
&lt;p&gt;在一次和某位高人喝下午茶的时候，出于对强基计划的好奇心，她问了我这样一个问题：“你觉得你有很强的家国情怀吗？”我愣住了，当时含糊其辞说了什么现在根本无法回想起来了，可笑的是，外界对强基计划的学生的博大宽广的家国情怀的臆想，在大多数学生身上，被“卷”风文化的peer pressure埋葬在了记忆深处，我们专注于一场激烈的有限游戏，却未曾想过背后存在无限游戏的可能。家国情怀这种东西当然不是天天挂在嘴上，然而直到今晚的《马兰花开》之前，我甚至都没有意识到我还是一个强基的学生，我的第一反应是，数分好难，高代好难……&lt;/p&gt;
&lt;p&gt;这也是为什么今天的《马兰花开》给我带来的精神震撼如此之大，以致于狂写千字文……之前以为情怀教育是P大的专利，可是今天的《马兰花开》着实唤醒了记忆中沉睡的一部分。人我何如？想清楚这个问题：人非我，我非人，骄傲不是骄傲，谦虚不是谦虚。个人的悲喜是如此的渺小，可我们又常常在孤芳自赏中嗟叹时不利兮，然而回眸凝望，远处的马兰花，才是在日常卷风之外的精神沃土。&lt;/p&gt;
&lt;p&gt;曾经有个好哥们问我：“为什么我可以从那些使我变得更加优秀的事情里真正获得乐趣？”当时我又被问懵了，然而今天的《马兰花开》可能为这个问题找了一个较为接近的答案吧：可能我们每个人的精神世界中都有那么一株马兰花，纵使外界的卷风日盛，可当你每次凝视那株马兰花时，心底的那份感动依旧不熄，支持我们继续前行。&lt;/p&gt;
&lt;p&gt;“扎根苍茫大地，深爱热土家园”，当歌词最后再次缓缓响起，泪目那一刻，真是竦体改容，顿觉自己的浅薄与无知。&lt;/p&gt;
&lt;p&gt;与君共勉。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
